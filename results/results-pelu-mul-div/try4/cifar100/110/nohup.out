{
  cudnn : "fastest"
  LR : 0.1
  nThreads : 2
  nClasses : 0
  batchSize : 256
  testOnly : false
  netType : "resnet-pelu-mul-div"
  resetClassifier : false
  shortcutType : "A"
  gen : "gen"
  nGPU : 1
  depth : 110
  weightDecay : 0.001
  data : ""
  dataset : "cifar100"
  epochNumber : 1
  manualSeed : 2
  resume : "results/results-pelu-mul-div/try4/cifar100/110"
  optimState : "none"
  nEpochs : 200
  tenCrop : false
  shareGradInput : false
  backend : "cudnn"
  momentum : 0.9
  retrain : "none"
}
=> Creating model from file: models/resnet-pelu-mul-div.lua	
 | ResNet-110 CIFAR-100	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1) without bias
  (2): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedMul
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedDiv
  }
  (3): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (4): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 32, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (5): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 64, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (6): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedMul
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedDiv
  }
  (7): cudnn.SpatialAveragePooling(8x8, 1,1)
  (8): nn.View(64)
  (9): nn.Linear(64 -> 100)
}
=> Training epoch # 1	
 * Finished epoch # 1     top1:  87.842  top5:  63.555
	
 * Best model 	87.841796875	63.5546875	
=> Training epoch # 2	
 * Finished epoch # 2     top1:  76.191  top5:  45.264
	
 * Best model 	76.19140625	45.263671875	
=> Training epoch # 3	
 * Finished epoch # 3     top1:  69.561  top5:  37.490
	
 * Best model 	69.560546875	37.490234375	
=> Training epoch # 4	
 * Finished epoch # 4     top1:  63.760  top5:  31.328
	
 * Best model 	63.759765625	31.328125	
=> Training epoch # 5	
 * Finished epoch # 5     top1:  63.994  top5:  29.678
	
=> Training epoch # 6	
 * Finished epoch # 6     top1:  58.594  top5:  24.648
	
 * Best model 	58.59375	24.6484375	
=> Training epoch # 7	
 * Finished epoch # 7     top1:  54.756  top5:  23.066
	
 * Best model 	54.755859375	23.06640625	
=> Training epoch # 8	
 * Finished epoch # 8     top1:  59.658  top5:  30.049
	
=> Training epoch # 9	
 * Finished epoch # 9     top1:  48.721  top5:  18.389
	
 * Best model 	48.720703125	18.388671875	
=> Training epoch # 10	
 * Finished epoch # 10     top1:  51.426  top5:  20.703
	
=> Training epoch # 11	
 * Finished epoch # 11     top1:  50.273  top5:  18.408
	
=> Training epoch # 12	
 * Finished epoch # 12     top1:  47.148  top5:  17.422
	
 * Best model 	47.1484375	17.421875	
=> Training epoch # 13	
 * Finished epoch # 13     top1:  50.576  top5:  19.502
	
=> Training epoch # 14	
 * Finished epoch # 14     top1:  52.441  top5:  23.428
	
=> Training epoch # 15	
 * Finished epoch # 15     top1:  47.666  top5:  18.125
	
=> Training epoch # 16	
 * Finished epoch # 16     top1:  48.496  top5:  18.809
	
=> Training epoch # 17	
 * Finished epoch # 17     top1:  49.873  top5:  19.443
	
=> Training epoch # 18	
 * Finished epoch # 18     top1:  50.273  top5:  20.742
	
=> Training epoch # 19	
 * Finished epoch # 19     top1:  48.369  top5:  18.076
	
=> Training epoch # 20	
 * Finished epoch # 20     top1:  46.660  top5:  18.232
	
 * Best model 	46.66015625	18.232421875	
=> Training epoch # 21	
 * Finished epoch # 21     top1:  50.176  top5:  20.176
	
=> Training epoch # 22	
 * Finished epoch # 22     top1:  45.498  top5:  17.197
	
 * Best model 	45.498046875	17.197265625	
=> Training epoch # 23	
 * Finished epoch # 23     top1:  52.236  top5:  21.006
	
=> Training epoch # 24	
 * Finished epoch # 24     top1:  46.123  top5:  16.797
	
=> Training epoch # 25	
 * Finished epoch # 25     top1:  47.871  top5:  18.154
	
=> Training epoch # 26	
 * Finished epoch # 26     top1:  46.387  top5:  17.129
	
=> Training epoch # 27	
 * Finished epoch # 27     top1:  44.414  top5:  15.391
	
 * Best model 	44.4140625	15.390625	
=> Training epoch # 28	
 * Finished epoch # 28     top1:  50.332  top5:  19.570
	
=> Training epoch # 29	
 * Finished epoch # 29     top1:  45.391  top5:  15.850
	
=> Training epoch # 30	
 * Finished epoch # 30     top1:  46.299  top5:  17.773
	
=> Training epoch # 31	
 * Finished epoch # 31     top1:  50.039  top5:  19.531
	
=> Training epoch # 32	
 * Finished epoch # 32     top1:  43.809  top5:  15.029
	
 * Best model 	43.80859375	15.029296875	
=> Training epoch # 33	
 * Finished epoch # 33     top1:  48.955  top5:  20.137
	
=> Training epoch # 34	
 * Finished epoch # 34     top1:  47.568  top5:  18.369
	
=> Training epoch # 35	
 * Finished epoch # 35     top1:  50.225  top5:  19.268
	
=> Training epoch # 36	
 * Finished epoch # 36     top1:  53.486  top5:  23.242
	
=> Training epoch # 37	
 * Finished epoch # 37     top1:  42.852  top5:  14.678
	
 * Best model 	42.8515625	14.677734375	
=> Training epoch # 38	
 * Finished epoch # 38     top1:  44.912  top5:  16.631
	
=> Training epoch # 39	
 * Finished epoch # 39     top1:  44.375  top5:  15.938
	
=> Training epoch # 40	
 * Finished epoch # 40     top1:  44.600  top5:  17.852
	
=> Training epoch # 41	
 * Finished epoch # 41     top1:  45.752  top5:  17.412
	
=> Training epoch # 42	
 * Finished epoch # 42     top1:  48.125  top5:  17.227
	
=> Training epoch # 43	
 * Finished epoch # 43     top1:  49.893  top5:  20.107
	
=> Training epoch # 44	
 * Finished epoch # 44     top1:  44.355  top5:  15.645
	
=> Training epoch # 45	
 * Finished epoch # 45     top1:  56.982  top5:  27.578
	
=> Training epoch # 46	
 * Finished epoch # 46     top1:  49.805  top5:  18.984
	
=> Training epoch # 47	
 * Finished epoch # 47     top1:  44.854  top5:  16.240
	
=> Training epoch # 48	
 * Finished epoch # 48     top1:  42.529  top5:  14.053
	
 * Best model 	42.529296875	14.052734375	
=> Training epoch # 49	
 * Finished epoch # 49     top1:  42.754  top5:  15.381
	
=> Training epoch # 50	
 * Finished epoch # 50     top1:  43.486  top5:  14.990
	
=> Training epoch # 51	
 * Finished epoch # 51     top1:  50.801  top5:  20.635
	
=> Training epoch # 52	
 * Finished epoch # 52     top1:  47.168  top5:  17.217
	
=> Training epoch # 53	
 * Finished epoch # 53     top1:  50.088  top5:  19.092
	
=> Training epoch # 54	
 * Finished epoch # 54     top1:  47.441  top5:  19.688
	
=> Training epoch # 55	
 * Finished epoch # 55     top1:  44.424  top5:  16.152
	
=> Training epoch # 56	
 * Finished epoch # 56     top1:  45.771  top5:  17.344
	
=> Training epoch # 57	
 * Finished epoch # 57     top1:  45.020  top5:  16.904
	
=> Training epoch # 58	
 * Finished epoch # 58     top1:  46.172  top5:  17.354
	
=> Training epoch # 59	
 * Finished epoch # 59     top1:  46.787  top5:  18.096
	
=> Training epoch # 60	
 * Finished epoch # 60     top1:  42.783  top5:  14.980
	
=> Training epoch # 61	
 * Finished epoch # 61     top1:  43.340  top5:  14.141
	
=> Training epoch # 62	
 * Finished epoch # 62     top1:  44.893  top5:  16.885
	
=> Training epoch # 63	
 * Finished epoch # 63     top1:  43.965  top5:  15.205
	
=> Training epoch # 64	
 * Finished epoch # 64     top1:  47.305  top5:  18.770
	
=> Training epoch # 65	
 * Finished epoch # 65     top1:  49.248  top5:  20.713
	
=> Training epoch # 66	
 * Finished epoch # 66     top1:  48.809  top5:  19.121
	
=> Training epoch # 67	
 * Finished epoch # 67     top1:  44.980  top5:  16.006
	
=> Training epoch # 68	
 * Finished epoch # 68     top1:  47.246  top5:  18.525
	
=> Training epoch # 69	
 * Finished epoch # 69     top1:  45.723  top5:  17.520
	
=> Training epoch # 70	
 * Finished epoch # 70     top1:  47.949  top5:  18.535
	
=> Training epoch # 71	
 * Finished epoch # 71     top1:  43.232  top5:  14.404
	
=> Training epoch # 72	
 * Finished epoch # 72     top1:  45.996  top5:  16.406
	
=> Training epoch # 73	
 * Finished epoch # 73     top1:  57.168  top5:  24.180
	
=> Training epoch # 74	
 * Finished epoch # 74     top1:  41.855  top5:  13.984
	
 * Best model 	41.85546875	13.984375	
=> Training epoch # 75	
 * Finished epoch # 75     top1:  44.395  top5:  15.781
	
=> Training epoch # 76	
 * Finished epoch # 76     top1:  46.680  top5:  17.744
	
=> Training epoch # 77	
 * Finished epoch # 77     top1:  48.008  top5:  18.838
	
=> Training epoch # 78	
 * Finished epoch # 78     top1:  48.242  top5:  18.662
	
=> Training epoch # 79	
 * Finished epoch # 79     top1:  49.365  top5:  17.627
	
=> Training epoch # 80	
 * Finished epoch # 80     top1:  45.850  top5:  17.451
	
=> Training epoch # 81	
 * Finished epoch # 81     top1:  28.115  top5:   7.178
	
 * Best model 	28.115234375	7.177734375	
=> Training epoch # 82	
 * Finished epoch # 82     top1:  28.301  top5:   7.354
	
=> Training epoch # 83	
 * Finished epoch # 83     top1:  28.203  top5:   7.158
	
=> Training epoch # 84	
 * Finished epoch # 84     top1:  28.877  top5:   6.963
	
=> Training epoch # 85	
 * Finished epoch # 85     top1:  29.229  top5:   7.510
	
=> Training epoch # 86	
 * Finished epoch # 86     top1:  29.941  top5:   7.852
	
=> Training epoch # 87	
 * Finished epoch # 87     top1:  29.678  top5:   8.506
	
=> Training epoch # 88	
 * Finished epoch # 88     top1:  30.391  top5:   8.525
	
=> Training epoch # 89	
 * Finished epoch # 89     top1:  32.930  top5:  10.312
	
=> Training epoch # 90	
 * Finished epoch # 90     top1:  31.445  top5:   9.033
	
=> Training epoch # 91	
 * Finished epoch # 91     top1:  32.607  top5:   9.219
	
=> Training epoch # 92	
 * Finished epoch # 92     top1:  32.588  top5:   9.619
	
=> Training epoch # 93	
 * Finished epoch # 93     top1:  33.379  top5:  10.322
	
=> Training epoch # 94	
 * Finished epoch # 94     top1:  35.205  top5:  11.338
	
=> Training epoch # 95	
 * Finished epoch # 95     top1:  31.348  top5:   9.609
	
=> Training epoch # 96	
 * Finished epoch # 96     top1:  37.832  top5:  12.100
	
=> Training epoch # 97	
 * Finished epoch # 97     top1:  35.713  top5:  11.113
	
=> Training epoch # 98	
 * Finished epoch # 98     top1:  34.688  top5:  10.537
	
=> Training epoch # 99	
 * Finished epoch # 99     top1:  38.525  top5:  13.984
	
=> Training epoch # 100	
 * Finished epoch # 100     top1:  36.514  top5:  11.504
	
=> Training epoch # 101	
 * Finished epoch # 101     top1:  34.805  top5:  10.723
	
=> Training epoch # 102	
 * Finished epoch # 102     top1:  33.320  top5:  10.986
	
=> Training epoch # 103	
 * Finished epoch # 103     top1:  36.230  top5:  12.441
	
=> Training epoch # 104	
 * Finished epoch # 104     top1:  36.133  top5:  11.729
	
=> Training epoch # 105	
 * Finished epoch # 105     top1:  35.830  top5:  11.484
	
=> Training epoch # 106	
 * Finished epoch # 106     top1:  37.627  top5:  13.613
	
=> Training epoch # 107	
 * Finished epoch # 107     top1:  35.771  top5:  11.387
	
=> Training epoch # 108	
 * Finished epoch # 108     top1:  36.982  top5:  11.768
	
=> Training epoch # 109	
 * Finished epoch # 109     top1:  37.266  top5:  13.047
	
=> Training epoch # 110	
 * Finished epoch # 110     top1:  36.113  top5:  11.602
	
=> Training epoch # 111	
 * Finished epoch # 111     top1:  38.154  top5:  13.242
	
=> Training epoch # 112	
 * Finished epoch # 112     top1:  35.068  top5:  11.191
	
=> Training epoch # 113	
 * Finished epoch # 113     top1:  42.100  top5:  15.498
	
=> Training epoch # 114	
 * Finished epoch # 114     top1:  39.775  top5:  13.457
	
=> Training epoch # 115	
 * Finished epoch # 115     top1:  39.531  top5:  14.531
	
=> Training epoch # 116	
 * Finished epoch # 116     top1:  37.803  top5:  13.525
	
=> Training epoch # 117	
 * Finished epoch # 117     top1:  37.744  top5:  12.227
	
=> Training epoch # 118	
 * Finished epoch # 118     top1:  39.727  top5:  13.232
	
=> Training epoch # 119	
 * Finished epoch # 119     top1:  37.979  top5:  13.545
	
=> Training epoch # 120	
 * Finished epoch # 120     top1:  35.986  top5:  11.680
	
=> Training epoch # 121	
 * Finished epoch # 121     top1:  40.430  top5:  14.209
	
=> Training epoch # 122	
 * Finished epoch # 122     top1:  27.451  top5:   7.549
	
 * Best model 	27.451171875	7.548828125	
=> Training epoch # 123	
 * Finished epoch # 123     top1:  27.129  top5:   7.275
	
 * Best model 	27.12890625	7.275390625	
=> Training epoch # 124	
 * Finished epoch # 124     top1:  26.719  top5:   7.314
	
 * Best model 	26.71875	7.314453125	
=> Training epoch # 125	
 * Finished epoch # 125     top1:  26.543  top5:   7.070
	
 * Best model 	26.54296875	7.0703125	
=> Training epoch # 126	
 * Finished epoch # 126     top1:  25.752  top5:   7.129
	
 * Best model 	25.751953125	7.12890625	
=> Training epoch # 127	
 * Finished epoch # 127     top1:  26.279  top5:   7.061
	
=> Training epoch # 128	
 * Finished epoch # 128     top1:  26.426  top5:   7.100
	
=> Training epoch # 129	
 * Finished epoch # 129     top1:  26.172  top5:   7.061
	
=> Training epoch # 130	
 * Finished epoch # 130     top1:  26.211  top5:   7.021
	
=> Training epoch # 131	
 * Finished epoch # 131     top1:  26.064  top5:   7.021
	
=> Training epoch # 132	
 * Finished epoch # 132     top1:  26.016  top5:   7.158
	
=> Training epoch # 133	
 * Finished epoch # 133     top1:  26.270  top5:   7.178
	
=> Training epoch # 134	
 * Finished epoch # 134     top1:  25.723  top5:   7.051
	
 * Best model 	25.72265625	7.05078125	
=> Training epoch # 135	
 * Finished epoch # 135     top1:  26.377  top5:   7.256
	
=> Training epoch # 136	
 * Finished epoch # 136     top1:  26.074  top5:   6.943
	
=> Training epoch # 137	
 * Finished epoch # 137     top1:  26.406  top5:   7.188
	
=> Training epoch # 138	
 * Finished epoch # 138     top1:  26.318  top5:   6.982
	
=> Training epoch # 139	
 * Finished epoch # 139     top1:  26.523  top5:   7.207
	
=> Training epoch # 140	
 * Finished epoch # 140     top1:  25.762  top5:   7.080
	
=> Training epoch # 141	
 * Finished epoch # 141     top1:  25.879  top5:   6.973
	
=> Training epoch # 142	
 * Finished epoch # 142     top1:  26.172  top5:   7.217
	
=> Training epoch # 143	
 * Finished epoch # 143     top1:  26.143  top5:   7.246
	
=> Training epoch # 144	
 * Finished epoch # 144     top1:  26.318  top5:   7.305
	
=> Training epoch # 145	
 * Finished epoch # 145     top1:  25.723  top5:   7.324
	
=> Training epoch # 146	
 * Finished epoch # 146     top1:  25.859  top5:   7.412
	
=> Training epoch # 147	
 * Finished epoch # 147     top1:  26.182  top5:   7.295
	
=> Training epoch # 148	
 * Finished epoch # 148     top1:  26.436  top5:   7.207
	
=> Training epoch # 149	
 * Finished epoch # 149     top1:  26.113  top5:   7.129
	
=> Training epoch # 150	
 * Finished epoch # 150     top1:  26.230  top5:   6.992
	
=> Training epoch # 151	
 * Finished epoch # 151     top1:  26.562  top5:   7.139
	
=> Training epoch # 152	
 * Finished epoch # 152     top1:  26.582  top5:   7.646
	
=> Training epoch # 153	
 * Finished epoch # 153     top1:  25.986  top5:   7.236
	
=> Training epoch # 154	
 * Finished epoch # 154     top1:  26.533  top5:   7.549
	
=> Training epoch # 155	
 * Finished epoch # 155     top1:  26.807  top5:   7.363
	
=> Training epoch # 156	
 * Finished epoch # 156     top1:  26.543  top5:   7.344
	
=> Training epoch # 157	
 * Finished epoch # 157     top1:  26.123  top5:   7.227
	
=> Training epoch # 158	
 * Finished epoch # 158     top1:  26.377  top5:   7.246
	
=> Training epoch # 159	
 * Finished epoch # 159     top1:  26.553  top5:   7.490
	
=> Training epoch # 160	
 * Finished epoch # 160     top1:  25.791  top5:   7.031
	
=> Training epoch # 161	
 * Finished epoch # 161     top1:  26.182  top5:   7.168
	
=> Training epoch # 162	
 * Finished epoch # 162     top1:  25.801  top5:   7.100
	
=> Training epoch # 163	
 * Finished epoch # 163     top1:  26.250  top5:   7.432
	
=> Training epoch # 164	
 * Finished epoch # 164     top1:  26.523  top5:   7.158
	
=> Training epoch # 165	
 * Finished epoch # 165     top1:  25.684  top5:   7.109
	
 * Best model 	25.68359375	7.109375	
=> Training epoch # 166	
 * Finished epoch # 166     top1:  26.289  top5:   7.041
	
=> Training epoch # 167	
 * Finished epoch # 167     top1:  25.996  top5:   7.256
	
=> Training epoch # 168	
 * Finished epoch # 168     top1:  26.074  top5:   7.207
	
=> Training epoch # 169	
 * Finished epoch # 169     top1:  25.752  top5:   6.992
	
=> Training epoch # 170	
 * Finished epoch # 170     top1:  26.445  top5:   7.480
	
=> Training epoch # 171	
 * Finished epoch # 171     top1:  25.791  top5:   7.080
	
=> Training epoch # 172	
 * Finished epoch # 172     top1:  26.230  top5:   7.510
	
=> Training epoch # 173	
 * Finished epoch # 173     top1:  26.162  top5:   7.490
	
=> Training epoch # 174	
 * Finished epoch # 174     top1:  26.191  top5:   7.207
	
=> Training epoch # 175	
 * Finished epoch # 175     top1:  26.143  top5:   7.217
	
=> Training epoch # 176	
 * Finished epoch # 176     top1:  26.279  top5:   7.139
	
=> Training epoch # 177	
 * Finished epoch # 177     top1:  26.006  top5:   7.842
	
=> Training epoch # 178	
 * Finished epoch # 178     top1:  26.338  top5:   7.295
	
=> Training epoch # 179	
 * Finished epoch # 179     top1:  26.230  top5:   7.393
	
=> Training epoch # 180	
 * Finished epoch # 180     top1:  25.850  top5:   7.305
	
=> Training epoch # 181	
 * Finished epoch # 181     top1:  25.820  top5:   7.275
	
=> Training epoch # 182	
 * Finished epoch # 182     top1:  26.328  top5:   7.197
	
=> Training epoch # 183	
 * Finished epoch # 183     top1:  25.801  top5:   7.305
	
=> Training epoch # 184	
 * Finished epoch # 184     top1:  26.201  top5:   7.578
	
=> Training epoch # 185	
 * Finished epoch # 185     top1:  26.045  top5:   7.363
	
=> Training epoch # 186	
 * Finished epoch # 186     top1:  25.615  top5:   7.188
	
 * Best model 	25.615234375	7.1875	
=> Training epoch # 187	
 * Finished epoch # 187     top1:  26.035  top5:   7.480
	
=> Training epoch # 188	
 * Finished epoch # 188     top1:  25.840  top5:   7.422
	
=> Training epoch # 189	
 * Finished epoch # 189     top1:  25.996  top5:   7.109
	
=> Training epoch # 190	
 * Finished epoch # 190     top1:  26.465  top5:   7.285
	
=> Training epoch # 191	
 * Finished epoch # 191     top1:  26.104  top5:   7.305
	
=> Training epoch # 192	
 * Finished epoch # 192     top1:  25.889  top5:   7.197
	
=> Training epoch # 193	
 * Finished epoch # 193     top1:  25.479  top5:   7.109
	
 * Best model 	25.478515625	7.109375	
=> Training epoch # 194	
 * Finished epoch # 194     top1:  26.787  top5:   7.354
	
=> Training epoch # 195	
 * Finished epoch # 195     top1:  25.898  top5:   7.080
	
=> Training epoch # 196	
 * Finished epoch # 196     top1:  26.113  top5:   7.314
	
=> Training epoch # 197	
 * Finished epoch # 197     top1:  26.641  top5:   7.305
	
=> Training epoch # 198	
 * Finished epoch # 198     top1:  26.172  top5:   7.324
	
=> Training epoch # 199	
 * Finished epoch # 199     top1:  26.641  top5:   7.324
	
=> Training epoch # 200	
 * Finished epoch # 200     top1:  26.348  top5:   7.188
	
 * Finished top1: 25.479  top5:  7.109	
