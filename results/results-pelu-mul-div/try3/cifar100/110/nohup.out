{
  cudnn : "fastest"
  LR : 0.1
  nThreads : 2
  nClasses : 0
  batchSize : 256
  testOnly : false
  netType : "resnet-pelu-mul-div"
  resetClassifier : false
  shortcutType : "A"
  gen : "gen"
  nGPU : 1
  depth : 110
  weightDecay : 0.001
  data : ""
  dataset : "cifar100"
  epochNumber : 1
  manualSeed : 2
  resume : "results/results-pelu-mul-div/try3/cifar100/110"
  optimState : "none"
  nEpochs : 200
  tenCrop : false
  shareGradInput : false
  backend : "cudnn"
  momentum : 0.9
  retrain : "none"
}
=> Creating model from file: models/resnet-pelu-mul-div.lua	
 | ResNet-110 CIFAR-100	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1) without bias
  (2): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedMul
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedDiv
  }
  (3): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (4): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 32, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (5): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 64, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (6): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedMul
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedDiv
  }
  (7): cudnn.SpatialAveragePooling(8x8, 1,1)
  (8): nn.View(64)
  (9): nn.Linear(64 -> 100)
}
=> Training epoch # 1	
 * Finished epoch # 1     top1:  87.764  top5:  61.895
	
 * Best model 	87.763671875	61.89453125	
=> Training epoch # 2	
 * Finished epoch # 2     top1:  77.852  top5:  48.809
	
 * Best model 	77.8515625	48.80859375	
=> Training epoch # 3	
 * Finished epoch # 3     top1:  68.037  top5:  35.156
	
 * Best model 	68.037109375	35.15625	
=> Training epoch # 4	
 * Finished epoch # 4     top1:  60.615  top5:  28.652
	
 * Best model 	60.615234375	28.65234375	
=> Training epoch # 5	
 * Finished epoch # 5     top1:  60.762  top5:  27.412
	
=> Training epoch # 6	
 * Finished epoch # 6     top1:  55.117  top5:  22.539
	
 * Best model 	55.1171875	22.5390625	
=> Training epoch # 7	
 * Finished epoch # 7     top1:  54.258  top5:  22.217
	
 * Best model 	54.2578125	22.216796875	
=> Training epoch # 8	
 * Finished epoch # 8     top1:  55.479  top5:  22.812
	
=> Training epoch # 9	
 * Finished epoch # 9     top1:  50.293  top5:  19.326
	
 * Best model 	50.29296875	19.326171875	
=> Training epoch # 10	
 * Finished epoch # 10     top1:  50.498  top5:  19.375
	
=> Training epoch # 11	
 * Finished epoch # 11     top1:  49.590  top5:  18.486
	
 * Best model 	49.58984375	18.486328125	
=> Training epoch # 12	
 * Finished epoch # 12     top1:  47.168  top5:  17.822
	
 * Best model 	47.16796875	17.822265625	
=> Training epoch # 13	
 * Finished epoch # 13     top1:  51.611  top5:  19.473
	
=> Training epoch # 14	
 * Finished epoch # 14     top1:  49.883  top5:  19.795
	
=> Training epoch # 15	
 * Finished epoch # 15     top1:  49.912  top5:  19.609
	
=> Training epoch # 16	
 * Finished epoch # 16     top1:  49.854  top5:  18.672
	
=> Training epoch # 17	
 * Finished epoch # 17     top1:  49.326  top5:  19.990
	
=> Training epoch # 18	
 * Finished epoch # 18     top1:  48.750  top5:  17.939
	
=> Training epoch # 19	
 * Finished epoch # 19     top1:  47.100  top5:  17.148
	
 * Best model 	47.099609375	17.1484375	
=> Training epoch # 20	
 * Finished epoch # 20     top1:  50.566  top5:  19.590
	
=> Training epoch # 21	
 * Finished epoch # 21     top1:  58.730  top5:  26.992
	
=> Training epoch # 22	
 * Finished epoch # 22     top1:  47.529  top5:  18.809
	
=> Training epoch # 23	
 * Finished epoch # 23     top1:  49.209  top5:  19.355
	
=> Training epoch # 24	
 * Finished epoch # 24     top1:  43.506  top5:  15.967
	
 * Best model 	43.505859375	15.966796875	
=> Training epoch # 25	
 * Finished epoch # 25     top1:  47.715  top5:  18.398
	
=> Training epoch # 26	
 * Finished epoch # 26     top1:  45.635  top5:  17.617
	
=> Training epoch # 27	
 * Finished epoch # 27     top1:  44.297  top5:  15.410
	
=> Training epoch # 28	
 * Finished epoch # 28     top1:  48.740  top5:  19.043
	
=> Training epoch # 29	
 * Finished epoch # 29     top1:  47.959  top5:  19.639
	
=> Training epoch # 30	
 * Finished epoch # 30     top1:  50.234  top5:  20.732
	
=> Training epoch # 31	
 * Finished epoch # 31     top1:  49.170  top5:  20.000
	
=> Training epoch # 32	
 * Finished epoch # 32     top1:  49.160  top5:  18.535
	
=> Training epoch # 33	
 * Finished epoch # 33     top1:  51.982  top5:  22.871
	
=> Training epoch # 34	
 * Finished epoch # 34     top1:  44.873  top5:  16.729
	
=> Training epoch # 35	
 * Finished epoch # 35     top1:  48.271  top5:  18.486
	
=> Training epoch # 36	
 * Finished epoch # 36     top1:  43.037  top5:  15.020
	
 * Best model 	43.037109375	15.01953125	
=> Training epoch # 37	
 * Finished epoch # 37     top1:  44.785  top5:  16.924
	
=> Training epoch # 38	
 * Finished epoch # 38     top1:  43.613  top5:  16.299
	
=> Training epoch # 39	
 * Finished epoch # 39     top1:  45.469  top5:  16.064
	
=> Training epoch # 40	
 * Finished epoch # 40     top1:  44.561  top5:  16.270
	
=> Training epoch # 41	
 * Finished epoch # 41     top1:  45.371  top5:  16.592
	
=> Training epoch # 42	
 * Finished epoch # 42     top1:  47.480  top5:  18.350
	
=> Training epoch # 43	
 * Finished epoch # 43     top1:  44.678  top5:  16.709
	
=> Training epoch # 44	
 * Finished epoch # 44     top1:  54.521  top5:  21.553
	
=> Training epoch # 45	
 * Finished epoch # 45     top1:  48.623  top5:  21.494
	
=> Training epoch # 46	
 * Finished epoch # 46     top1:  49.932  top5:  20.166
	
=> Training epoch # 47	
 * Finished epoch # 47     top1:  49.619  top5:  19.424
	
=> Training epoch # 48	
 * Finished epoch # 48     top1:  43.916  top5:  15.566
	
=> Training epoch # 49	
 * Finished epoch # 49     top1:  41.406  top5:  14.805
	
 * Best model 	41.40625	14.8046875	
=> Training epoch # 50	
 * Finished epoch # 50     top1:  49.385  top5:  20.967
	
=> Training epoch # 51	
 * Finished epoch # 51     top1:  55.850  top5:  27.617
	
=> Training epoch # 52	
 * Finished epoch # 52     top1:  46.992  top5:  17.568
	
=> Training epoch # 53	
 * Finished epoch # 53     top1:  46.133  top5:  16.846
	
=> Training epoch # 54	
 * Finished epoch # 54     top1:  42.891  top5:  15.996
	
=> Training epoch # 55	
 * Finished epoch # 55     top1:  46.328  top5:  17.109
	
=> Training epoch # 56	
 * Finished epoch # 56     top1:  48.652  top5:  18.916
	
=> Training epoch # 57	
 * Finished epoch # 57     top1:  44.062  top5:  16.172
	
=> Training epoch # 58	
 * Finished epoch # 58     top1:  46.152  top5:  16.387
	
=> Training epoch # 59	
 * Finished epoch # 59     top1:  43.662  top5:  16.738
	
=> Training epoch # 60	
 * Finished epoch # 60     top1:  42.549  top5:  14.268
	
=> Training epoch # 61	
 * Finished epoch # 61     top1:  47.744  top5:  18.350
	
=> Training epoch # 62	
 * Finished epoch # 62     top1:  44.316  top5:  16.465
	
=> Training epoch # 63	
 * Finished epoch # 63     top1:  44.824  top5:  16.523
	
=> Training epoch # 64	
 * Finished epoch # 64     top1:  45.215  top5:  16.045
	
=> Training epoch # 65	
 * Finished epoch # 65     top1:  43.535  top5:  16.025
	
=> Training epoch # 66	
 * Finished epoch # 66     top1:  46.357  top5:  17.822
	
=> Training epoch # 67	
 * Finished epoch # 67     top1:  43.936  top5:  15.557
	
=> Training epoch # 68	
 * Finished epoch # 68     top1:  47.432  top5:  18.467
	
=> Training epoch # 69	
 * Finished epoch # 69     top1:  51.426  top5:  21.689
	
=> Training epoch # 70	
 * Finished epoch # 70     top1:  46.064  top5:  17.510
	
=> Training epoch # 71	
 * Finished epoch # 71     top1:  45.059  top5:  17.383
	
=> Training epoch # 72	
 * Finished epoch # 72     top1:  46.406  top5:  17.178
	
=> Training epoch # 73	
 * Finished epoch # 73     top1:  52.012  top5:  22.285
	
=> Training epoch # 74	
 * Finished epoch # 74     top1:  43.408  top5:  16.426
	
=> Training epoch # 75	
 * Finished epoch # 75     top1:  44.463  top5:  14.775
	
=> Training epoch # 76	
 * Finished epoch # 76     top1:  43.682  top5:  16.572
	
=> Training epoch # 77	
 * Finished epoch # 77     top1:  42.920  top5:  15.723
	
=> Training epoch # 78	
 * Finished epoch # 78     top1:  44.473  top5:  14.980
	
=> Training epoch # 79	
 * Finished epoch # 79     top1:  52.061  top5:  21.201
	
=> Training epoch # 80	
 * Finished epoch # 80     top1:  46.055  top5:  17.158
	
=> Training epoch # 81	
 * Finished epoch # 81     top1:  28.574  top5:   7.139
	
 * Best model 	28.57421875	7.138671875	
=> Training epoch # 82	
 * Finished epoch # 82     top1:  28.076  top5:   7.168
	
 * Best model 	28.076171875	7.16796875	
=> Training epoch # 83	
 * Finished epoch # 83     top1:  27.598  top5:   7.158
	
 * Best model 	27.59765625	7.158203125	
=> Training epoch # 84	
 * Finished epoch # 84     top1:  28.164  top5:   7.412
	
=> Training epoch # 85	
 * Finished epoch # 85     top1:  28.594  top5:   7.344
	
=> Training epoch # 86	
 * Finished epoch # 86     top1:  29.961  top5:   8.359
	
=> Training epoch # 87	
 * Finished epoch # 87     top1:  30.254  top5:   8.350
	
=> Training epoch # 88	
 * Finished epoch # 88     top1:  31.367  top5:   9.043
	
=> Training epoch # 89	
 * Finished epoch # 89     top1:  30.693  top5:   9.102
	
=> Training epoch # 90	
 * Finished epoch # 90     top1:  31.973  top5:   8.994
	
=> Training epoch # 91	
 * Finished epoch # 91     top1:  32.793  top5:   9.619
	
=> Training epoch # 92	
 * Finished epoch # 92     top1:  33.711  top5:   9.814
	
=> Training epoch # 93	
 * Finished epoch # 93     top1:  32.334  top5:   9.570
	
=> Training epoch # 94	
 * Finished epoch # 94     top1:  33.311  top5:  10.127
	
=> Training epoch # 95	
 * Finished epoch # 95     top1:  30.928  top5:   9.307
	
=> Training epoch # 96	
 * Finished epoch # 96     top1:  32.383  top5:   9.941
	
=> Training epoch # 97	
 * Finished epoch # 97     top1:  33.975  top5:  10.244
	
=> Training epoch # 98	
 * Finished epoch # 98     top1:  35.527  top5:  11.533
	
=> Training epoch # 99	
 * Finished epoch # 99     top1:  37.080  top5:  12.646
	
=> Training epoch # 100	
 * Finished epoch # 100     top1:  34.707  top5:  11.123
	
=> Training epoch # 101	
 * Finished epoch # 101     top1:  35.312  top5:  11.396
	
=> Training epoch # 102	
 * Finished epoch # 102     top1:  35.293  top5:  11.689
	
=> Training epoch # 103	
 * Finished epoch # 103     top1:  35.176  top5:  12.295
	
=> Training epoch # 104	
 * Finished epoch # 104     top1:  38.018  top5:  12.773
	
=> Training epoch # 105	
 * Finished epoch # 105     top1:  36.191  top5:  11.357
	
=> Training epoch # 106	
 * Finished epoch # 106     top1:  35.020  top5:  12.305
	
=> Training epoch # 107	
 * Finished epoch # 107     top1:  34.072  top5:  10.879
	
=> Training epoch # 108	
 * Finished epoch # 108     top1:  39.736  top5:  13.633
	
=> Training epoch # 109	
 * Finished epoch # 109     top1:  37.041  top5:  12.637
	
=> Training epoch # 110	
 * Finished epoch # 110     top1:  35.117  top5:  11.504
	
=> Training epoch # 111	
 * Finished epoch # 111     top1:  39.375  top5:  14.004
	
=> Training epoch # 112	
 * Finished epoch # 112     top1:  37.070  top5:  12.588
	
=> Training epoch # 113	
 * Finished epoch # 113     top1:  38.281  top5:  13.379
	
=> Training epoch # 114	
 * Finished epoch # 114     top1:  40.049  top5:  14.131
	
=> Training epoch # 115	
 * Finished epoch # 115     top1:  34.805  top5:  11.504
	
=> Training epoch # 116	
 * Finished epoch # 116     top1:  35.840  top5:  12.021
	
=> Training epoch # 117	
 * Finished epoch # 117     top1:  36.650  top5:  13.027
	
=> Training epoch # 118	
 * Finished epoch # 118     top1:  39.736  top5:  14.814
	
=> Training epoch # 119	
 * Finished epoch # 119     top1:  38.047  top5:  14.072
	
=> Training epoch # 120	
 * Finished epoch # 120     top1:  48.096  top5:  19.072
	
=> Training epoch # 121	
 * Finished epoch # 121     top1:  37.217  top5:  12.793
	
=> Training epoch # 122	
 * Finished epoch # 122     top1:  27.539  top5:   7.354
	
 * Best model 	27.5390625	7.353515625	
=> Training epoch # 123	
 * Finished epoch # 123     top1:  27.207  top5:   7.275
	
 * Best model 	27.20703125	7.275390625	
=> Training epoch # 124	
 * Finished epoch # 124     top1:  27.002  top5:   7.334
	
 * Best model 	27.001953125	7.333984375	
=> Training epoch # 125	
 * Finished epoch # 125     top1:  26.484  top5:   7.119
	
 * Best model 	26.484375	7.119140625	
=> Training epoch # 126	
 * Finished epoch # 126     top1:  26.641  top5:   7.090
	
=> Training epoch # 127	
 * Finished epoch # 127     top1:  26.260  top5:   7.139
	
 * Best model 	26.259765625	7.138671875	
=> Training epoch # 128	
 * Finished epoch # 128     top1:  26.260  top5:   7.217
	
=> Training epoch # 129	
 * Finished epoch # 129     top1:  26.543  top5:   7.139
	
=> Training epoch # 130	
 * Finished epoch # 130     top1:  26.436  top5:   7.256
	
=> Training epoch # 131	
 * Finished epoch # 131     top1:  26.387  top5:   7.217
	
=> Training epoch # 132	
 * Finished epoch # 132     top1:  26.348  top5:   7.100
	
=> Training epoch # 133	
 * Finished epoch # 133     top1:  26.729  top5:   7.217
	
=> Training epoch # 134	
 * Finished epoch # 134     top1:  26.055  top5:   7.285
	
 * Best model 	26.0546875	7.28515625	
=> Training epoch # 135	
 * Finished epoch # 135     top1:  26.299  top5:   6.973
	
=> Training epoch # 136	
 * Finished epoch # 136     top1:  26.406  top5:   7.109
	
=> Training epoch # 137	
 * Finished epoch # 137     top1:  26.387  top5:   7.305
	
=> Training epoch # 138	
 * Finished epoch # 138     top1:  26.357  top5:   7.002
	
=> Training epoch # 139	
 * Finished epoch # 139     top1:  26.055  top5:   7.100
	
=> Training epoch # 140	
 * Finished epoch # 140     top1:  26.230  top5:   7.188
	
=> Training epoch # 141	
 * Finished epoch # 141     top1:  25.957  top5:   7.021
	
 * Best model 	25.95703125	7.021484375	
=> Training epoch # 142	
 * Finished epoch # 142     top1:  26.592  top5:   7.236
	
=> Training epoch # 143	
 * Finished epoch # 143     top1:  26.299  top5:   6.963
	
=> Training epoch # 144	
 * Finished epoch # 144     top1:  26.572  top5:   7.246
	
=> Training epoch # 145	
 * Finished epoch # 145     top1:  26.123  top5:   6.953
	
=> Training epoch # 146	
 * Finished epoch # 146     top1:  26.299  top5:   7.197
	
=> Training epoch # 147	
 * Finished epoch # 147     top1:  26.152  top5:   7.139
	
=> Training epoch # 148	
 * Finished epoch # 148     top1:  26.123  top5:   7.041
	
=> Training epoch # 149	
 * Finished epoch # 149     top1:  26.230  top5:   7.275
	
=> Training epoch # 150	
 * Finished epoch # 150     top1:  25.996  top5:   6.846
	
=> Training epoch # 151	
 * Finished epoch # 151     top1:  26.602  top5:   7.520
	
=> Training epoch # 152	
 * Finished epoch # 152     top1:  26.807  top5:   8.008
	
=> Training epoch # 153	
 * Finished epoch # 153     top1:  25.957  top5:   7.197
	
=> Training epoch # 154	
 * Finished epoch # 154     top1:  26.572  top5:   7.227
	
=> Training epoch # 155	
 * Finished epoch # 155     top1:  26.709  top5:   7.393
	
=> Training epoch # 156	
 * Finished epoch # 156     top1:  26.680  top5:   6.963
	
=> Training epoch # 157	
 * Finished epoch # 157     top1:  25.928  top5:   7.070
	
 * Best model 	25.927734375	7.0703125	
=> Training epoch # 158	
 * Finished epoch # 158     top1:  26.357  top5:   7.334
	
=> Training epoch # 159	
 * Finished epoch # 159     top1:  26.133  top5:   7.617
	
=> Training epoch # 160	
 * Finished epoch # 160     top1:  25.781  top5:   6.924
	
 * Best model 	25.78125	6.923828125	
=> Training epoch # 161	
 * Finished epoch # 161     top1:  26.172  top5:   7.217
	
=> Training epoch # 162	
 * Finished epoch # 162     top1:  26.113  top5:   6.914
	
=> Training epoch # 163	
 * Finished epoch # 163     top1:  26.270  top5:   7.129
	
=> Training epoch # 164	
 * Finished epoch # 164     top1:  26.279  top5:   7.061
	
=> Training epoch # 165	
 * Finished epoch # 165     top1:  25.898  top5:   6.992
	
=> Training epoch # 166	
 * Finished epoch # 166     top1:  26.299  top5:   7.148
	
=> Training epoch # 167	
 * Finished epoch # 167     top1:  25.928  top5:   7.197
	
=> Training epoch # 168	
 * Finished epoch # 168     top1:  26.035  top5:   7.246
	
=> Training epoch # 169	
 * Finished epoch # 169     top1:  25.977  top5:   7.041
	
=> Training epoch # 170	
 * Finished epoch # 170     top1:  26.621  top5:   7.490
	
=> Training epoch # 171	
 * Finished epoch # 171     top1:  26.104  top5:   7.158
	
=> Training epoch # 172	
 * Finished epoch # 172     top1:  26.592  top5:   7.373
	
=> Training epoch # 173	
 * Finished epoch # 173     top1:  26.475  top5:   7.402
	
=> Training epoch # 174	
 * Finished epoch # 174     top1:  26.553  top5:   7.129
	
=> Training epoch # 175	
 * Finished epoch # 175     top1:  26.104  top5:   7.217
	
=> Training epoch # 176	
 * Finished epoch # 176     top1:  26.230  top5:   7.236
	
=> Training epoch # 177	
 * Finished epoch # 177     top1:  26.426  top5:   7.676
	
=> Training epoch # 178	
 * Finished epoch # 178     top1:  26.924  top5:   7.227
	
=> Training epoch # 179	
 * Finished epoch # 179     top1:  26.230  top5:   7.471
	
=> Training epoch # 180	
 * Finished epoch # 180     top1:  26.221  top5:   7.422
	
=> Training epoch # 181	
 * Finished epoch # 181     top1:  25.957  top5:   7.275
	
=> Training epoch # 182	
 * Finished epoch # 182     top1:  26.797  top5:   7.324
	
=> Training epoch # 183	
 * Finished epoch # 183     top1:  26.094  top5:   7.100
	
=> Training epoch # 184	
 * Finished epoch # 184     top1:  26.436  top5:   7.324
	
=> Training epoch # 185	
 * Finished epoch # 185     top1:  26.338  top5:   7.314
	
=> Training epoch # 186	
 * Finished epoch # 186     top1:  26.152  top5:   7.070
	
=> Training epoch # 187	
 * Finished epoch # 187     top1:  26.592  top5:   7.324
	
=> Training epoch # 188	
 * Finished epoch # 188     top1:  25.723  top5:   7.393
	
 * Best model 	25.72265625	7.392578125	
=> Training epoch # 189	
 * Finished epoch # 189     top1:  26.250  top5:   6.953
	
=> Training epoch # 190	
 * Finished epoch # 190     top1:  26.611  top5:   7.275
	
=> Training epoch # 191	
 * Finished epoch # 191     top1:  25.996  top5:   7.217
	
=> Training epoch # 192	
 * Finished epoch # 192     top1:  26.104  top5:   7.139
	
=> Training epoch # 193	
 * Finished epoch # 193     top1:  26.230  top5:   7.021
	
=> Training epoch # 194	
 * Finished epoch # 194     top1:  26.797  top5:   7.451
	
=> Training epoch # 195	
 * Finished epoch # 195     top1:  26.240  top5:   7.100
	
=> Training epoch # 196	
 * Finished epoch # 196     top1:  26.240  top5:   7.246
	
=> Training epoch # 197	
 * Finished epoch # 197     top1:  26.885  top5:   7.383
	
=> Training epoch # 198	
 * Finished epoch # 198     top1:  26.611  top5:   7.383
	
=> Training epoch # 199	
 * Finished epoch # 199     top1:  26.895  top5:   7.393
	
=> Training epoch # 200	
 * Finished epoch # 200     top1:  26.426  top5:   7.285
	
 * Finished top1: 25.723  top5:  7.393	
