{
  cudnn : "fastest"
  LR : 0.1
  nThreads : 2
  nClasses : 0
  batchSize : 256
  testOnly : false
  netType : "resnet"
  resetClassifier : false
  shortcutType : "A"
  gen : "gen"
  nGPU : 1
  depth : 110
  weightDecay : 0.001
  data : ""
  dataset : "cifar100"
  epochNumber : 1
  manualSeed : 2
  resume : "results/try5/cifar100/110"
  optimState : "none"
  nEpochs : 200
  tenCrop : false
  shareGradInput : false
  backend : "cudnn"
  momentum : 0.9
  retrain : "none"
}
=> Creating model from file: models/resnet.lua	
 | ResNet-110 CIFAR-100	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1) without bias
  (2): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedDiv
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedMul
  }
  (3): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (4): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 32, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (5): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 64, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (6): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedDiv
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedMul
  }
  (7): cudnn.SpatialAveragePooling(8x8, 1,1)
  (8): nn.View(64)
  (9): nn.Linear(64 -> 100)
}
=> Training epoch # 1	
 * Finished epoch # 1     top1:  86.025  top5:  60.244
	
 * Best model 	86.025390625	60.244140625	
=> Training epoch # 2	
 * Finished epoch # 2     top1:  75.664  top5:  45.625
	
 * Best model 	75.6640625	45.625	
=> Training epoch # 3	
 * Finished epoch # 3     top1:  69.551  top5:  37.764
	
 * Best model 	69.55078125	37.763671875	
=> Training epoch # 4	
 * Finished epoch # 4     top1:  66.582  top5:  35.615
	
 * Best model 	66.58203125	35.615234375	
=> Training epoch # 5	
 * Finished epoch # 5     top1:  55.742  top5:  23.838
	
 * Best model 	55.7421875	23.837890625	
=> Training epoch # 6	
 * Finished epoch # 6     top1:  54.385  top5:  22.764
	
 * Best model 	54.384765625	22.763671875	
=> Training epoch # 7	
 * Finished epoch # 7     top1:  52.686  top5:  21.309
	
 * Best model 	52.685546875	21.30859375	
=> Training epoch # 8	
 * Finished epoch # 8     top1:  59.561  top5:  26.816
	
=> Training epoch # 9	
 * Finished epoch # 9     top1:  51.611  top5:  19.941
	
 * Best model 	51.611328125	19.94140625	
=> Training epoch # 10	
 * Finished epoch # 10     top1:  48.857  top5:  18.594
	
 * Best model 	48.857421875	18.59375	
=> Training epoch # 11	
 * Finished epoch # 11     top1:  47.100  top5:  16.738
	
 * Best model 	47.099609375	16.73828125	
=> Training epoch # 12	
 * Finished epoch # 12     top1:  47.549  top5:  18.369
	
=> Training epoch # 13	
 * Finished epoch # 13     top1:  51.826  top5:  21.631
	
=> Training epoch # 14	
 * Finished epoch # 14     top1:  47.002  top5:  17.773
	
 * Best model 	47.001953125	17.7734375	
=> Training epoch # 15	
 * Finished epoch # 15     top1:  49.443  top5:  19.746
	
=> Training epoch # 16	
 * Finished epoch # 16     top1:  47.422  top5:  18.125
	
=> Training epoch # 17	
 * Finished epoch # 17     top1:  50.410  top5:  19.824
	
=> Training epoch # 18	
 * Finished epoch # 18     top1:  44.287  top5:  14.990
	
 * Best model 	44.287109375	14.990234375	
=> Training epoch # 19	
 * Finished epoch # 19     top1:  42.461  top5:  14.326
	
 * Best model 	42.4609375	14.326171875	
=> Training epoch # 20	
 * Finished epoch # 20     top1:  43.838  top5:  15.420
	
=> Training epoch # 21	
 * Finished epoch # 21     top1:  46.465  top5:  17.295
	
=> Training epoch # 22	
 * Finished epoch # 22     top1:  41.494  top5:  13.965
	
 * Best model 	41.494140625	13.96484375	
=> Training epoch # 23	
 * Finished epoch # 23     top1:  47.930  top5:  18.506
	
=> Training epoch # 24	
 * Finished epoch # 24     top1:  44.873  top5:  15.781
	
=> Training epoch # 25	
 * Finished epoch # 25     top1:  41.328  top5:  13.945
	
 * Best model 	41.328125	13.9453125	
=> Training epoch # 26	
 * Finished epoch # 26     top1:  42.939  top5:  14.961
	
=> Training epoch # 27	
 * Finished epoch # 27     top1:  44.756  top5:  17.217
	
=> Training epoch # 28	
 * Finished epoch # 28     top1:  45.781  top5:  15.049
	
=> Training epoch # 29	
 * Finished epoch # 29     top1:  45.811  top5:  16.748
	
=> Training epoch # 30	
 * Finished epoch # 30     top1:  44.629  top5:  16.416
	
=> Training epoch # 31	
 * Finished epoch # 31     top1:  46.748  top5:  16.631
	
=> Training epoch # 32	
 * Finished epoch # 32     top1:  41.387  top5:  13.926
	
=> Training epoch # 33	
 * Finished epoch # 33     top1:  44.277  top5:  15.977
	
=> Training epoch # 34	
 * Finished epoch # 34     top1:  45.303  top5:  17.080
	
=> Training epoch # 35	
 * Finished epoch # 35     top1:  44.004  top5:  15.840
	
=> Training epoch # 36	
 * Finished epoch # 36     top1:  43.809  top5:  15.049
	
=> Training epoch # 37	
 * Finished epoch # 37     top1:  42.402  top5:  14.463
	
=> Training epoch # 38	
 * Finished epoch # 38     top1:  41.816  top5:  14.443
	
=> Training epoch # 39	
 * Finished epoch # 39     top1:  44.443  top5:  15.947
	
=> Training epoch # 40	
 * Finished epoch # 40     top1:  42.861  top5:  15.693
	
=> Training epoch # 41	
 * Finished epoch # 41     top1:  44.404  top5:  15.137
	
=> Training epoch # 42	
 * Finished epoch # 42     top1:  45.303  top5:  15.869
	
=> Training epoch # 43	
 * Finished epoch # 43     top1:  43.848  top5:  15.713
	
=> Training epoch # 44	
 * Finished epoch # 44     top1:  45.977  top5:  15.615
	
=> Training epoch # 45	
 * Finished epoch # 45     top1:  40.625  top5:  13.311
	
 * Best model 	40.625	13.310546875	
=> Training epoch # 46	
 * Finished epoch # 46     top1:  45.371  top5:  17.041
	
=> Training epoch # 47	
 * Finished epoch # 47     top1:  47.344  top5:  17.949
	
=> Training epoch # 48	
 * Finished epoch # 48     top1:  40.732  top5:  13.496
	
=> Training epoch # 49	
 * Finished epoch # 49     top1:  39.004  top5:  13.154
	
 * Best model 	39.00390625	13.154296875	
=> Training epoch # 50	
 * Finished epoch # 50     top1:  39.893  top5:  11.943
	
=> Training epoch # 51	
 * Finished epoch # 51     top1:  40.742  top5:  14.023
	
=> Training epoch # 52	
 * Finished epoch # 52     top1:  43.955  top5:  15.576
	
=> Training epoch # 53	
 * Finished epoch # 53     top1:  43.809  top5:  15.957
	
=> Training epoch # 54	
 * Finished epoch # 54     top1:  43.076  top5:  15.547
	
=> Training epoch # 55	
 * Finished epoch # 55     top1:  40.723  top5:  12.959
	
=> Training epoch # 56	
 * Finished epoch # 56     top1:  42.100  top5:  14.004
	
=> Training epoch # 57	
 * Finished epoch # 57     top1:  40.801  top5:  13.750
	
=> Training epoch # 58	
 * Finished epoch # 58     top1:  39.287  top5:  12.520
	
=> Training epoch # 59	
 * Finished epoch # 59     top1:  40.625  top5:  13.389
	
=> Training epoch # 60	
 * Finished epoch # 60     top1:  40.039  top5:  13.467
	
=> Training epoch # 61	
 * Finished epoch # 61     top1:  45.176  top5:  15.566
	
=> Training epoch # 62	
 * Finished epoch # 62     top1:  38.809  top5:  12.646
	
 * Best model 	38.80859375	12.646484375	
=> Training epoch # 63	
 * Finished epoch # 63     top1:  42.402  top5:  14.121
	
=> Training epoch # 64	
 * Finished epoch # 64     top1:  43.047  top5:  15.371
	
=> Training epoch # 65	
 * Finished epoch # 65     top1:  43.887  top5:  15.400
	
=> Training epoch # 66	
 * Finished epoch # 66     top1:  40.000  top5:  13.330
	
=> Training epoch # 67	
 * Finished epoch # 67     top1:  43.486  top5:  14.658
	
=> Training epoch # 68	
 * Finished epoch # 68     top1:  42.119  top5:  13.809
	
=> Training epoch # 69	
 * Finished epoch # 69     top1:  41.875  top5:  13.398
	
=> Training epoch # 70	
 * Finished epoch # 70     top1:  41.670  top5:  14.160
	
=> Training epoch # 71	
 * Finished epoch # 71     top1:  41.426  top5:  14.072
	
=> Training epoch # 72	
 * Finished epoch # 72     top1:  41.270  top5:  12.627
	
=> Training epoch # 73	
 * Finished epoch # 73     top1:  42.656  top5:  14.707
	
=> Training epoch # 74	
 * Finished epoch # 74     top1:  37.666  top5:  12.324
	
 * Best model 	37.666015625	12.32421875	
=> Training epoch # 75	
 * Finished epoch # 75     top1:  43.867  top5:  14.385
	
=> Training epoch # 76	
 * Finished epoch # 76     top1:  39.561  top5:  13.232
	
=> Training epoch # 77	
 * Finished epoch # 77     top1:  39.482  top5:  13.154
	
=> Training epoch # 78	
 * Finished epoch # 78     top1:  40.576  top5:  12.900
	
=> Training epoch # 79	
 * Finished epoch # 79     top1:  53.779  top5:  18.613
	
=> Training epoch # 80	
 * Finished epoch # 80     top1:  39.678  top5:  13.164
	
=> Training epoch # 81	
 * Finished epoch # 81     top1:  27.334  top5:   6.865
	
 * Best model 	27.333984375	6.865234375	
=> Training epoch # 82	
 * Finished epoch # 82     top1:  27.256  top5:   6.846
	
 * Best model 	27.255859375	6.845703125	
=> Training epoch # 83	
 * Finished epoch # 83     top1:  26.924  top5:   6.729
	
 * Best model 	26.923828125	6.728515625	
=> Training epoch # 84	
 * Finished epoch # 84     top1:  26.865  top5:   6.768
	
 * Best model 	26.865234375	6.767578125	
=> Training epoch # 85	
 * Finished epoch # 85     top1:  28.164  top5:   7.090
	
=> Training epoch # 86	
 * Finished epoch # 86     top1:  26.953  top5:   6.709
	
=> Training epoch # 87	
 * Finished epoch # 87     top1:  27.656  top5:   7.422
	
=> Training epoch # 88	
 * Finished epoch # 88     top1:  27.373  top5:   7.051
	
=> Training epoch # 89	
 * Finished epoch # 89     top1:  27.695  top5:   7.842
	
=> Training epoch # 90	
 * Finished epoch # 90     top1:  28.340  top5:   7.656
	
=> Training epoch # 91	
 * Finished epoch # 91     top1:  28.193  top5:   7.529
	
=> Training epoch # 92	
 * Finished epoch # 92     top1:  28.174  top5:   7.461
	
=> Training epoch # 93	
 * Finished epoch # 93     top1:  27.607  top5:   7.324
	
=> Training epoch # 94	
 * Finished epoch # 94     top1:  28.682  top5:   7.666
	
=> Training epoch # 95	
 * Finished epoch # 95     top1:  27.861  top5:   7.324
	
=> Training epoch # 96	
 * Finished epoch # 96     top1:  28.174  top5:   7.490
	
=> Training epoch # 97	
 * Finished epoch # 97     top1:  28.418  top5:   7.588
	
=> Training epoch # 98	
 * Finished epoch # 98     top1:  28.252  top5:   7.373
	
=> Training epoch # 99	
 * Finished epoch # 99     top1:  28.955  top5:   8.467
	
=> Training epoch # 100	
 * Finished epoch # 100     top1:  28.330  top5:   7.510
	
=> Training epoch # 101	
 * Finished epoch # 101     top1:  28.008  top5:   7.734
	
=> Training epoch # 102	
 * Finished epoch # 102     top1:  28.291  top5:   8.145
	
=> Training epoch # 103	
 * Finished epoch # 103     top1:  29.053  top5:   8.311
	
=> Training epoch # 104	
 * Finished epoch # 104     top1:  29.395  top5:   7.988
	
=> Training epoch # 105	
 * Finished epoch # 105     top1:  29.287  top5:   8.262
	
=> Training epoch # 106	
 * Finished epoch # 106     top1:  28.916  top5:   8.047
	
=> Training epoch # 107	
 * Finished epoch # 107     top1:  29.395  top5:   8.496
	
=> Training epoch # 108	
 * Finished epoch # 108     top1:  29.863  top5:   8.018
	
=> Training epoch # 109	
 * Finished epoch # 109     top1:  28.877  top5:   8.486
	
=> Training epoch # 110	
 * Finished epoch # 110     top1:  29.092  top5:   8.164
	
=> Training epoch # 111	
 * Finished epoch # 111     top1:  30.205  top5:   8.184
	
=> Training epoch # 112	
 * Finished epoch # 112     top1:  29.297  top5:   8.340
	
=> Training epoch # 113	
 * Finished epoch # 113     top1:  29.316  top5:   8.506
	
=> Training epoch # 114	
 * Finished epoch # 114     top1:  29.531  top5:   8.447
	
=> Training epoch # 115	
 * Finished epoch # 115     top1:  29.980  top5:   8.887
	
=> Training epoch # 116	
 * Finished epoch # 116     top1:  30.371  top5:   8.291
	
=> Training epoch # 117	
 * Finished epoch # 117     top1:  29.883  top5:   9.072
	
=> Training epoch # 118	
 * Finished epoch # 118     top1:  29.639  top5:   8.691
	
=> Training epoch # 119	
 * Finished epoch # 119     top1:  29.512  top5:   8.350
	
=> Training epoch # 120	
 * Finished epoch # 120     top1:  30.068  top5:   8.545
	
=> Training epoch # 121	
 * Finished epoch # 121     top1:  29.814  top5:   8.350
	
=> Training epoch # 122	
 * Finished epoch # 122     top1:  26.855  top5:   7.227
	
 * Best model 	26.85546875	7.2265625	
=> Training epoch # 123	
 * Finished epoch # 123     top1:  26.162  top5:   7.031
	
 * Best model 	26.162109375	7.03125	
=> Training epoch # 124	
 * Finished epoch # 124     top1:  25.850  top5:   7.061
	
 * Best model 	25.849609375	7.060546875	
=> Training epoch # 125	
 * Finished epoch # 125     top1:  25.654  top5:   6.689
	
 * Best model 	25.654296875	6.689453125	
=> Training epoch # 126	
 * Finished epoch # 126     top1:  25.508  top5:   6.738
	
 * Best model 	25.5078125	6.73828125	
=> Training epoch # 127	
 * Finished epoch # 127     top1:  25.352  top5:   6.680
	
 * Best model 	25.3515625	6.6796875	
=> Training epoch # 128	
 * Finished epoch # 128     top1:  25.039  top5:   6.748
	
 * Best model 	25.0390625	6.748046875	
=> Training epoch # 129	
 * Finished epoch # 129     top1:  25.371  top5:   6.709
	
=> Training epoch # 130	
 * Finished epoch # 130     top1:  25.303  top5:   6.768
	
=> Training epoch # 131	
 * Finished epoch # 131     top1:  25.371  top5:   6.553
	
=> Training epoch # 132	
 * Finished epoch # 132     top1:  25.293  top5:   6.641
	
=> Training epoch # 133	
 * Finished epoch # 133     top1:  25.869  top5:   6.924
	
=> Training epoch # 134	
 * Finished epoch # 134     top1:  25.195  top5:   6.758
	
=> Training epoch # 135	
 * Finished epoch # 135     top1:  25.479  top5:   6.914
	
=> Training epoch # 136	
 * Finished epoch # 136     top1:  25.752  top5:   6.699
	
=> Training epoch # 137	
 * Finished epoch # 137     top1:  25.430  top5:   6.719
	
=> Training epoch # 138	
 * Finished epoch # 138     top1:  25.244  top5:   6.592
	
=> Training epoch # 139	
 * Finished epoch # 139     top1:  25.459  top5:   6.670
	
=> Training epoch # 140	
 * Finished epoch # 140     top1:  25.439  top5:   6.719
	
=> Training epoch # 141	
 * Finished epoch # 141     top1:  25.420  top5:   6.514
	
=> Training epoch # 142	
 * Finished epoch # 142     top1:  25.391  top5:   6.455
	
=> Training epoch # 143	
 * Finished epoch # 143     top1:  25.361  top5:   6.660
	
=> Training epoch # 144	
 * Finished epoch # 144     top1:  25.732  top5:   6.553
	
=> Training epoch # 145	
 * Finished epoch # 145     top1:  24.961  top5:   6.475
	
 * Best model 	24.9609375	6.474609375	
=> Training epoch # 146	
 * Finished epoch # 146     top1:  25.645  top5:   6.621
	
=> Training epoch # 147	
 * Finished epoch # 147     top1:  25.176  top5:   6.865
	
=> Training epoch # 148	
 * Finished epoch # 148     top1:  25.615  top5:   6.670
	
=> Training epoch # 149	
 * Finished epoch # 149     top1:  25.488  top5:   6.641
	
=> Training epoch # 150	
 * Finished epoch # 150     top1:  25.166  top5:   6.445
	
=> Training epoch # 151	
 * Finished epoch # 151     top1:  25.723  top5:   6.885
	
=> Training epoch # 152	
 * Finished epoch # 152     top1:  26.025  top5:   7.217
	
=> Training epoch # 153	
 * Finished epoch # 153     top1:  25.273  top5:   6.670
	
=> Training epoch # 154	
 * Finished epoch # 154     top1:  25.303  top5:   6.846
	
=> Training epoch # 155	
 * Finished epoch # 155     top1:  25.684  top5:   6.748
	
=> Training epoch # 156	
 * Finished epoch # 156     top1:  25.703  top5:   6.797
	
=> Training epoch # 157	
 * Finished epoch # 157     top1:  24.951  top5:   6.699
	
 * Best model 	24.951171875	6.69921875	
=> Training epoch # 158	
 * Finished epoch # 158     top1:  25.771  top5:   6.738
	
=> Training epoch # 159	
 * Finished epoch # 159     top1:  25.615  top5:   6.934
	
=> Training epoch # 160	
 * Finished epoch # 160     top1:  25.000  top5:   6.621
	
=> Training epoch # 161	
 * Finished epoch # 161     top1:  25.244  top5:   6.709
	
=> Training epoch # 162	
 * Finished epoch # 162     top1:  24.951  top5:   6.660
	
=> Training epoch # 163	
 * Finished epoch # 163     top1:  25.557  top5:   6.670
	
=> Training epoch # 164	
 * Finished epoch # 164     top1:  25.352  top5:   6.650
	
=> Training epoch # 165	
 * Finished epoch # 165     top1:  25.000  top5:   6.543
	
=> Training epoch # 166	
 * Finished epoch # 166     top1:  25.469  top5:   6.699
	
=> Training epoch # 167	
 * Finished epoch # 167     top1:  25.605  top5:   6.689
	
=> Training epoch # 168	
 * Finished epoch # 168     top1:  25.234  top5:   6.982
	
=> Training epoch # 169	
 * Finished epoch # 169     top1:  24.932  top5:   6.475
	
 * Best model 	24.931640625	6.474609375	
=> Training epoch # 170	
 * Finished epoch # 170     top1:  25.352  top5:   6.836
	
=> Training epoch # 171	
 * Finished epoch # 171     top1:  24.980  top5:   6.719
	
=> Training epoch # 172	
 * Finished epoch # 172     top1:  25.723  top5:   7.070
	
=> Training epoch # 173	
 * Finished epoch # 173     top1:  25.371  top5:   6.865
	
=> Training epoch # 174	
 * Finished epoch # 174     top1:  25.576  top5:   6.709
	
=> Training epoch # 175	
 * Finished epoch # 175     top1:  25.205  top5:   6.680
	
=> Training epoch # 176	
 * Finished epoch # 176     top1:  24.922  top5:   6.836
	
 * Best model 	24.921875	6.8359375	
=> Training epoch # 177	
 * Finished epoch # 177     top1:  25.596  top5:   7.070
	
=> Training epoch # 178	
 * Finished epoch # 178     top1:  25.674  top5:   6.729
	
=> Training epoch # 179	
 * Finished epoch # 179     top1:  24.863  top5:   6.572
	
 * Best model 	24.86328125	6.572265625	
=> Training epoch # 180	
 * Finished epoch # 180     top1:  25.078  top5:   6.855
	
=> Training epoch # 181	
 * Finished epoch # 181     top1:  25.098  top5:   6.777
	
=> Training epoch # 182	
 * Finished epoch # 182     top1:  25.205  top5:   6.738
	
=> Training epoch # 183	
 * Finished epoch # 183     top1:  25.225  top5:   6.777
	
=> Training epoch # 184	
 * Finished epoch # 184     top1:  25.820  top5:   6.699
	
=> Training epoch # 185	
 * Finished epoch # 185     top1:  25.273  top5:   6.748
	
=> Training epoch # 186	
 * Finished epoch # 186     top1:  25.020  top5:   6.738
	
=> Training epoch # 187	
 * Finished epoch # 187     top1:  25.605  top5:   7.002
	
=> Training epoch # 188	
 * Finished epoch # 188     top1:  25.059  top5:   6.836
	
=> Training epoch # 189	
 * Finished epoch # 189     top1:  25.000  top5:   6.738
	
=> Training epoch # 190	
 * Finished epoch # 190     top1:  25.645  top5:   6.904
	
=> Training epoch # 191	
 * Finished epoch # 191     top1:  25.098  top5:   6.777
	
=> Training epoch # 192	
 * Finished epoch # 192     top1:  25.127  top5:   6.855
	
=> Training epoch # 193	
 * Finished epoch # 193     top1:  24.795  top5:   7.012
	
 * Best model 	24.794921875	7.01171875	
=> Training epoch # 194	
 * Finished epoch # 194     top1:  25.537  top5:   6.797
	
=> Training epoch # 195	
 * Finished epoch # 195     top1:  24.932  top5:   6.768
	
=> Training epoch # 196	
 * Finished epoch # 196     top1:  25.098  top5:   6.670
	
=> Training epoch # 197	
 * Finished epoch # 197     top1:  25.508  top5:   6.826
	
=> Training epoch # 198	
 * Finished epoch # 198     top1:  25.771  top5:   6.738
	
=> Training epoch # 199	
 * Finished epoch # 199     top1:  25.625  top5:   6.816
	
=> Training epoch # 200	
 * Finished epoch # 200     top1:  24.863  top5:   6.699
	
 * Finished top1: 24.795  top5:  7.012	
