{
  cudnn : "fastest"
  LR : 0.1
  nThreads : 2
  nClasses : 0
  batchSize : 256
  testOnly : false
  netType : "resnet-bn-relu"
  resetClassifier : false
  shortcutType : "A"
  gen : "gen"
  nGPU : 1
  depth : 110
  weightDecay : 0.001
  data : ""
  dataset : "cifar10"
  epochNumber : 1
  manualSeed : 2
  resume : "results/results-bn-relu/try4/cifar10/110"
  optimState : "none"
  nEpochs : 200
  tenCrop : false
  shareGradInput : false
  backend : "cudnn"
  momentum : 0.9
  retrain : "none"
}
=> Creating model from file: models/resnet-bn-relu.lua	
 | ResNet-110 CIFAR-10	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1) without bias
  (2): nn.Sequential {
    [input -> (1) -> (2) -> output]
    (1): nn.SpatialBatchNormalization (4D) (16)
    (2): nn.ReLU
  }
  (3): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (4): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 32, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (5): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 64, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (6): nn.Sequential {
    [input -> (1) -> (2) -> output]
    (1): nn.SpatialBatchNormalization (4D) (64)
    (2): nn.ReLU
  }
  (7): cudnn.SpatialAveragePooling(8x8, 1,1)
  (8): nn.View(64)
  (9): nn.Linear(64 -> 10)
}
=> Training epoch # 1	
 * Finished epoch # 1     top1:  51.582  top5:   8.369
	
 * Best model 	51.58203125	8.369140625	
=> Training epoch # 2	
 * Finished epoch # 2     top1:  43.652  top5:   4.580
	
 * Best model 	43.65234375	4.580078125	
=> Training epoch # 3	
 * Finished epoch # 3     top1:  34.570  top5:   2.334
	
 * Best model 	34.5703125	2.333984375	
=> Training epoch # 4	
 * Finished epoch # 4     top1:  35.781  top5:   2.285
	
=> Training epoch # 5	
 * Finished epoch # 5     top1:  31.553  top5:   2.559
	
 * Best model 	31.552734375	2.55859375	
=> Training epoch # 6	
 * Finished epoch # 6     top1:  28.115  top5:   1.709
	
 * Best model 	28.115234375	1.708984375	
=> Training epoch # 7	
 * Finished epoch # 7     top1:  28.916  top5:   2.158
	
=> Training epoch # 8	
 * Finished epoch # 8     top1:  27.061  top5:   2.061
	
 * Best model 	27.060546875	2.060546875	
=> Training epoch # 9	
 * Finished epoch # 9     top1:  23.555  top5:   1.299
	
 * Best model 	23.5546875	1.298828125	
=> Training epoch # 10	
 * Finished epoch # 10     top1:  26.396  top5:   2.256
	
=> Training epoch # 11	
 * Finished epoch # 11     top1:  21.074  top5:   1.221
	
 * Best model 	21.07421875	1.220703125	
=> Training epoch # 12	
 * Finished epoch # 12     top1:  22.705  top5:   1.914
	
=> Training epoch # 13	
 * Finished epoch # 13     top1:  20.430  top5:   0.967
	
 * Best model 	20.4296875	0.966796875	
=> Training epoch # 14	
 * Finished epoch # 14     top1:  23.867  top5:   1.123
	
=> Training epoch # 15	
 * Finished epoch # 15     top1:  22.871  top5:   1.660
	
=> Training epoch # 16	
 * Finished epoch # 16     top1:  20.527  top5:   1.562
	
=> Training epoch # 17	
 * Finished epoch # 17     top1:  23.184  top5:   1.768
	
=> Training epoch # 18	
 * Finished epoch # 18     top1:  25.537  top5:   2.910
	
=> Training epoch # 19	
 * Finished epoch # 19     top1:  17.939  top5:   0.840
	
 * Best model 	17.939453125	0.83984375	
=> Training epoch # 20	
 * Finished epoch # 20     top1:  24.473  top5:   2.031
	
=> Training epoch # 21	
 * Finished epoch # 21     top1:  18.164  top5:   0.908
	
=> Training epoch # 22	
 * Finished epoch # 22     top1:  21.299  top5:   0.957
	
=> Training epoch # 23	
 * Finished epoch # 23     top1:  28.730  top5:   1.768
	
=> Training epoch # 24	
 * Finished epoch # 24     top1:  20.566  top5:   0.938
	
=> Training epoch # 25	
 * Finished epoch # 25     top1:  27.480  top5:   1.260
	
=> Training epoch # 26	
 * Finished epoch # 26     top1:  19.902  top5:   1.279
	
=> Training epoch # 27	
 * Finished epoch # 27     top1:  19.316  top5:   0.996
	
=> Training epoch # 28	
 * Finished epoch # 28     top1:  22.393  top5:   1.807
	
=> Training epoch # 29	
 * Finished epoch # 29     top1:  26.973  top5:   2.148
	
=> Training epoch # 30	
 * Finished epoch # 30     top1:  20.020  top5:   0.986
	
=> Training epoch # 31	
 * Finished epoch # 31     top1:  20.137  top5:   1.260
	
=> Training epoch # 32	
 * Finished epoch # 32     top1:  15.713  top5:   0.645
	
 * Best model 	15.712890625	0.64453125	
=> Training epoch # 33	
 * Finished epoch # 33     top1:  21.348  top5:   1.738
	
=> Training epoch # 34	
 * Finished epoch # 34     top1:  19.014  top5:   1.035
	
=> Training epoch # 35	
 * Finished epoch # 35     top1:  20.410  top5:   1.006
	
=> Training epoch # 36	
 * Finished epoch # 36     top1:  22.070  top5:   1.260
	
=> Training epoch # 37	
 * Finished epoch # 37     top1:  23.857  top5:   0.703
	
=> Training epoch # 38	
 * Finished epoch # 38     top1:  19.609  top5:   0.986
	
=> Training epoch # 39	
 * Finished epoch # 39     top1:  20.840  top5:   1.426
	
=> Training epoch # 40	
 * Finished epoch # 40     top1:  23.057  top5:   1.787
	
=> Training epoch # 41	
 * Finished epoch # 41     top1:  22.109  top5:   0.977
	
=> Training epoch # 42	
 * Finished epoch # 42     top1:  18.721  top5:   0.938
	
=> Training epoch # 43	
 * Finished epoch # 43     top1:  17.422  top5:   0.801
	
=> Training epoch # 44	
 * Finished epoch # 44     top1:  37.275  top5:   3.047
	
=> Training epoch # 45	
 * Finished epoch # 45     top1:  22.744  top5:   1.777
	
=> Training epoch # 46	
 * Finished epoch # 46     top1:  24.541  top5:   1.689
	
=> Training epoch # 47	
 * Finished epoch # 47     top1:  20.703  top5:   1.191
	
=> Training epoch # 48	
 * Finished epoch # 48     top1:  22.266  top5:   1.582
	
=> Training epoch # 49	
 * Finished epoch # 49     top1:  21.729  top5:   0.811
	
=> Training epoch # 50	
 * Finished epoch # 50     top1:  14.805  top5:   0.596
	
 * Best model 	14.8046875	0.595703125	
=> Training epoch # 51	
 * Finished epoch # 51     top1:  22.285  top5:   1.250
	
=> Training epoch # 52	
 * Finished epoch # 52     top1:  19.717  top5:   1.113
	
=> Training epoch # 53	
 * Finished epoch # 53     top1:  17.998  top5:   0.771
	
=> Training epoch # 54	
 * Finished epoch # 54     top1:  20.264  top5:   1.113
	
=> Training epoch # 55	
 * Finished epoch # 55     top1:  16.133  top5:   0.869
	
=> Training epoch # 56	
 * Finished epoch # 56     top1:  18.389  top5:   1.191
	
=> Training epoch # 57	
 * Finished epoch # 57     top1:  19.717  top5:   0.898
	
=> Training epoch # 58	
 * Finished epoch # 58     top1:  18.223  top5:   0.645
	
=> Training epoch # 59	
 * Finished epoch # 59     top1:  19.775  top5:   1.201
	
=> Training epoch # 60	
 * Finished epoch # 60     top1:  22.451  top5:   1.162
	
=> Training epoch # 61	
 * Finished epoch # 61     top1:  17.412  top5:   0.693
	
=> Training epoch # 62	
 * Finished epoch # 62     top1:  23.340  top5:   0.977
	
=> Training epoch # 63	
 * Finished epoch # 63     top1:  25.410  top5:   0.879
	
=> Training epoch # 64	
 * Finished epoch # 64     top1:  18.281  top5:   1.074
	
=> Training epoch # 65	
 * Finished epoch # 65     top1:  19.414  top5:   1.279
	
=> Training epoch # 66	
 * Finished epoch # 66     top1:  28.936  top5:   3.945
	
=> Training epoch # 67	
 * Finished epoch # 67     top1:  25.791  top5:   1.748
	
=> Training epoch # 68	
 * Finished epoch # 68     top1:  22.578  top5:   1.436
	
=> Training epoch # 69	
 * Finished epoch # 69     top1:  20.166  top5:   0.820
	
=> Training epoch # 70	
 * Finished epoch # 70     top1:  16.865  top5:   0.869
	
=> Training epoch # 71	
 * Finished epoch # 71     top1:  16.699  top5:   0.957
	
=> Training epoch # 72	
 * Finished epoch # 72     top1:  21.934  top5:   1.074
	
=> Training epoch # 73	
 * Finished epoch # 73     top1:  20.176  top5:   0.840
	
=> Training epoch # 74	
 * Finished epoch # 74     top1:  17.168  top5:   1.006
	
=> Training epoch # 75	
 * Finished epoch # 75     top1:  27.666  top5:   2.168
	
=> Training epoch # 76	
 * Finished epoch # 76     top1:  17.422  top5:   0.811
	
=> Training epoch # 77	
 * Finished epoch # 77     top1:  17.773  top5:   0.781
	
=> Training epoch # 78	
 * Finished epoch # 78     top1:  17.080  top5:   0.938
	
=> Training epoch # 79	
 * Finished epoch # 79     top1:  27.119  top5:   5.381
	
=> Training epoch # 80	
 * Finished epoch # 80     top1:  18.320  top5:   1.104
	
=> Training epoch # 81	
 * Finished epoch # 81     top1:   7.891  top5:   0.186
	
 * Best model 	7.890625	0.185546875	
=> Training epoch # 82	
 * Finished epoch # 82     top1:   7.998  top5:   0.176
	
=> Training epoch # 83	
 * Finished epoch # 83     top1:   7.451  top5:   0.137
	
 * Best model 	7.451171875	0.13671875	
=> Training epoch # 84	
 * Finished epoch # 84     top1:   7.412  top5:   0.127
	
 * Best model 	7.412109375	0.126953125	
=> Training epoch # 85	
 * Finished epoch # 85     top1:   7.334  top5:   0.156
	
 * Best model 	7.333984375	0.15625	
=> Training epoch # 86	
 * Finished epoch # 86     top1:   7.314  top5:   0.156
	
 * Best model 	7.314453125	0.15625	
=> Training epoch # 87	
 * Finished epoch # 87     top1:   7.295  top5:   0.117
	
 * Best model 	7.294921875	0.1171875	
=> Training epoch # 88	
 * Finished epoch # 88     top1:   7.383  top5:   0.176
	
=> Training epoch # 89	
 * Finished epoch # 89     top1:   7.471  top5:   0.107
	
=> Training epoch # 90	
 * Finished epoch # 90     top1:   7.578  top5:   0.186
	
=> Training epoch # 91	
 * Finished epoch # 91     top1:   7.119  top5:   0.137
	
 * Best model 	7.119140625	0.13671875	
=> Training epoch # 92	
 * Finished epoch # 92     top1:   7.344  top5:   0.166
	
=> Training epoch # 93	
 * Finished epoch # 93     top1:   8.281  top5:   0.166
	
=> Training epoch # 94	
 * Finished epoch # 94     top1:   7.646  top5:   0.146
	
=> Training epoch # 95	
 * Finished epoch # 95     top1:   7.598  top5:   0.166
	
=> Training epoch # 96	
 * Finished epoch # 96     top1:   7.422  top5:   0.205
	
=> Training epoch # 97	
 * Finished epoch # 97     top1:   7.393  top5:   0.215
	
=> Training epoch # 98	
 * Finished epoch # 98     top1:   7.197  top5:   0.176
	
=> Training epoch # 99	
 * Finished epoch # 99     top1:   7.227  top5:   0.215
	
=> Training epoch # 100	
 * Finished epoch # 100     top1:   7.207  top5:   0.176
	
=> Training epoch # 101	
 * Finished epoch # 101     top1:   7.949  top5:   0.205
	
=> Training epoch # 102	
 * Finished epoch # 102     top1:   8.691  top5:   0.264
	
=> Training epoch # 103	
 * Finished epoch # 103     top1:   8.086  top5:   0.293
	
=> Training epoch # 104	
 * Finished epoch # 104     top1:   8.193  top5:   0.264
	
=> Training epoch # 105	
 * Finished epoch # 105     top1:   8.574  top5:   0.244
	
=> Training epoch # 106	
 * Finished epoch # 106     top1:   7.920  top5:   0.195
	
=> Training epoch # 107	
 * Finished epoch # 107     top1:   7.852  top5:   0.244
	
=> Training epoch # 108	
 * Finished epoch # 108     top1:   7.803  top5:   0.205
	
=> Training epoch # 109	
 * Finished epoch # 109     top1:   9.297  top5:   0.371
	
=> Training epoch # 110	
 * Finished epoch # 110     top1:   8.330  top5:   0.264
	
=> Training epoch # 111	
 * Finished epoch # 111     top1:   7.910  top5:   0.186
	
=> Training epoch # 112	
 * Finished epoch # 112     top1:   8.799  top5:   0.352
	
=> Training epoch # 113	
 * Finished epoch # 113     top1:   9.561  top5:   0.439
	
=> Training epoch # 114	
 * Finished epoch # 114     top1:   8.994  top5:   0.283
	
=> Training epoch # 115	
 * Finished epoch # 115     top1:   7.852  top5:   0.254
	
=> Training epoch # 116	
 * Finished epoch # 116     top1:   9.873  top5:   0.293
	
=> Training epoch # 117	
 * Finished epoch # 117     top1:   7.578  top5:   0.205
	
=> Training epoch # 118	
 * Finished epoch # 118     top1:   8.730  top5:   0.293
	
=> Training epoch # 119	
 * Finished epoch # 119     top1:   8.213  top5:   0.186
	
=> Training epoch # 120	
 * Finished epoch # 120     top1:   9.336  top5:   0.273
	
=> Training epoch # 121	
 * Finished epoch # 121     top1:   8.975  top5:   0.293
	
=> Training epoch # 122	
 * Finished epoch # 122     top1:   6.133  top5:   0.254
	
 * Best model 	6.1328125	0.25390625	
=> Training epoch # 123	
 * Finished epoch # 123     top1:   6.113  top5:   0.107
	
 * Best model 	6.11328125	0.107421875	
=> Training epoch # 124	
 * Finished epoch # 124     top1:   5.859  top5:   0.098
	
 * Best model 	5.859375	0.09765625	
=> Training epoch # 125	
 * Finished epoch # 125     top1:   5.693  top5:   0.127
	
 * Best model 	5.693359375	0.126953125	
=> Training epoch # 126	
 * Finished epoch # 126     top1:   5.547  top5:   0.117
	
 * Best model 	5.546875	0.1171875	
=> Training epoch # 127	
 * Finished epoch # 127     top1:   5.635  top5:   0.107
	
=> Training epoch # 128	
 * Finished epoch # 128     top1:   5.566  top5:   0.117
	
=> Training epoch # 129	
 * Finished epoch # 129     top1:   5.488  top5:   0.137
	
 * Best model 	5.48828125	0.13671875	
=> Training epoch # 130	
 * Finished epoch # 130     top1:   5.371  top5:   0.117
	
 * Best model 	5.37109375	0.1171875	
=> Training epoch # 131	
 * Finished epoch # 131     top1:   5.352  top5:   0.117
	
 * Best model 	5.3515625	0.1171875	
=> Training epoch # 132	
 * Finished epoch # 132     top1:   5.547  top5:   0.137
	
=> Training epoch # 133	
 * Finished epoch # 133     top1:   5.527  top5:   0.137
	
=> Training epoch # 134	
 * Finished epoch # 134     top1:   5.537  top5:   0.127
	
=> Training epoch # 135	
 * Finished epoch # 135     top1:   5.410  top5:   0.117
	
=> Training epoch # 136	
 * Finished epoch # 136     top1:   5.859  top5:   0.127
	
=> Training epoch # 137	
 * Finished epoch # 137     top1:   5.186  top5:   0.146
	
 * Best model 	5.185546875	0.146484375	
=> Training epoch # 138	
 * Finished epoch # 138     top1:   5.391  top5:   0.137
	
=> Training epoch # 139	
 * Finished epoch # 139     top1:   5.273  top5:   0.127
	
=> Training epoch # 140	
 * Finished epoch # 140     top1:   5.264  top5:   0.156
	
=> Training epoch # 141	
 * Finished epoch # 141     top1:   5.635  top5:   0.117
	
=> Training epoch # 142	
 * Finished epoch # 142     top1:   5.479  top5:   0.107
	
=> Training epoch # 143	
 * Finished epoch # 143     top1:   5.430  top5:   0.137
	
=> Training epoch # 144	
 * Finished epoch # 144     top1:   5.498  top5:   0.146
	
=> Training epoch # 145	
 * Finished epoch # 145     top1:   5.762  top5:   0.146
	
=> Training epoch # 146	
 * Finished epoch # 146     top1:   5.400  top5:   0.156
	
=> Training epoch # 147	
 * Finished epoch # 147     top1:   5.537  top5:   0.166
	
=> Training epoch # 148	
 * Finished epoch # 148     top1:   5.391  top5:   0.146
	
=> Training epoch # 149	
 * Finished epoch # 149     top1:   5.605  top5:   0.166
	
=> Training epoch # 150	
 * Finished epoch # 150     top1:   5.322  top5:   0.166
	
=> Training epoch # 151	
 * Finished epoch # 151     top1:   5.342  top5:   0.146
	
=> Training epoch # 152	
 * Finished epoch # 152     top1:   5.801  top5:   0.166
	
=> Training epoch # 153	
 * Finished epoch # 153     top1:   5.527  top5:   0.176
	
=> Training epoch # 154	
 * Finished epoch # 154     top1:   5.400  top5:   0.146
	
=> Training epoch # 155	
 * Finished epoch # 155     top1:   5.352  top5:   0.156
	
=> Training epoch # 156	
 * Finished epoch # 156     top1:   5.488  top5:   0.146
	
=> Training epoch # 157	
 * Finished epoch # 157     top1:   5.518  top5:   0.166
	
=> Training epoch # 158	
 * Finished epoch # 158     top1:   5.234  top5:   0.146
	
=> Training epoch # 159	
 * Finished epoch # 159     top1:   5.527  top5:   0.146
	
=> Training epoch # 160	
 * Finished epoch # 160     top1:   5.342  top5:   0.137
	
=> Training epoch # 161	
 * Finished epoch # 161     top1:   5.469  top5:   0.127
	
=> Training epoch # 162	
 * Finished epoch # 162     top1:   5.391  top5:   0.137
	
=> Training epoch # 163	
 * Finished epoch # 163     top1:   5.342  top5:   0.107
	
=> Training epoch # 164	
 * Finished epoch # 164     top1:   5.352  top5:   0.186
	
=> Training epoch # 165	
 * Finished epoch # 165     top1:   5.449  top5:   0.137
	
=> Training epoch # 166	
 * Finished epoch # 166     top1:   5.371  top5:   0.176
	
=> Training epoch # 167	
 * Finished epoch # 167     top1:   5.381  top5:   0.303
	
=> Training epoch # 168	
 * Finished epoch # 168     top1:   5.459  top5:   0.312
	
=> Training epoch # 169	
 * Finished epoch # 169     top1:   5.459  top5:   0.127
	
=> Training epoch # 170	
 * Finished epoch # 170     top1:   5.439  top5:   0.127
	
=> Training epoch # 171	
 * Finished epoch # 171     top1:   5.352  top5:   0.176
	
=> Training epoch # 172	
 * Finished epoch # 172     top1:   5.850  top5:   0.176
	
=> Training epoch # 173	
 * Finished epoch # 173     top1:   5.508  top5:   0.176
	
=> Training epoch # 174	
 * Finished epoch # 174     top1:   5.400  top5:   0.186
	
=> Training epoch # 175	
 * Finished epoch # 175     top1:   5.342  top5:   0.127
	
=> Training epoch # 176	
 * Finished epoch # 176     top1:   5.547  top5:   0.137
	
=> Training epoch # 177	
 * Finished epoch # 177     top1:   5.459  top5:   0.176
	
=> Training epoch # 178	
 * Finished epoch # 178     top1:   5.596  top5:   0.117
	
=> Training epoch # 179	
 * Finished epoch # 179     top1:   5.498  top5:   0.127
	
=> Training epoch # 180	
 * Finished epoch # 180     top1:   5.439  top5:   0.117
	
=> Training epoch # 181	
 * Finished epoch # 181     top1:   5.635  top5:   0.146
	
=> Training epoch # 182	
 * Finished epoch # 182     top1:   5.420  top5:   0.137
	
=> Training epoch # 183	
 * Finished epoch # 183     top1:   5.449  top5:   0.127
	
=> Training epoch # 184	
 * Finished epoch # 184     top1:   5.430  top5:   0.117
	
=> Training epoch # 185	
 * Finished epoch # 185     top1:   5.459  top5:   0.107
	
=> Training epoch # 186	
 * Finished epoch # 186     top1:   5.742  top5:   0.137
	
=> Training epoch # 187	
 * Finished epoch # 187     top1:   5.498  top5:   0.137
	
=> Training epoch # 188	
 * Finished epoch # 188     top1:   5.459  top5:   0.137
	
=> Training epoch # 189	
 * Finished epoch # 189     top1:   5.703  top5:   0.156
	
=> Training epoch # 190	
 * Finished epoch # 190     top1:   5.439  top5:   0.146
	
=> Training epoch # 191	
 * Finished epoch # 191     top1:   5.615  top5:   0.137
	
=> Training epoch # 192	
 * Finished epoch # 192     top1:   5.576  top5:   0.146
	
=> Training epoch # 193	
 * Finished epoch # 193     top1:   5.693  top5:   0.098
	
=> Training epoch # 194	
 * Finished epoch # 194     top1:   5.449  top5:   0.146
	
=> Training epoch # 195	
 * Finished epoch # 195     top1:   5.615  top5:   0.146
	
=> Training epoch # 196	
 * Finished epoch # 196     top1:   5.596  top5:   0.146
	
=> Training epoch # 197	
 * Finished epoch # 197     top1:   5.713  top5:   0.146
	
=> Training epoch # 198	
 * Finished epoch # 198     top1:   5.654  top5:   0.107
	
=> Training epoch # 199	
 * Finished epoch # 199     top1:   5.371  top5:   0.107
	
=> Training epoch # 200	
 * Finished epoch # 200     top1:   5.332  top5:   0.137
	
 * Finished top1:  5.186  top5:  0.146	
