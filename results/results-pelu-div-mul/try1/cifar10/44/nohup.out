=> Creating model from file: models/resnet.lua	
 | ResNet-44 CIFAR-10	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1) without bias
  (2): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedDiv
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedMul
  }
  (3): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (4): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 32, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (5): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 64, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (6): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedDiv
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedMul
  }
  (7): cudnn.SpatialAveragePooling(8x8, 1,1)
  (8): nn.View(64)
  (9): nn.Linear(64 -> 10)
}
=> Training epoch # 1	
 * Finished epoch # 1     top1:  45.557  top5:   5.303
	
 * Best model 	45.556640625	5.302734375	
=> Training epoch # 2	
 * Finished epoch # 2     top1:  33.740  top5:   2.549
	
 * Best model 	33.740234375	2.548828125	
=> Training epoch # 3	
 * Finished epoch # 3     top1:  34.688  top5:   2.979
	
=> Training epoch # 4	
 * Finished epoch # 4     top1:  29.736  top5:   2.031
	
 * Best model 	29.736328125	2.03125	
=> Training epoch # 5	
 * Finished epoch # 5     top1:  32.129  top5:   2.744
	
=> Training epoch # 6	
 * Finished epoch # 6     top1:  21.533  top5:   1.084
	
 * Best model 	21.533203125	1.083984375	
=> Training epoch # 7	
 * Finished epoch # 7     top1:  20.479  top5:   1.025
	
 * Best model 	20.478515625	1.025390625	
=> Training epoch # 8	
 * Finished epoch # 8     top1:  21.865  top5:   1.035
	
=> Training epoch # 9	
 * Finished epoch # 9     top1:  18.652  top5:   0.986
	
 * Best model 	18.65234375	0.986328125	
=> Training epoch # 10	
 * Finished epoch # 10     top1:  20.996  top5:   1.514
	
=> Training epoch # 11	
 * Finished epoch # 11     top1:  21.348  top5:   0.977
	
=> Training epoch # 12	
 * Finished epoch # 12     top1:  23.652  top5:   1.357
	
=> Training epoch # 13	
 * Finished epoch # 13     top1:  21.641  top5:   1.406
	
=> Training epoch # 14	
 * Finished epoch # 14     top1:  18.047  top5:   0.791
	
 * Best model 	18.046875	0.791015625	
=> Training epoch # 15	
 * Finished epoch # 15     top1:  17.705  top5:   0.977
	
 * Best model 	17.705078125	0.9765625	
=> Training epoch # 16	
 * Finished epoch # 16     top1:  16.328  top5:   0.645
	
 * Best model 	16.328125	0.64453125	
=> Training epoch # 17	
 * Finished epoch # 17     top1:  24.912  top5:   0.713
	
=> Training epoch # 18	
 * Finished epoch # 18     top1:  16.533  top5:   0.879
	
=> Training epoch # 19	
 * Finished epoch # 19     top1:  16.328  top5:   0.879
	
=> Training epoch # 20	
 * Finished epoch # 20     top1:  27.305  top5:   1.387
	
=> Training epoch # 21	
 * Finished epoch # 21     top1:  17.520  top5:   0.830
	
=> Training epoch # 22	
 * Finished epoch # 22     top1:  20.459  top5:   1.357
	
=> Training epoch # 23	
 * Finished epoch # 23     top1:  19.033  top5:   0.791
	
=> Training epoch # 24	
 * Finished epoch # 24     top1:  18.213  top5:   0.781
	
=> Training epoch # 25	
 * Finished epoch # 25     top1:  19.570  top5:   1.133
	
=> Training epoch # 26	
 * Finished epoch # 26     top1:  17.373  top5:   0.801
	
=> Training epoch # 27	
 * Finished epoch # 27     top1:  17.744  top5:   1.260
	
=> Training epoch # 28	
 * Finished epoch # 28     top1:  15.479  top5:   0.762
	
 * Best model 	15.478515625	0.76171875	
=> Training epoch # 29	
 * Finished epoch # 29     top1:  16.172  top5:   0.635
	
=> Training epoch # 30	
 * Finished epoch # 30     top1:  17.285  top5:   0.625
	
=> Training epoch # 31	
 * Finished epoch # 31     top1:  15.654  top5:   0.459
	
=> Training epoch # 32	
 * Finished epoch # 32     top1:  16.689  top5:   0.664
	
=> Training epoch # 33	
 * Finished epoch # 33     top1:  15.342  top5:   0.742
	
 * Best model 	15.341796875	0.7421875	
=> Training epoch # 34	
 * Finished epoch # 34     top1:  15.068  top5:   0.723
	
 * Best model 	15.068359375	0.72265625	
=> Training epoch # 35	
 * Finished epoch # 35     top1:  17.959  top5:   0.762
	
=> Training epoch # 36	
 * Finished epoch # 36     top1:  16.309  top5:   0.869
	
=> Training epoch # 37	
 * Finished epoch # 37     top1:  16.738  top5:   0.732
	
=> Training epoch # 38	
 * Finished epoch # 38     top1:  20.439  top5:   0.840
	
=> Training epoch # 39	
 * Finished epoch # 39     top1:  20.957  top5:   1.982
	
=> Training epoch # 40	
 * Finished epoch # 40     top1:  18.232  top5:   0.908
	
=> Training epoch # 41	
 * Finished epoch # 41     top1:  16.201  top5:   0.703
	
=> Training epoch # 42	
 * Finished epoch # 42     top1:  16.582  top5:   0.654
	
=> Training epoch # 43	
 * Finished epoch # 43     top1:  17.178  top5:   0.537
	
=> Training epoch # 44	
 * Finished epoch # 44     top1:  15.977  top5:   0.889
	
=> Training epoch # 45	
 * Finished epoch # 45     top1:  15.010  top5:   0.557
	
 * Best model 	15.009765625	0.556640625	
=> Training epoch # 46	
 * Finished epoch # 46     top1:  13.555  top5:   0.596
	
 * Best model 	13.5546875	0.595703125	
=> Training epoch # 47	
 * Finished epoch # 47     top1:  14.688  top5:   0.615
	
=> Training epoch # 48	
 * Finished epoch # 48     top1:  16.562  top5:   0.654
	
=> Training epoch # 49	
 * Finished epoch # 49     top1:  13.857  top5:   0.566
	
=> Training epoch # 50	
 * Finished epoch # 50     top1:  17.383  top5:   0.908
	
=> Training epoch # 51	
 * Finished epoch # 51     top1:  19.727  top5:   0.986
	
=> Training epoch # 52	
 * Finished epoch # 52     top1:  14.658  top5:   0.527
	
=> Training epoch # 53	
 * Finished epoch # 53     top1:  20.674  top5:   1.553
	
=> Training epoch # 54	
 * Finished epoch # 54     top1:  16.533  top5:   0.752
	
=> Training epoch # 55	
 * Finished epoch # 55     top1:  18.984  top5:   0.908
	
=> Training epoch # 56	
 * Finished epoch # 56     top1:  14.307  top5:   0.557
	
=> Training epoch # 57	
 * Finished epoch # 57     top1:  13.906  top5:   0.771
	
=> Training epoch # 58	
 * Finished epoch # 58     top1:  16.963  top5:   0.820
	
=> Training epoch # 59	
 * Finished epoch # 59     top1:  17.812  top5:   0.635
	
=> Training epoch # 60	
 * Finished epoch # 60     top1:  17.275  top5:   1.123
	
=> Training epoch # 61	
 * Finished epoch # 61     top1:  15.420  top5:   0.518
	
=> Training epoch # 62	
 * Finished epoch # 62     top1:  16.855  top5:   0.615
	
=> Training epoch # 63	
 * Finished epoch # 63     top1:  15.176  top5:   0.703
	
=> Training epoch # 64	
 * Finished epoch # 64     top1:  15.400  top5:   0.781
	
=> Training epoch # 65	
 * Finished epoch # 65     top1:  18.584  top5:   0.918
	
=> Training epoch # 66	
 * Finished epoch # 66     top1:  15.352  top5:   1.172
	
=> Training epoch # 67	
 * Finished epoch # 67     top1:  14.883  top5:   0.664
	
=> Training epoch # 68	
 * Finished epoch # 68     top1:  14.814  top5:   0.576
	
=> Training epoch # 69	
 * Finished epoch # 69     top1:  16.182  top5:   0.908
	
=> Training epoch # 70	
 * Finished epoch # 70     top1:  16.641  top5:   0.537
	
=> Training epoch # 71	
 * Finished epoch # 71     top1:  15.898  top5:   0.811
	
=> Training epoch # 72	
 * Finished epoch # 72     top1:  14.111  top5:   0.527
	
=> Training epoch # 73	
 * Finished epoch # 73     top1:  18.193  top5:   0.615
	
=> Training epoch # 74	
 * Finished epoch # 74     top1:  20.684  top5:   1.240
	
=> Training epoch # 75	
 * Finished epoch # 75     top1:  14.746  top5:   0.586
	
=> Training epoch # 76	
 * Finished epoch # 76     top1:  17.500  top5:   0.723
	
=> Training epoch # 77	
 * Finished epoch # 77     top1:  14.912  top5:   0.723
	
=> Training epoch # 78	
 * Finished epoch # 78     top1:  15.215  top5:   0.635
	
=> Training epoch # 79	
 * Finished epoch # 79     top1:  14.971  top5:   0.830
	
=> Training epoch # 80	
 * Finished epoch # 80     top1:  14.502  top5:   0.615
	
=> Training epoch # 81	
 * Finished epoch # 81     top1:   8.271  top5:   0.225
	
 * Best model 	8.271484375	0.224609375	
=> Training epoch # 82	
 * Finished epoch # 82     top1:   7.744  top5:   0.195
	
 * Best model 	7.744140625	0.1953125	
=> Training epoch # 83	
 * Finished epoch # 83     top1:   8.008  top5:   0.225
	
=> Training epoch # 84	
 * Finished epoch # 84     top1:   7.686  top5:   0.166
	
 * Best model 	7.685546875	0.166015625	
=> Training epoch # 85	
 * Finished epoch # 85     top1:   7.959  top5:   0.186
	
=> Training epoch # 86	
 * Finished epoch # 86     top1:   7.969  top5:   0.303
	
=> Training epoch # 87	
 * Finished epoch # 87     top1:   7.529  top5:   0.156
	
 * Best model 	7.529296875	0.15625	
=> Training epoch # 88	
 * Finished epoch # 88     top1:   7.568  top5:   0.176
	
=> Training epoch # 89	
 * Finished epoch # 89     top1:   7.656  top5:   0.098
	
=> Training epoch # 90	
 * Finished epoch # 90     top1:   7.559  top5:   0.127
	
=> Training epoch # 91	
 * Finished epoch # 91     top1:   7.764  top5:   0.166
	
=> Training epoch # 92	
 * Finished epoch # 92     top1:   7.559  top5:   0.137
	
=> Training epoch # 93	
 * Finished epoch # 93     top1:   7.832  top5:   0.098
	
=> Training epoch # 94	
 * Finished epoch # 94     top1:   7.725  top5:   0.186
	
=> Training epoch # 95	
 * Finished epoch # 95     top1:   7.695  top5:   0.098
	
=> Training epoch # 96	
 * Finished epoch # 96     top1:   7.637  top5:   0.146
	
=> Training epoch # 97	
 * Finished epoch # 97     top1:   7.490  top5:   0.234
	
 * Best model 	7.490234375	0.234375	
=> Training epoch # 98	
 * Finished epoch # 98     top1:   7.549  top5:   0.205
	
=> Training epoch # 99	
 * Finished epoch # 99     top1:   8.408  top5:   0.332
	
=> Training epoch # 100	
 * Finished epoch # 100     top1:   7.441  top5:   0.215
	
 * Best model 	7.44140625	0.21484375	
=> Training epoch # 101	
 * Finished epoch # 101     top1:   7.402  top5:   0.195
	
 * Best model 	7.40234375	0.1953125	
=> Training epoch # 102	
 * Finished epoch # 102     top1:   7.861  top5:   0.176
	
=> Training epoch # 103	
 * Finished epoch # 103     top1:   8.076  top5:   0.215
	
=> Training epoch # 104	
 * Finished epoch # 104     top1:   8.223  top5:   0.205
	
=> Training epoch # 105	
 * Finished epoch # 105     top1:   8.535  top5:   0.176
	
=> Training epoch # 106	
 * Finished epoch # 106     top1:   7.949  top5:   0.244
	
=> Training epoch # 107	
 * Finished epoch # 107     top1:   8.770  top5:   0.244
	
=> Training epoch # 108	
 * Finished epoch # 108     top1:   8.418  top5:   0.215
	
=> Training epoch # 109	
 * Finished epoch # 109     top1:   8.496  top5:   0.410
	
=> Training epoch # 110	
 * Finished epoch # 110     top1:   8.096  top5:   0.234
	
=> Training epoch # 111	
 * Finished epoch # 111     top1:   8.379  top5:   0.254
	
=> Training epoch # 112	
 * Finished epoch # 112     top1:   8.096  top5:   0.215
	
=> Training epoch # 113	
 * Finished epoch # 113     top1:   8.994  top5:   0.244
	
=> Training epoch # 114	
 * Finished epoch # 114     top1:   8.125  top5:   0.215
	
=> Training epoch # 115	
 * Finished epoch # 115     top1:   7.871  top5:   0.273
	
=> Training epoch # 116	
 * Finished epoch # 116     top1:   8.740  top5:   0.244
	
=> Training epoch # 117	
 * Finished epoch # 117     top1:   8.496  top5:   0.234
	
=> Training epoch # 118	
 * Finished epoch # 118     top1:   8.809  top5:   0.381
	
=> Training epoch # 119	
 * Finished epoch # 119     top1:   8.447  top5:   0.273
	
=> Training epoch # 120	
 * Finished epoch # 120     top1:   8.271  top5:   0.205
	
=> Training epoch # 121	
 * Finished epoch # 121     top1:   8.760  top5:   0.322
	
=> Training epoch # 122	
 * Finished epoch # 122     top1:   6.934  top5:   0.166
	
 * Best model 	6.93359375	0.166015625	
=> Training epoch # 123	
 * Finished epoch # 123     top1:   6.709  top5:   0.137
	
 * Best model 	6.708984375	0.13671875	
=> Training epoch # 124	
 * Finished epoch # 124     top1:   6.602  top5:   0.166
	
 * Best model 	6.6015625	0.166015625	
=> Training epoch # 125	
 * Finished epoch # 125     top1:   6.553  top5:   0.176
	
 * Best model 	6.552734375	0.17578125	
=> Training epoch # 126	
 * Finished epoch # 126     top1:   6.377  top5:   0.156
	
 * Best model 	6.376953125	0.15625	
=> Training epoch # 127	
 * Finished epoch # 127     top1:   6.611  top5:   0.166
	
=> Training epoch # 128	
 * Finished epoch # 128     top1:   6.230  top5:   0.127
	
 * Best model 	6.23046875	0.126953125	
=> Training epoch # 129	
 * Finished epoch # 129     top1:   6.611  top5:   0.137
	
=> Training epoch # 130	
 * Finished epoch # 130     top1:   6.689  top5:   0.156
	
=> Training epoch # 131	
 * Finished epoch # 131     top1:   6.309  top5:   0.146
	
=> Training epoch # 132	
 * Finished epoch # 132     top1:   6.504  top5:   0.146
	
=> Training epoch # 133	
 * Finished epoch # 133     top1:   6.797  top5:   0.127
	
=> Training epoch # 134	
 * Finished epoch # 134     top1:   6.465  top5:   0.137
	
=> Training epoch # 135	
 * Finished epoch # 135     top1:   6.289  top5:   0.146
	
=> Training epoch # 136	
 * Finished epoch # 136     top1:   6.484  top5:   0.264
	
=> Training epoch # 137	
 * Finished epoch # 137     top1:   6.514  top5:   0.146
	
=> Training epoch # 138	
 * Finished epoch # 138     top1:   6.191  top5:   0.137
	
 * Best model 	6.19140625	0.13671875	
=> Training epoch # 139	
 * Finished epoch # 139     top1:   6.250  top5:   0.137
	
=> Training epoch # 140	
 * Finished epoch # 140     top1:   6.465  top5:   0.137
	
=> Training epoch # 141	
 * Finished epoch # 141     top1:   6.826  top5:   0.146
	
=> Training epoch # 142	
 * Finished epoch # 142     top1:   6.406  top5:   0.176
	
=> Training epoch # 143	
 * Finished epoch # 143     top1:   6.162  top5:   0.137
	
 * Best model 	6.162109375	0.13671875	
=> Training epoch # 144	
 * Finished epoch # 144     top1:   6.250  top5:   0.156
	
=> Training epoch # 145	
 * Finished epoch # 145     top1:   6.396  top5:   0.156
	
=> Training epoch # 146	
 * Finished epoch # 146     top1:   6.377  top5:   0.127
	
=> Training epoch # 147	
 * Finished epoch # 147     top1:   6.191  top5:   0.137
	
=> Training epoch # 148	
 * Finished epoch # 148     top1:   6.367  top5:   0.156
	
=> Training epoch # 149	
 * Finished epoch # 149     top1:   6.338  top5:   0.146
	
=> Training epoch # 150	
 * Finished epoch # 150     top1:   6.270  top5:   0.127
	
=> Training epoch # 151	
 * Finished epoch # 151     top1:   6.279  top5:   0.127
	
=> Training epoch # 152	
 * Finished epoch # 152     top1:   6.250  top5:   0.146
	
=> Training epoch # 153	
 * Finished epoch # 153     top1:   6.162  top5:   0.146
	
=> Training epoch # 154	
 * Finished epoch # 154     top1:   6.182  top5:   0.127
	
=> Training epoch # 155	
 * Finished epoch # 155     top1:   6.328  top5:   0.117
	
=> Training epoch # 156	
 * Finished epoch # 156     top1:   6.289  top5:   0.107
	
=> Training epoch # 157	
 * Finished epoch # 157     top1:   6.279  top5:   0.117
	
=> Training epoch # 158	
 * Finished epoch # 158     top1:   6.162  top5:   0.117
	
=> Training epoch # 159	
 * Finished epoch # 159     top1:   6.143  top5:   0.127
	
 * Best model 	6.142578125	0.126953125	
=> Training epoch # 160	
 * Finished epoch # 160     top1:   6.523  top5:   0.117
	
=> Training epoch # 161	
 * Finished epoch # 161     top1:   6.357  top5:   0.127
	
=> Training epoch # 162	
 * Finished epoch # 162     top1:   6.152  top5:   0.146
	
=> Training epoch # 163	
 * Finished epoch # 163     top1:   6.396  top5:   0.156
	
=> Training epoch # 164	
 * Finished epoch # 164     top1:   6.260  top5:   0.127
	
=> Training epoch # 165	
 * Finished epoch # 165     top1:   6.123  top5:   0.117
	
 * Best model 	6.123046875	0.1171875	
=> Training epoch # 166	
 * Finished epoch # 166     top1:   6.172  top5:   0.127
	
=> Training epoch # 167	
 * Finished epoch # 167     top1:   6.143  top5:   0.156
	
=> Training epoch # 168	
 * Finished epoch # 168     top1:   6.162  top5:   0.117
	
=> Training epoch # 169	
 * Finished epoch # 169     top1:   6.240  top5:   0.127
	
=> Training epoch # 170	
 * Finished epoch # 170     top1:   6.416  top5:   0.127
	
=> Training epoch # 171	
 * Finished epoch # 171     top1:   6.387  top5:   0.137
	
=> Training epoch # 172	
 * Finished epoch # 172     top1:   6.162  top5:   0.156
	
=> Training epoch # 173	
 * Finished epoch # 173     top1:   6.582  top5:   0.137
	
=> Training epoch # 174	
 * Finished epoch # 174     top1:   6.133  top5:   0.137
	
=> Training epoch # 175	
 * Finished epoch # 175     top1:   6.523  top5:   0.146
	
=> Training epoch # 176	
 * Finished epoch # 176     top1:   6.465  top5:   0.146
	
=> Training epoch # 177	
 * Finished epoch # 177     top1:   6.260  top5:   0.156
	
=> Training epoch # 178	
 * Finished epoch # 178     top1:   6.270  top5:   0.127
	
=> Training epoch # 179	
 * Finished epoch # 179     top1:   6.357  top5:   0.127
	
=> Training epoch # 180	
 * Finished epoch # 180     top1:   6.260  top5:   0.117
	
=> Training epoch # 181	
 * Finished epoch # 181     top1:   6.113  top5:   0.127
	
 * Best model 	6.11328125	0.126953125	
=> Training epoch # 182	
 * Finished epoch # 182     top1:   6.182  top5:   0.127
	
=> Training epoch # 183	
 * Finished epoch # 183     top1:   6.260  top5:   0.146
	
=> Training epoch # 184	
 * Finished epoch # 184     top1:   6.201  top5:   0.137
	
=> Training epoch # 185	
 * Finished epoch # 185     top1:   6.162  top5:   0.137
	
=> Training epoch # 186	
 * Finished epoch # 186     top1:   6.377  top5:   0.137
	
=> Training epoch # 187	
 * Finished epoch # 187     top1:   6.182  top5:   0.137
	
=> Training epoch # 188	
 * Finished epoch # 188     top1:   6.074  top5:   0.137
	
 * Best model 	6.07421875	0.13671875	
=> Training epoch # 189	
 * Finished epoch # 189     top1:   6.123  top5:   0.146
	
=> Training epoch # 190	
 * Finished epoch # 190     top1:   6.250  top5:   0.127
	
=> Training epoch # 191	
 * Finished epoch # 191     top1:   6.348  top5:   0.137
	
=> Training epoch # 192	
 * Finished epoch # 192     top1:   6.123  top5:   0.137
	
=> Training epoch # 193	
 * Finished epoch # 193     top1:   6.865  top5:   0.137
	
=> Training epoch # 194	
 * Finished epoch # 194     top1:   6.387  top5:   0.137
	
=> Training epoch # 195	
 * Finished epoch # 195     top1:   6.182  top5:   0.146
	
=> Training epoch # 196	
 * Finished epoch # 196     top1:   6.035  top5:   0.146
	
 * Best model 	6.03515625	0.146484375	
=> Training epoch # 197	
 * Finished epoch # 197     top1:   6.416  top5:   0.186
	
=> Training epoch # 198	
 * Finished epoch # 198     top1:   6.250  top5:   0.166
	
=> Training epoch # 199	
 * Finished epoch # 199     top1:   6.016  top5:   0.146
	
 * Best model 	6.015625	0.146484375	
=> Training epoch # 200	
 * Finished epoch # 200     top1:   6.055  top5:   0.166
	
 * Finished top1:  6.016  top5:  0.146	
