{
  cudnn : "fastest"
  LR : 0.1
  nThreads : 2
  nClasses : 0
  batchSize : 256
  testOnly : false
  netType : "resnet-bn-elu"
  resetClassifier : false
  shortcutType : "A"
  gen : "gen"
  nGPU : 1
  depth : 110
  weightDecay : 0.001
  data : ""
  dataset : "cifar100"
  epochNumber : 1
  manualSeed : 2
  resume : "results/results-bn-elu/try2/cifar100/110"
  optimState : "none"
  nEpochs : 200
  tenCrop : false
  shareGradInput : false
  backend : "cudnn"
  momentum : 0.9
  retrain : "none"
}
=> Creating model from file: models/resnet-bn-elu.lua	
 | ResNet-110 CIFAR-100	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1) without bias
  (2): nn.Sequential {
    [input -> (1) -> (2) -> output]
    (1): nn.SpatialBatchNormalization (4D) (16)
    (2): nn.ELU (alpha:1.000000)
  }
  (3): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (4): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 32, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (5): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 64, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (6): nn.Sequential {
    [input -> (1) -> (2) -> output]
    (1): nn.SpatialBatchNormalization (4D) (64)
    (2): nn.ELU (alpha:1.000000)
  }
  (7): cudnn.SpatialAveragePooling(8x8, 1,1)
  (8): nn.View(64)
  (9): nn.Linear(64 -> 100)
}
=> Training epoch # 1	
 * Finished epoch # 1     top1:  93.301  top5:  74.189
	
 * Best model 	93.30078125	74.189453125	
=> Training epoch # 2	
 * Finished epoch # 2     top1:  88.184  top5:  63.389
	
 * Best model 	88.18359375	63.388671875	
=> Training epoch # 3	
 * Finished epoch # 3     top1:  85.850  top5:  59.902
	
 * Best model 	85.849609375	59.90234375	
=> Training epoch # 4	
 * Finished epoch # 4     top1:  82.090  top5:  54.307
	
 * Best model 	82.08984375	54.306640625	
=> Training epoch # 5	
 * Finished epoch # 5     top1:  84.355  top5:  57.354
	
=> Training epoch # 6	
 * Finished epoch # 6     top1:  78.828  top5:  49.912
	
 * Best model 	78.828125	49.912109375	
=> Training epoch # 7	
 * Finished epoch # 7     top1:  79.092  top5:  50.518
	
=> Training epoch # 8	
 * Finished epoch # 8     top1:  81.572  top5:  51.211
	
=> Training epoch # 9	
 * Finished epoch # 9     top1:  77.178  top5:  47.061
	
 * Best model 	77.177734375	47.060546875	
=> Training epoch # 10	
 * Finished epoch # 10     top1:  75.195  top5:  45.684
	
 * Best model 	75.1953125	45.68359375	
=> Training epoch # 11	
 * Finished epoch # 11     top1:  77.441  top5:  46.846
	
=> Training epoch # 12	
 * Finished epoch # 12     top1:  73.438  top5:  41.152
	
 * Best model 	73.4375	41.15234375	
=> Training epoch # 13	
 * Finished epoch # 13     top1:  75.371  top5:  43.916
	
=> Training epoch # 14	
 * Finished epoch # 14     top1:  76.270  top5:  44.756
	
=> Training epoch # 15	
 * Finished epoch # 15     top1:  68.516  top5:  34.824
	
 * Best model 	68.515625	34.82421875	
=> Training epoch # 16	
 * Finished epoch # 16     top1:  72.188  top5:  40.986
	
=> Training epoch # 17	
 * Finished epoch # 17     top1:  72.656  top5:  39.834
	
=> Training epoch # 18	
 * Finished epoch # 18     top1:  71.924  top5:  40.762
	
=> Training epoch # 19	
 * Finished epoch # 19     top1:  70.498  top5:  37.197
	
=> Training epoch # 20	
 * Finished epoch # 20     top1:  70.830  top5:  38.262
	
=> Training epoch # 21	
 * Finished epoch # 21     top1:  72.939  top5:  40.498
	
=> Training epoch # 22	
 * Finished epoch # 22     top1:  69.102  top5:  34.062
	
=> Training epoch # 23	
 * Finished epoch # 23     top1:  65.908  top5:  32.637
	
 * Best model 	65.908203125	32.63671875	
=> Training epoch # 24	
 * Finished epoch # 24     top1:  64.326  top5:  31.611
	
 * Best model 	64.326171875	31.611328125	
=> Training epoch # 25	
 * Finished epoch # 25     top1:  67.305  top5:  35.898
	
=> Training epoch # 26	
 * Finished epoch # 26     top1:  63.008  top5:  28.779
	
 * Best model 	63.0078125	28.779296875	
=> Training epoch # 27	
 * Finished epoch # 27     top1:  67.842  top5:  34.668
	
=> Training epoch # 28	
 * Finished epoch # 28     top1:  64.727  top5:  30.830
	
=> Training epoch # 29	
 * Finished epoch # 29     top1:  71.299  top5:  40.732
	
=> Training epoch # 30	
 * Finished epoch # 30     top1:  62.617  top5:  29.268
	
 * Best model 	62.6171875	29.267578125	
=> Training epoch # 31	
 * Finished epoch # 31     top1:  62.715  top5:  29.863
	
=> Training epoch # 32	
 * Finished epoch # 32     top1:  67.090  top5:  35.107
	
=> Training epoch # 33	
 * Finished epoch # 33     top1:  68.301  top5:  35.449
	
=> Training epoch # 34	
 * Finished epoch # 34     top1:  66.338  top5:  34.922
	
=> Training epoch # 35	
 * Finished epoch # 35     top1:  61.943  top5:  28.467
	
 * Best model 	61.943359375	28.466796875	
=> Training epoch # 36	
 * Finished epoch # 36     top1:  69.131  top5:  36.172
	
=> Training epoch # 37	
 * Finished epoch # 37     top1:  60.928  top5:  27.041
	
 * Best model 	60.927734375	27.041015625	
=> Training epoch # 38	
 * Finished epoch # 38     top1:  59.229  top5:  26.279
	
 * Best model 	59.228515625	26.279296875	
=> Training epoch # 39	
 * Finished epoch # 39     top1:  66.143  top5:  32.764
	
=> Training epoch # 40	
 * Finished epoch # 40     top1:  62.783  top5:  31.104
	
=> Training epoch # 41	
 * Finished epoch # 41     top1:  69.590  top5:  38.193
	
=> Training epoch # 42	
 * Finished epoch # 42     top1:  62.930  top5:  29.531
	
=> Training epoch # 43	
 * Finished epoch # 43     top1:  60.000  top5:  25.332
	
=> Training epoch # 44	
 * Finished epoch # 44     top1:  65.693  top5:  34.395
	
=> Training epoch # 45	
 * Finished epoch # 45     top1:  62.383  top5:  30.215
	
=> Training epoch # 46	
 * Finished epoch # 46     top1:  62.559  top5:  28.818
	
=> Training epoch # 47	
 * Finished epoch # 47     top1:  63.564  top5:  31.133
	
=> Training epoch # 48	
 * Finished epoch # 48     top1:  64.902  top5:  30.977
	
=> Training epoch # 49	
 * Finished epoch # 49     top1:  60.186  top5:  27.373
	
=> Training epoch # 50	
 * Finished epoch # 50     top1:  66.650  top5:  32.383
	
=> Training epoch # 51	
 * Finished epoch # 51     top1:  63.779  top5:  29.756
	
=> Training epoch # 52	
 * Finished epoch # 52     top1:  64.297  top5:  28.789
	
=> Training epoch # 53	
 * Finished epoch # 53     top1:  59.922  top5:  27.236
	
=> Training epoch # 54	
 * Finished epoch # 54     top1:  61.182  top5:  27.686
	
=> Training epoch # 55	
 * Finished epoch # 55     top1:  66.230  top5:  32.412
	
=> Training epoch # 56	
 * Finished epoch # 56     top1:  65.430  top5:  33.506
	
=> Training epoch # 57	
 * Finished epoch # 57     top1:  67.725  top5:  35.342
	
=> Training epoch # 58	
 * Finished epoch # 58     top1:  60.928  top5:  27.002
	
=> Training epoch # 59	
 * Finished epoch # 59     top1:  57.754  top5:  24.561
	
 * Best model 	57.75390625	24.560546875	
=> Training epoch # 60	
 * Finished epoch # 60     top1:  58.115  top5:  24.053
	
=> Training epoch # 61	
 * Finished epoch # 61     top1:  55.703  top5:  23.594
	
 * Best model 	55.703125	23.59375	
=> Training epoch # 62	
 * Finished epoch # 62     top1:  67.129  top5:  35.156
	
=> Training epoch # 63	
 * Finished epoch # 63     top1:  60.000  top5:  26.094
	
=> Training epoch # 64	
 * Finished epoch # 64     top1:  58.799  top5:  27.158
	
=> Training epoch # 65	
 * Finished epoch # 65     top1:  60.498  top5:  27.754
	
=> Training epoch # 66	
 * Finished epoch # 66     top1:  59.375  top5:  27.109
	
=> Training epoch # 67	
 * Finished epoch # 67     top1:  56.514  top5:  23.672
	
=> Training epoch # 68	
 * Finished epoch # 68     top1:  60.498  top5:  27.383
	
=> Training epoch # 69	
 * Finished epoch # 69     top1:  63.730  top5:  30.381
	
=> Training epoch # 70	
 * Finished epoch # 70     top1:  66.123  top5:  32.773
	
=> Training epoch # 71	
 * Finished epoch # 71     top1:  60.059  top5:  26.963
	
=> Training epoch # 72	
 * Finished epoch # 72     top1:  68.018  top5:  37.471
	
=> Training epoch # 73	
 * Finished epoch # 73     top1:  61.318  top5:  27.266
	
=> Training epoch # 74	
 * Finished epoch # 74     top1:  63.057  top5:  29.160
	
=> Training epoch # 75	
 * Finished epoch # 75     top1:  58.740  top5:  24.971
	
=> Training epoch # 76	
 * Finished epoch # 76     top1:  61.182  top5:  29.248
	
=> Training epoch # 77	
 * Finished epoch # 77     top1:  61.660  top5:  28.135
	
=> Training epoch # 78	
 * Finished epoch # 78     top1:  59.590  top5:  26.807
	
=> Training epoch # 79	
 * Finished epoch # 79     top1:  63.857  top5:  31.396
	
=> Training epoch # 80	
 * Finished epoch # 80     top1:  61.592  top5:  30.254
	
=> Training epoch # 81	
 * Finished epoch # 81     top1:  41.807  top5:  13.438
	
 * Best model 	41.806640625	13.4375	
=> Training epoch # 82	
 * Finished epoch # 82     top1:  40.098  top5:  12.549
	
 * Best model 	40.09765625	12.548828125	
=> Training epoch # 83	
 * Finished epoch # 83     top1:  40.039  top5:  12.461
	
 * Best model 	40.0390625	12.4609375	
=> Training epoch # 84	
 * Finished epoch # 84     top1:  40.410  top5:  12.500
	
=> Training epoch # 85	
 * Finished epoch # 85     top1:  40.225  top5:  12.764
	
=> Training epoch # 86	
 * Finished epoch # 86     top1:  40.049  top5:  12.686
	
=> Training epoch # 87	
 * Finished epoch # 87     top1:  40.986  top5:  12.793
	
=> Training epoch # 88	
 * Finished epoch # 88     top1:  40.908  top5:  13.018
	
=> Training epoch # 89	
 * Finished epoch # 89     top1:  39.883  top5:  12.607
	
 * Best model 	39.8828125	12.607421875	
=> Training epoch # 90	
 * Finished epoch # 90     top1:  41.143  top5:  13.086
	
=> Training epoch # 91	
 * Finished epoch # 91     top1:  39.648  top5:  12.686
	
 * Best model 	39.6484375	12.685546875	
=> Training epoch # 92	
 * Finished epoch # 92     top1:  41.260  top5:  13.057
	
=> Training epoch # 93	
 * Finished epoch # 93     top1:  43.076  top5:  13.848
	
=> Training epoch # 94	
 * Finished epoch # 94     top1:  41.816  top5:  12.959
	
=> Training epoch # 95	
 * Finished epoch # 95     top1:  41.973  top5:  13.252
	
=> Training epoch # 96	
 * Finished epoch # 96     top1:  40.840  top5:  13.330
	
=> Training epoch # 97	
 * Finished epoch # 97     top1:  40.869  top5:  13.623
	
=> Training epoch # 98	
 * Finished epoch # 98     top1:  41.982  top5:  13.115
	
=> Training epoch # 99	
 * Finished epoch # 99     top1:  41.582  top5:  13.115
	
=> Training epoch # 100	
 * Finished epoch # 100     top1:  41.367  top5:  12.207
	
=> Training epoch # 101	
 * Finished epoch # 101     top1:  41.807  top5:  12.979
	
=> Training epoch # 102	
 * Finished epoch # 102     top1:  43.770  top5:  14.736
	
=> Training epoch # 103	
 * Finished epoch # 103     top1:  42.754  top5:  14.102
	
=> Training epoch # 104	
 * Finished epoch # 104     top1:  41.230  top5:  13.164
	
=> Training epoch # 105	
 * Finished epoch # 105     top1:  43.994  top5:  15.078
	
=> Training epoch # 106	
 * Finished epoch # 106     top1:  42.402  top5:  13.789
	
=> Training epoch # 107	
 * Finished epoch # 107     top1:  42.891  top5:  14.199
	
=> Training epoch # 108	
 * Finished epoch # 108     top1:  42.861  top5:  14.346
	
=> Training epoch # 109	
 * Finished epoch # 109     top1:  43.311  top5:  14.531
	
=> Training epoch # 110	
 * Finished epoch # 110     top1:  44.834  top5:  15.078
	
=> Training epoch # 111	
 * Finished epoch # 111     top1:  42.500  top5:  14.150
	
=> Training epoch # 112	
 * Finished epoch # 112     top1:  42.949  top5:  14.814
	
=> Training epoch # 113	
 * Finished epoch # 113     top1:  47.549  top5:  16.963
	
=> Training epoch # 114	
 * Finished epoch # 114     top1:  43.350  top5:  14.600
	
=> Training epoch # 115	
 * Finished epoch # 115     top1:  44.297  top5:  14.971
	
=> Training epoch # 116	
 * Finished epoch # 116     top1:  43.174  top5:  15.244
	
=> Training epoch # 117	
 * Finished epoch # 117     top1:  43.857  top5:  15.254
	
=> Training epoch # 118	
 * Finished epoch # 118     top1:  41.279  top5:  13.457
	
=> Training epoch # 119	
 * Finished epoch # 119     top1:  43.604  top5:  13.760
	
=> Training epoch # 120	
 * Finished epoch # 120     top1:  41.982  top5:  14.053
	
=> Training epoch # 121	
 * Finished epoch # 121     top1:  43.008  top5:  14.336
	
=> Training epoch # 122	
 * Finished epoch # 122     top1:  35.254  top5:  10.244
	
 * Best model 	35.25390625	10.244140625	
=> Training epoch # 123	
 * Finished epoch # 123     top1:  35.586  top5:  10.029
	
=> Training epoch # 124	
 * Finished epoch # 124     top1:  34.883  top5:   9.775
	
 * Best model 	34.8828125	9.775390625	
=> Training epoch # 125	
 * Finished epoch # 125     top1:  35.342  top5:   9.912
	
=> Training epoch # 126	
 * Finished epoch # 126     top1:  35.186  top5:   9.863
	
=> Training epoch # 127	
 * Finished epoch # 127     top1:  35.029  top5:   9.590
	
=> Training epoch # 128	
 * Finished epoch # 128     top1:  34.580  top5:   9.912
	
 * Best model 	34.580078125	9.912109375	
=> Training epoch # 129	
 * Finished epoch # 129     top1:  35.293  top5:   9.824
	
=> Training epoch # 130	
 * Finished epoch # 130     top1:  35.303  top5:   9.873
	
=> Training epoch # 131	
 * Finished epoch # 131     top1:  35.605  top5:   9.736
	
=> Training epoch # 132	
 * Finished epoch # 132     top1:  35.312  top5:  10.020
	
=> Training epoch # 133	
 * Finished epoch # 133     top1:  35.879  top5:   9.609
	
=> Training epoch # 134	
 * Finished epoch # 134     top1:  35.664  top5:  10.000
	
=> Training epoch # 135	
 * Finished epoch # 135     top1:  34.746  top5:   9.844
	
=> Training epoch # 136	
 * Finished epoch # 136     top1:  35.225  top5:   9.766
	
=> Training epoch # 137	
 * Finished epoch # 137     top1:  35.010  top5:   9.854
	
=> Training epoch # 138	
 * Finished epoch # 138     top1:  35.430  top5:   9.932
	
=> Training epoch # 139	
 * Finished epoch # 139     top1:  34.668  top5:   9.824
	
=> Training epoch # 140	
 * Finished epoch # 140     top1:  35.000  top5:   9.678
	
=> Training epoch # 141	
 * Finished epoch # 141     top1:  35.693  top5:   9.990
	
=> Training epoch # 142	
 * Finished epoch # 142     top1:  34.688  top5:   9.844
	
=> Training epoch # 143	
 * Finished epoch # 143     top1:  35.469  top5:  10.000
	
=> Training epoch # 144	
 * Finished epoch # 144     top1:  34.863  top5:   9.600
	
=> Training epoch # 145	
 * Finished epoch # 145     top1:  35.869  top5:  10.068
	
=> Training epoch # 146	
 * Finished epoch # 146     top1:  35.254  top5:   9.766
	
=> Training epoch # 147	
 * Finished epoch # 147     top1:  35.479  top5:   9.600
	
=> Training epoch # 148	
 * Finished epoch # 148     top1:  34.941  top5:   9.980
	
=> Training epoch # 149	
 * Finished epoch # 149     top1:  36.084  top5:   9.912
	
=> Training epoch # 150	
 * Finished epoch # 150     top1:  35.127  top5:   9.648
	
=> Training epoch # 151	
 * Finished epoch # 151     top1:  35.469  top5:  10.078
	
=> Training epoch # 152	
 * Finished epoch # 152     top1:  35.137  top5:   9.766
	
=> Training epoch # 153	
 * Finished epoch # 153     top1:  34.980  top5:   9.893
	
=> Training epoch # 154	
 * Finished epoch # 154     top1:  35.605  top5:   9.980
	
=> Training epoch # 155	
 * Finished epoch # 155     top1:  35.791  top5:  10.342
	
=> Training epoch # 156	
 * Finished epoch # 156     top1:  35.508  top5:  10.166
	
=> Training epoch # 157	
 * Finished epoch # 157     top1:  35.732  top5:  10.020
	
=> Training epoch # 158	
 * Finished epoch # 158     top1:  35.234  top5:  10.195
	
=> Training epoch # 159	
 * Finished epoch # 159     top1:  35.664  top5:   9.805
	
=> Training epoch # 160	
 * Finished epoch # 160     top1:  35.117  top5:  10.166
	
=> Training epoch # 161	
 * Finished epoch # 161     top1:  35.137  top5:   9.805
	
=> Training epoch # 162	
 * Finished epoch # 162     top1:  35.996  top5:  10.537
	
=> Training epoch # 163	
 * Finished epoch # 163     top1:  35.859  top5:  10.156
	
=> Training epoch # 164	
 * Finished epoch # 164     top1:  35.645  top5:  10.020
	
=> Training epoch # 165	
 * Finished epoch # 165     top1:  35.371  top5:   9.932
	
=> Training epoch # 166	
 * Finished epoch # 166     top1:  35.137  top5:  10.186
	
=> Training epoch # 167	
 * Finished epoch # 167     top1:  35.107  top5:   9.854
	
=> Training epoch # 168	
 * Finished epoch # 168     top1:  35.723  top5:  10.195
	
=> Training epoch # 169	
 * Finished epoch # 169     top1:  35.938  top5:  10.420
	
=> Training epoch # 170	
 * Finished epoch # 170     top1:  35.449  top5:  10.205
	
=> Training epoch # 171	
 * Finished epoch # 171     top1:  35.137  top5:  10.225
	
=> Training epoch # 172	
 * Finished epoch # 172     top1:  35.801  top5:  10.439
	
=> Training epoch # 173	
 * Finished epoch # 173     top1:  35.645  top5:   9.980
	
=> Training epoch # 174	
 * Finished epoch # 174     top1:  35.117  top5:   9.971
	
=> Training epoch # 175	
 * Finished epoch # 175     top1:  35.420  top5:   9.961
	
=> Training epoch # 176	
 * Finished epoch # 176     top1:  35.293  top5:  10.156
	
=> Training epoch # 177	
 * Finished epoch # 177     top1:  34.922  top5:   9.971
	
=> Training epoch # 178	
 * Finished epoch # 178     top1:  35.068  top5:   9.902
	
=> Training epoch # 179	
 * Finished epoch # 179     top1:  35.205  top5:  10.430
	
=> Training epoch # 180	
 * Finished epoch # 180     top1:  34.990  top5:   9.805
	
=> Training epoch # 181	
 * Finished epoch # 181     top1:  35.771  top5:  10.400
	
=> Training epoch # 182	
 * Finished epoch # 182     top1:  36.035  top5:  10.547
	
=> Training epoch # 183	
 * Finished epoch # 183     top1:  35.469  top5:  10.488
	
=> Training epoch # 184	
 * Finished epoch # 184     top1:  35.371  top5:  10.068
	
=> Training epoch # 185	
 * Finished epoch # 185     top1:  35.518  top5:   9.883
	
=> Training epoch # 186	
 * Finished epoch # 186     top1:  35.771  top5:  10.625
	
=> Training epoch # 187	
 * Finished epoch # 187     top1:  35.996  top5:  10.186
	
=> Training epoch # 188	
 * Finished epoch # 188     top1:  35.527  top5:  10.195
	
=> Training epoch # 189	
 * Finished epoch # 189     top1:  35.684  top5:  10.488
	
=> Training epoch # 190	
 * Finished epoch # 190     top1:  35.889  top5:  10.146
	
=> Training epoch # 191	
 * Finished epoch # 191     top1:  35.264  top5:  10.479
	
=> Training epoch # 192	
 * Finished epoch # 192     top1:  35.352  top5:  10.244
	
=> Training epoch # 193	
 * Finished epoch # 193     top1:  35.811  top5:  10.283
	
=> Training epoch # 194	
 * Finished epoch # 194     top1:  35.234  top5:  10.127
	
=> Training epoch # 195	
 * Finished epoch # 195     top1:  35.234  top5:   9.805
	
=> Training epoch # 196	
 * Finished epoch # 196     top1:  35.859  top5:  10.244
	
=> Training epoch # 197	
 * Finished epoch # 197     top1:  34.756  top5:   9.805
	
=> Training epoch # 198	
 * Finished epoch # 198     top1:  34.727  top5:   9.854
	
=> Training epoch # 199	
 * Finished epoch # 199     top1:  35.674  top5:  10.107
	
=> Training epoch # 200	
 * Finished epoch # 200     top1:  35.625  top5:  10.215
	
 * Finished top1: 34.580  top5:  9.912	
