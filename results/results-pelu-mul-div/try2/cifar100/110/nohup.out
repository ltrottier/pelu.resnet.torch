{
  cudnn : "fastest"
  LR : 0.1
  nThreads : 2
  nClasses : 0
  batchSize : 256
  testOnly : false
  netType : "resnet-pelu-mul-div"
  resetClassifier : false
  shortcutType : "A"
  gen : "gen"
  nGPU : 1
  depth : 110
  weightDecay : 0.001
  data : ""
  dataset : "cifar100"
  epochNumber : 1
  manualSeed : 2
  resume : "results/results-pelu-mul-div/try2/cifar100/110"
  optimState : "none"
  nEpochs : 200
  tenCrop : false
  shareGradInput : false
  backend : "cudnn"
  momentum : 0.9
  retrain : "none"
}
=> Creating model from file: models/resnet-pelu-mul-div.lua	
 | ResNet-110 CIFAR-100	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1) without bias
  (2): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedMul
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedDiv
  }
  (3): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (4): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 32, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (5): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 64, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (6): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedMul
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedDiv
  }
  (7): cudnn.SpatialAveragePooling(8x8, 1,1)
  (8): nn.View(64)
  (9): nn.Linear(64 -> 100)
}
=> Training epoch # 1	
 * Finished epoch # 1     top1:  88.496  top5:  64.561
	
 * Best model 	88.49609375	64.560546875	
=> Training epoch # 2	
 * Finished epoch # 2     top1:  82.422  top5:  54.443
	
 * Best model 	82.421875	54.443359375	
=> Training epoch # 3	
 * Finished epoch # 3     top1:  68.955  top5:  36.602
	
 * Best model 	68.955078125	36.6015625	
=> Training epoch # 4	
 * Finished epoch # 4     top1:  61.504  top5:  29.570
	
 * Best model 	61.50390625	29.5703125	
=> Training epoch # 5	
 * Finished epoch # 5     top1:  58.545  top5:  25.205
	
 * Best model 	58.544921875	25.205078125	
=> Training epoch # 6	
 * Finished epoch # 6     top1:  54.902  top5:  22.861
	
 * Best model 	54.90234375	22.861328125	
=> Training epoch # 7	
 * Finished epoch # 7     top1:  54.619  top5:  21.797
	
 * Best model 	54.619140625	21.796875	
=> Training epoch # 8	
 * Finished epoch # 8     top1:  53.779  top5:  24.209
	
 * Best model 	53.779296875	24.208984375	
=> Training epoch # 9	
 * Finished epoch # 9     top1:  51.309  top5:  19.102
	
 * Best model 	51.30859375	19.1015625	
=> Training epoch # 10	
 * Finished epoch # 10     top1:  52.461  top5:  21.719
	
=> Training epoch # 11	
 * Finished epoch # 11     top1:  46.221  top5:  17.109
	
 * Best model 	46.220703125	17.109375	
=> Training epoch # 12	
 * Finished epoch # 12     top1:  47.061  top5:  17.969
	
=> Training epoch # 13	
 * Finished epoch # 13     top1:  53.682  top5:  19.902
	
=> Training epoch # 14	
 * Finished epoch # 14     top1:  47.646  top5:  17.637
	
=> Training epoch # 15	
 * Finished epoch # 15     top1:  46.367  top5:  16.582
	
=> Training epoch # 16	
 * Finished epoch # 16     top1:  52.500  top5:  21.191
	
=> Training epoch # 17	
 * Finished epoch # 17     top1:  52.012  top5:  20.801
	
=> Training epoch # 18	
 * Finished epoch # 18     top1:  52.354  top5:  20.381
	
=> Training epoch # 19	
 * Finished epoch # 19     top1:  47.139  top5:  18.164
	
=> Training epoch # 20	
 * Finished epoch # 20     top1:  47.100  top5:  18.779
	
=> Training epoch # 21	
 * Finished epoch # 21     top1:  57.637  top5:  25.664
	
=> Training epoch # 22	
 * Finished epoch # 22     top1:  46.162  top5:  16.807
	
 * Best model 	46.162109375	16.806640625	
=> Training epoch # 23	
 * Finished epoch # 23     top1:  47.705  top5:  18.682
	
=> Training epoch # 24	
 * Finished epoch # 24     top1:  45.850  top5:  16.475
	
 * Best model 	45.849609375	16.474609375	
=> Training epoch # 25	
 * Finished epoch # 25     top1:  43.877  top5:  15.547
	
 * Best model 	43.876953125	15.546875	
=> Training epoch # 26	
 * Finished epoch # 26     top1:  47.793  top5:  17.666
	
=> Training epoch # 27	
 * Finished epoch # 27     top1:  44.277  top5:  16.299
	
=> Training epoch # 28	
 * Finished epoch # 28     top1:  45.986  top5:  16.357
	
=> Training epoch # 29	
 * Finished epoch # 29     top1:  45.391  top5:  16.553
	
=> Training epoch # 30	
 * Finished epoch # 30     top1:  49.922  top5:  21.143
	
=> Training epoch # 31	
 * Finished epoch # 31     top1:  45.938  top5:  15.771
	
=> Training epoch # 32	
 * Finished epoch # 32     top1:  47.549  top5:  17.588
	
=> Training epoch # 33	
 * Finished epoch # 33     top1:  49.395  top5:  19.561
	
=> Training epoch # 34	
 * Finished epoch # 34     top1:  46.201  top5:  18.564
	
=> Training epoch # 35	
 * Finished epoch # 35     top1:  47.432  top5:  18.242
	
=> Training epoch # 36	
 * Finished epoch # 36     top1:  49.141  top5:  20.332
	
=> Training epoch # 37	
 * Finished epoch # 37     top1:  44.229  top5:  16.504
	
=> Training epoch # 38	
 * Finished epoch # 38     top1:  43.838  top5:  17.041
	
 * Best model 	43.837890625	17.041015625	
=> Training epoch # 39	
 * Finished epoch # 39     top1:  46.758  top5:  16.660
	
=> Training epoch # 40	
 * Finished epoch # 40     top1:  43.682  top5:  16.055
	
 * Best model 	43.681640625	16.0546875	
=> Training epoch # 41	
 * Finished epoch # 41     top1:  44.785  top5:  15.762
	
=> Training epoch # 42	
 * Finished epoch # 42     top1:  49.336  top5:  19.004
	
=> Training epoch # 43	
 * Finished epoch # 43     top1:  44.688  top5:  15.469
	
=> Training epoch # 44	
 * Finished epoch # 44     top1:  52.090  top5:  20.547
	
=> Training epoch # 45	
 * Finished epoch # 45     top1:  57.695  top5:  26.875
	
=> Training epoch # 46	
 * Finished epoch # 46     top1:  52.520  top5:  22.803
	
=> Training epoch # 47	
 * Finished epoch # 47     top1:  49.609  top5:  19.492
	
=> Training epoch # 48	
 * Finished epoch # 48     top1:  47.461  top5:  18.760
	
=> Training epoch # 49	
 * Finished epoch # 49     top1:  44.053  top5:  15.898
	
=> Training epoch # 50	
 * Finished epoch # 50     top1:  47.754  top5:  19.297
	
=> Training epoch # 51	
 * Finished epoch # 51     top1:  52.080  top5:  23.018
	
=> Training epoch # 52	
 * Finished epoch # 52     top1:  44.609  top5:  16.436
	
=> Training epoch # 53	
 * Finished epoch # 53     top1:  44.336  top5:  15.820
	
=> Training epoch # 54	
 * Finished epoch # 54     top1:  46.924  top5:  17.900
	
=> Training epoch # 55	
 * Finished epoch # 55     top1:  46.865  top5:  17.832
	
=> Training epoch # 56	
 * Finished epoch # 56     top1:  44.189  top5:  15.098
	
=> Training epoch # 57	
 * Finished epoch # 57     top1:  42.031  top5:  14.951
	
 * Best model 	42.03125	14.951171875	
=> Training epoch # 58	
 * Finished epoch # 58     top1:  42.227  top5:  14.688
	
=> Training epoch # 59	
 * Finished epoch # 59     top1:  41.953  top5:  15.039
	
 * Best model 	41.953125	15.0390625	
=> Training epoch # 60	
 * Finished epoch # 60     top1:  42.012  top5:  14.521
	
=> Training epoch # 61	
 * Finished epoch # 61     top1:  45.732  top5:  17.725
	
=> Training epoch # 62	
 * Finished epoch # 62     top1:  41.279  top5:  13.721
	
 * Best model 	41.279296875	13.720703125	
=> Training epoch # 63	
 * Finished epoch # 63     top1:  43.779  top5:  16.455
	
=> Training epoch # 64	
 * Finished epoch # 64     top1:  44.121  top5:  16.934
	
=> Training epoch # 65	
 * Finished epoch # 65     top1:  44.648  top5:  15.742
	
=> Training epoch # 66	
 * Finished epoch # 66     top1:  45.635  top5:  17.490
	
=> Training epoch # 67	
 * Finished epoch # 67     top1:  47.402  top5:  17.686
	
=> Training epoch # 68	
 * Finished epoch # 68     top1:  49.150  top5:  20.156
	
=> Training epoch # 69	
 * Finished epoch # 69     top1:  53.975  top5:  24.932
	
=> Training epoch # 70	
 * Finished epoch # 70     top1:  47.822  top5:  19.023
	
=> Training epoch # 71	
 * Finished epoch # 71     top1:  47.939  top5:  17.305
	
=> Training epoch # 72	
 * Finished epoch # 72     top1:  47.783  top5:  18.145
	
=> Training epoch # 73	
 * Finished epoch # 73     top1:  45.039  top5:  16.855
	
=> Training epoch # 74	
 * Finished epoch # 74     top1:  40.381  top5:  13.799
	
 * Best model 	40.380859375	13.798828125	
=> Training epoch # 75	
 * Finished epoch # 75     top1:  47.822  top5:  17.500
	
=> Training epoch # 76	
 * Finished epoch # 76     top1:  45.713  top5:  16.279
	
=> Training epoch # 77	
 * Finished epoch # 77     top1:  46.387  top5:  16.846
	
=> Training epoch # 78	
 * Finished epoch # 78     top1:  46.416  top5:  16.455
	
=> Training epoch # 79	
 * Finished epoch # 79     top1:  49.238  top5:  18.975
	
=> Training epoch # 80	
 * Finished epoch # 80     top1:  43.486  top5:  16.582
	
=> Training epoch # 81	
 * Finished epoch # 81     top1:  27.695  top5:   7.354
	
 * Best model 	27.6953125	7.353515625	
=> Training epoch # 82	
 * Finished epoch # 82     top1:  27.568  top5:   7.334
	
 * Best model 	27.568359375	7.333984375	
=> Training epoch # 83	
 * Finished epoch # 83     top1:  27.568  top5:   7.305
	
=> Training epoch # 84	
 * Finished epoch # 84     top1:  27.324  top5:   7.207
	
 * Best model 	27.32421875	7.20703125	
=> Training epoch # 85	
 * Finished epoch # 85     top1:  30.156  top5:   7.812
	
=> Training epoch # 86	
 * Finished epoch # 86     top1:  28.242  top5:   7.432
	
=> Training epoch # 87	
 * Finished epoch # 87     top1:  30.215  top5:   8.135
	
=> Training epoch # 88	
 * Finished epoch # 88     top1:  30.410  top5:   8.916
	
=> Training epoch # 89	
 * Finished epoch # 89     top1:  32.451  top5:   9.951
	
=> Training epoch # 90	
 * Finished epoch # 90     top1:  32.725  top5:   9.873
	
=> Training epoch # 91	
 * Finished epoch # 91     top1:  31.416  top5:   9.365
	
=> Training epoch # 92	
 * Finished epoch # 92     top1:  33.008  top5:   9.668
	
=> Training epoch # 93	
 * Finished epoch # 93     top1:  32.432  top5:   9.980
	
=> Training epoch # 94	
 * Finished epoch # 94     top1:  32.549  top5:  10.088
	
=> Training epoch # 95	
 * Finished epoch # 95     top1:  32.490  top5:  10.088
	
=> Training epoch # 96	
 * Finished epoch # 96     top1:  34.150  top5:  10.752
	
=> Training epoch # 97	
 * Finished epoch # 97     top1:  34.648  top5:  10.908
	
=> Training epoch # 98	
 * Finished epoch # 98     top1:  33.340  top5:  10.205
	
=> Training epoch # 99	
 * Finished epoch # 99     top1:  36.143  top5:  12.461
	
=> Training epoch # 100	
 * Finished epoch # 100     top1:  36.426  top5:  12.129
	
=> Training epoch # 101	
 * Finished epoch # 101     top1:  36.045  top5:  11.152
	
=> Training epoch # 102	
 * Finished epoch # 102     top1:  36.855  top5:  12.607
	
=> Training epoch # 103	
 * Finished epoch # 103     top1:  33.945  top5:  10.791
	
=> Training epoch # 104	
 * Finished epoch # 104     top1:  34.590  top5:  11.104
	
=> Training epoch # 105	
 * Finished epoch # 105     top1:  37.090  top5:  12.510
	
=> Training epoch # 106	
 * Finished epoch # 106     top1:  37.861  top5:  12.627
	
=> Training epoch # 107	
 * Finished epoch # 107     top1:  36.602  top5:  12.451
	
=> Training epoch # 108	
 * Finished epoch # 108     top1:  39.189  top5:  13.223
	
=> Training epoch # 109	
 * Finished epoch # 109     top1:  35.020  top5:  11.650
	
=> Training epoch # 110	
 * Finished epoch # 110     top1:  36.582  top5:  12.402
	
=> Training epoch # 111	
 * Finished epoch # 111     top1:  34.941  top5:  11.309
	
=> Training epoch # 112	
 * Finished epoch # 112     top1:  40.186  top5:  15.117
	
=> Training epoch # 113	
 * Finished epoch # 113     top1:  37.832  top5:  13.486
	
=> Training epoch # 114	
 * Finished epoch # 114     top1:  35.762  top5:  11.992
	
=> Training epoch # 115	
 * Finished epoch # 115     top1:  40.518  top5:  14.346
	
=> Training epoch # 116	
 * Finished epoch # 116     top1:  39.873  top5:  13.545
	
=> Training epoch # 117	
 * Finished epoch # 117     top1:  40.771  top5:  14.912
	
=> Training epoch # 118	
 * Finished epoch # 118     top1:  38.604  top5:  14.141
	
=> Training epoch # 119	
 * Finished epoch # 119     top1:  37.646  top5:  12.588
	
=> Training epoch # 120	
 * Finished epoch # 120     top1:  38.018  top5:  13.975
	
=> Training epoch # 121	
 * Finished epoch # 121     top1:  40.938  top5:  13.662
	
=> Training epoch # 122	
 * Finished epoch # 122     top1:  26.533  top5:   7.275
	
 * Best model 	26.533203125	7.275390625	
=> Training epoch # 123	
 * Finished epoch # 123     top1:  26.260  top5:   7.285
	
 * Best model 	26.259765625	7.28515625	
=> Training epoch # 124	
 * Finished epoch # 124     top1:  25.742  top5:   7.217
	
 * Best model 	25.7421875	7.216796875	
=> Training epoch # 125	
 * Finished epoch # 125     top1:  25.215  top5:   7.012
	
 * Best model 	25.21484375	7.01171875	
=> Training epoch # 126	
 * Finished epoch # 126     top1:  25.205  top5:   6.963
	
 * Best model 	25.205078125	6.962890625	
=> Training epoch # 127	
 * Finished epoch # 127     top1:  25.000  top5:   7.295
	
 * Best model 	25	7.294921875	
=> Training epoch # 128	
 * Finished epoch # 128     top1:  25.576  top5:   7.090
	
=> Training epoch # 129	
 * Finished epoch # 129     top1:  25.107  top5:   7.100
	
=> Training epoch # 130	
 * Finished epoch # 130     top1:  24.990  top5:   7.119
	
 * Best model 	24.990234375	7.119140625	
=> Training epoch # 131	
 * Finished epoch # 131     top1:  25.088  top5:   7.266
	
=> Training epoch # 132	
 * Finished epoch # 132     top1:  24.795  top5:   6.865
	
 * Best model 	24.794921875	6.865234375	
=> Training epoch # 133	
 * Finished epoch # 133     top1:  25.615  top5:   7.207
	
=> Training epoch # 134	
 * Finished epoch # 134     top1:  24.824  top5:   7.119
	
=> Training epoch # 135	
 * Finished epoch # 135     top1:  25.479  top5:   7.158
	
=> Training epoch # 136	
 * Finished epoch # 136     top1:  25.420  top5:   7.090
	
=> Training epoch # 137	
 * Finished epoch # 137     top1:  25.068  top5:   6.914
	
=> Training epoch # 138	
 * Finished epoch # 138     top1:  25.156  top5:   6.953
	
=> Training epoch # 139	
 * Finished epoch # 139     top1:  25.566  top5:   7.109
	
=> Training epoch # 140	
 * Finished epoch # 140     top1:  25.098  top5:   7.051
	
=> Training epoch # 141	
 * Finished epoch # 141     top1:  25.137  top5:   7.021
	
=> Training epoch # 142	
 * Finished epoch # 142     top1:  25.068  top5:   7.100
	
=> Training epoch # 143	
 * Finished epoch # 143     top1:  25.146  top5:   6.953
	
=> Training epoch # 144	
 * Finished epoch # 144     top1:  25.039  top5:   7.148
	
=> Training epoch # 145	
 * Finished epoch # 145     top1:  25.010  top5:   6.885
	
=> Training epoch # 146	
 * Finished epoch # 146     top1:  25.381  top5:   7.109
	
=> Training epoch # 147	
 * Finished epoch # 147     top1:  25.049  top5:   7.354
	
=> Training epoch # 148	
 * Finished epoch # 148     top1:  25.273  top5:   6.924
	
=> Training epoch # 149	
 * Finished epoch # 149     top1:  25.254  top5:   6.992
	
=> Training epoch # 150	
 * Finished epoch # 150     top1:  25.098  top5:   6.934
	
=> Training epoch # 151	
 * Finished epoch # 151     top1:  25.801  top5:   7.139
	
=> Training epoch # 152	
 * Finished epoch # 152     top1:  25.537  top5:   7.568
	
=> Training epoch # 153	
 * Finished epoch # 153     top1:  24.834  top5:   7.041
	
=> Training epoch # 154	
 * Finished epoch # 154     top1:  25.303  top5:   7.373
	
=> Training epoch # 155	
 * Finished epoch # 155     top1:  25.781  top5:   7.373
	
=> Training epoch # 156	
 * Finished epoch # 156     top1:  25.801  top5:   7.393
	
=> Training epoch # 157	
 * Finished epoch # 157     top1:  24.912  top5:   7.178
	
=> Training epoch # 158	
 * Finished epoch # 158     top1:  25.352  top5:   7.217
	
=> Training epoch # 159	
 * Finished epoch # 159     top1:  25.234  top5:   7.373
	
=> Training epoch # 160	
 * Finished epoch # 160     top1:  24.619  top5:   7.012
	
 * Best model 	24.619140625	7.01171875	
=> Training epoch # 161	
 * Finished epoch # 161     top1:  25.166  top5:   7.119
	
=> Training epoch # 162	
 * Finished epoch # 162     top1:  24.912  top5:   6.914
	
=> Training epoch # 163	
 * Finished epoch # 163     top1:  24.824  top5:   7.314
	
=> Training epoch # 164	
 * Finished epoch # 164     top1:  25.303  top5:   7.207
	
=> Training epoch # 165	
 * Finished epoch # 165     top1:  24.717  top5:   7.168
	
=> Training epoch # 166	
 * Finished epoch # 166     top1:  24.863  top5:   7.051
	
=> Training epoch # 167	
 * Finished epoch # 167     top1:  24.834  top5:   7.129
	
=> Training epoch # 168	
 * Finished epoch # 168     top1:  24.932  top5:   7.295
	
=> Training epoch # 169	
 * Finished epoch # 169     top1:  24.902  top5:   7.100
	
=> Training epoch # 170	
 * Finished epoch # 170     top1:  25.225  top5:   7.246
	
=> Training epoch # 171	
 * Finished epoch # 171     top1:  24.736  top5:   7.246
	
=> Training epoch # 172	
 * Finished epoch # 172     top1:  24.883  top5:   7.100
	
=> Training epoch # 173	
 * Finished epoch # 173     top1:  25.078  top5:   6.895
	
=> Training epoch # 174	
 * Finished epoch # 174     top1:  25.215  top5:   7.139
	
=> Training epoch # 175	
 * Finished epoch # 175     top1:  24.893  top5:   7.217
	
=> Training epoch # 176	
 * Finished epoch # 176     top1:  25.068  top5:   7.158
	
=> Training epoch # 177	
 * Finished epoch # 177     top1:  25.518  top5:   7.852
	
=> Training epoch # 178	
 * Finished epoch # 178     top1:  25.498  top5:   7.256
	
=> Training epoch # 179	
 * Finished epoch # 179     top1:  25.049  top5:   7.070
	
=> Training epoch # 180	
 * Finished epoch # 180     top1:  24.941  top5:   6.924
	
=> Training epoch # 181	
 * Finished epoch # 181     top1:  24.922  top5:   7.051
	
=> Training epoch # 182	
 * Finished epoch # 182     top1:  25.459  top5:   7.305
	
=> Training epoch # 183	
 * Finished epoch # 183     top1:  25.264  top5:   7.139
	
=> Training epoch # 184	
 * Finished epoch # 184     top1:  25.264  top5:   7.568
	
=> Training epoch # 185	
 * Finished epoch # 185     top1:  25.283  top5:   7.314
	
=> Training epoch # 186	
 * Finished epoch # 186     top1:  24.766  top5:   7.148
	
=> Training epoch # 187	
 * Finished epoch # 187     top1:  25.234  top5:   7.471
	
=> Training epoch # 188	
 * Finished epoch # 188     top1:  25.127  top5:   7.217
	
=> Training epoch # 189	
 * Finished epoch # 189     top1:  24.873  top5:   7.168
	
=> Training epoch # 190	
 * Finished epoch # 190     top1:  25.645  top5:   7.051
	
=> Training epoch # 191	
 * Finished epoch # 191     top1:  24.668  top5:   6.992
	
=> Training epoch # 192	
 * Finished epoch # 192     top1:  24.854  top5:   7.158
	
=> Training epoch # 193	
 * Finished epoch # 193     top1:  25.215  top5:   7.031
	
=> Training epoch # 194	
 * Finished epoch # 194     top1:  25.439  top5:   7.197
	
=> Training epoch # 195	
 * Finished epoch # 195     top1:  25.264  top5:   7.393
	
=> Training epoch # 196	
 * Finished epoch # 196     top1:  25.205  top5:   7.129
	
=> Training epoch # 197	
 * Finished epoch # 197     top1:  25.723  top5:   7.178
	
=> Training epoch # 198	
 * Finished epoch # 198     top1:  25.020  top5:   7.197
	
=> Training epoch # 199	
 * Finished epoch # 199     top1:  25.557  top5:   7.246
	
=> Training epoch # 200	
 * Finished epoch # 200     top1:  25.293  top5:   7.090
	
 * Finished top1: 24.619  top5:  7.012	
