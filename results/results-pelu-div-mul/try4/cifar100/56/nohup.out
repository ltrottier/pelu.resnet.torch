{
  cudnn : "fastest"
  LR : 0.1
  nThreads : 2
  nClasses : 0
  batchSize : 256
  testOnly : false
  netType : "resnet"
  resetClassifier : false
  shortcutType : "A"
  gen : "gen"
  nGPU : 1
  depth : 56
  weightDecay : 0.001
  data : ""
  dataset : "cifar100"
  epochNumber : 1
  manualSeed : 2
  resume : "results/try4/cifar100/56"
  optimState : "none"
  nEpochs : 200
  tenCrop : false
  shareGradInput : false
  backend : "cudnn"
  momentum : 0.9
  retrain : "none"
}
=> Creating model from file: models/resnet.lua	
 | ResNet-56 CIFAR-100	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1) without bias
  (2): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedDiv
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedMul
  }
  (3): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (4): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 32, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (5): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 64, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (6): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedDiv
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedMul
  }
  (7): cudnn.SpatialAveragePooling(8x8, 1,1)
  (8): nn.View(64)
  (9): nn.Linear(64 -> 100)
}
=> Training epoch # 1	
 * Finished epoch # 1     top1:  82.852  top5:  56.855
	
 * Best model 	82.8515625	56.85546875	
=> Training epoch # 2	
 * Finished epoch # 2     top1:  72.002  top5:  41.006
	
 * Best model 	72.001953125	41.005859375	
=> Training epoch # 3	
 * Finished epoch # 3     top1:  69.014  top5:  36.416
	
 * Best model 	69.013671875	36.416015625	
=> Training epoch # 4	
 * Finished epoch # 4     top1:  64.385  top5:  32.852
	
 * Best model 	64.384765625	32.8515625	
=> Training epoch # 5	
 * Finished epoch # 5     top1:  59.336  top5:  26.895
	
 * Best model 	59.3359375	26.89453125	
=> Training epoch # 6	
 * Finished epoch # 6     top1:  54.961  top5:  22.822
	
 * Best model 	54.9609375	22.822265625	
=> Training epoch # 7	
 * Finished epoch # 7     top1:  56.152  top5:  24.775
	
=> Training epoch # 8	
 * Finished epoch # 8     top1:  50.459  top5:  19.170
	
 * Best model 	50.458984375	19.169921875	
=> Training epoch # 9	
 * Finished epoch # 9     top1:  54.277  top5:  22.344
	
=> Training epoch # 10	
 * Finished epoch # 10     top1:  48.662  top5:  17.969
	
 * Best model 	48.662109375	17.96875	
=> Training epoch # 11	
 * Finished epoch # 11     top1:  47.578  top5:  17.412
	
 * Best model 	47.578125	17.412109375	
=> Training epoch # 12	
 * Finished epoch # 12     top1:  49.639  top5:  19.141
	
=> Training epoch # 13	
 * Finished epoch # 13     top1:  50.537  top5:  18.945
	
=> Training epoch # 14	
 * Finished epoch # 14     top1:  45.889  top5:  15.713
	
 * Best model 	45.888671875	15.712890625	
=> Training epoch # 15	
 * Finished epoch # 15     top1:  49.629  top5:  18.184
	
=> Training epoch # 16	
 * Finished epoch # 16     top1:  46.006  top5:  16.484
	
=> Training epoch # 17	
 * Finished epoch # 17     top1:  47.207  top5:  16.602
	
=> Training epoch # 18	
 * Finished epoch # 18     top1:  45.732  top5:  17.646
	
 * Best model 	45.732421875	17.646484375	
=> Training epoch # 19	
 * Finished epoch # 19     top1:  45.176  top5:  15.801
	
 * Best model 	45.17578125	15.80078125	
=> Training epoch # 20	
 * Finished epoch # 20     top1:  44.619  top5:  16.123
	
 * Best model 	44.619140625	16.123046875	
=> Training epoch # 21	
 * Finished epoch # 21     top1:  43.838  top5:  15.449
	
 * Best model 	43.837890625	15.44921875	
=> Training epoch # 22	
 * Finished epoch # 22     top1:  46.807  top5:  17.402
	
=> Training epoch # 23	
 * Finished epoch # 23     top1:  43.311  top5:  14.834
	
 * Best model 	43.310546875	14.833984375	
=> Training epoch # 24	
 * Finished epoch # 24     top1:  42.734  top5:  14.990
	
 * Best model 	42.734375	14.990234375	
=> Training epoch # 25	
 * Finished epoch # 25     top1:  41.738  top5:  13.711
	
 * Best model 	41.73828125	13.7109375	
=> Training epoch # 26	
 * Finished epoch # 26     top1:  44.160  top5:  14.756
	
=> Training epoch # 27	
 * Finished epoch # 27     top1:  47.324  top5:  17.471
	
=> Training epoch # 28	
 * Finished epoch # 28     top1:  45.068  top5:  15.830
	
=> Training epoch # 29	
 * Finished epoch # 29     top1:  42.607  top5:  14.316
	
=> Training epoch # 30	
 * Finished epoch # 30     top1:  46.055  top5:  16.836
	
=> Training epoch # 31	
 * Finished epoch # 31     top1:  44.756  top5:  16.016
	
=> Training epoch # 32	
 * Finished epoch # 32     top1:  44.258  top5:  15.537
	
=> Training epoch # 33	
 * Finished epoch # 33     top1:  42.510  top5:  15.264
	
=> Training epoch # 34	
 * Finished epoch # 34     top1:  44.541  top5:  15.557
	
=> Training epoch # 35	
 * Finished epoch # 35     top1:  44.043  top5:  15.625
	
=> Training epoch # 36	
 * Finished epoch # 36     top1:  45.283  top5:  16.855
	
=> Training epoch # 37	
 * Finished epoch # 37     top1:  44.199  top5:  14.248
	
=> Training epoch # 38	
 * Finished epoch # 38     top1:  41.777  top5:  13.906
	
=> Training epoch # 39	
 * Finished epoch # 39     top1:  45.625  top5:  16.064
	
=> Training epoch # 40	
 * Finished epoch # 40     top1:  41.230  top5:  14.004
	
 * Best model 	41.23046875	14.00390625	
=> Training epoch # 41	
 * Finished epoch # 41     top1:  42.227  top5:  14.482
	
=> Training epoch # 42	
 * Finished epoch # 42     top1:  41.670  top5:  13.291
	
=> Training epoch # 43	
 * Finished epoch # 43     top1:  43.389  top5:  14.805
	
=> Training epoch # 44	
 * Finished epoch # 44     top1:  49.570  top5:  17.461
	
=> Training epoch # 45	
 * Finished epoch # 45     top1:  43.730  top5:  15.547
	
=> Training epoch # 46	
 * Finished epoch # 46     top1:  45.264  top5:  16.328
	
=> Training epoch # 47	
 * Finished epoch # 47     top1:  44.229  top5:  16.094
	
=> Training epoch # 48	
 * Finished epoch # 48     top1:  41.787  top5:  13.428
	
=> Training epoch # 49	
 * Finished epoch # 49     top1:  43.555  top5:  15.137
	
=> Training epoch # 50	
 * Finished epoch # 50     top1:  47.891  top5:  19.033
	
=> Training epoch # 51	
 * Finished epoch # 51     top1:  42.002  top5:  14.326
	
=> Training epoch # 52	
 * Finished epoch # 52     top1:  42.832  top5:  16.240
	
=> Training epoch # 53	
 * Finished epoch # 53     top1:  43.320  top5:  14.844
	
=> Training epoch # 54	
 * Finished epoch # 54     top1:  45.215  top5:  16.006
	
=> Training epoch # 55	
 * Finished epoch # 55     top1:  46.738  top5:  17.793
	
=> Training epoch # 56	
 * Finished epoch # 56     top1:  44.648  top5:  15.967
	
=> Training epoch # 57	
 * Finished epoch # 57     top1:  42.969  top5:  15.781
	
=> Training epoch # 58	
 * Finished epoch # 58     top1:  41.787  top5:  14.131
	
=> Training epoch # 59	
 * Finished epoch # 59     top1:  43.037  top5:  14.697
	
=> Training epoch # 60	
 * Finished epoch # 60     top1:  44.043  top5:  15.781
	
=> Training epoch # 61	
 * Finished epoch # 61     top1:  41.895  top5:  13.711
	
=> Training epoch # 62	
 * Finished epoch # 62     top1:  41.084  top5:  13.838
	
 * Best model 	41.083984375	13.837890625	
=> Training epoch # 63	
 * Finished epoch # 63     top1:  42.031  top5:  14.307
	
=> Training epoch # 64	
 * Finished epoch # 64     top1:  43.506  top5:  14.609
	
=> Training epoch # 65	
 * Finished epoch # 65     top1:  41.094  top5:  13.477
	
=> Training epoch # 66	
 * Finished epoch # 66     top1:  44.990  top5:  15.664
	
=> Training epoch # 67	
 * Finished epoch # 67     top1:  40.400  top5:  12.891
	
 * Best model 	40.400390625	12.890625	
=> Training epoch # 68	
 * Finished epoch # 68     top1:  46.006  top5:  17.236
	
=> Training epoch # 69	
 * Finished epoch # 69     top1:  41.172  top5:  14.082
	
=> Training epoch # 70	
 * Finished epoch # 70     top1:  40.957  top5:  13.408
	
=> Training epoch # 71	
 * Finished epoch # 71     top1:  40.635  top5:  13.516
	
=> Training epoch # 72	
 * Finished epoch # 72     top1:  44.316  top5:  16.982
	
=> Training epoch # 73	
 * Finished epoch # 73     top1:  42.373  top5:  14.092
	
=> Training epoch # 74	
 * Finished epoch # 74     top1:  40.566  top5:  13.174
	
=> Training epoch # 75	
 * Finished epoch # 75     top1:  43.896  top5:  15.332
	
=> Training epoch # 76	
 * Finished epoch # 76     top1:  45.732  top5:  17.070
	
=> Training epoch # 77	
 * Finished epoch # 77     top1:  41.055  top5:  12.920
	
=> Training epoch # 78	
 * Finished epoch # 78     top1:  41.279  top5:  13.867
	
=> Training epoch # 79	
 * Finished epoch # 79     top1:  42.363  top5:  14.756
	
=> Training epoch # 80	
 * Finished epoch # 80     top1:  42.402  top5:  15.195
	
=> Training epoch # 81	
 * Finished epoch # 81     top1:  28.369  top5:   8.203
	
 * Best model 	28.369140625	8.203125	
=> Training epoch # 82	
 * Finished epoch # 82     top1:  28.418  top5:   7.197
	
=> Training epoch # 83	
 * Finished epoch # 83     top1:  28.281  top5:   7.168
	
 * Best model 	28.28125	7.16796875	
=> Training epoch # 84	
 * Finished epoch # 84     top1:  28.184  top5:   7.197
	
 * Best model 	28.18359375	7.197265625	
=> Training epoch # 85	
 * Finished epoch # 85     top1:  27.422  top5:   7.285
	
 * Best model 	27.421875	7.28515625	
=> Training epoch # 86	
 * Finished epoch # 86     top1:  28.223  top5:   7.285
	
=> Training epoch # 87	
 * Finished epoch # 87     top1:  29.199  top5:   7.803
	
=> Training epoch # 88	
 * Finished epoch # 88     top1:  28.301  top5:   7.812
	
=> Training epoch # 89	
 * Finished epoch # 89     top1:  28.242  top5:   7.744
	
=> Training epoch # 90	
 * Finished epoch # 90     top1:  29.580  top5:   8.389
	
=> Training epoch # 91	
 * Finished epoch # 91     top1:  28.516  top5:   7.754
	
=> Training epoch # 92	
 * Finished epoch # 92     top1:  28.926  top5:   7.939
	
=> Training epoch # 93	
 * Finished epoch # 93     top1:  29.834  top5:   7.988
	
=> Training epoch # 94	
 * Finished epoch # 94     top1:  29.775  top5:   8.242
	
=> Training epoch # 95	
 * Finished epoch # 95     top1:  29.551  top5:   8.242
	
=> Training epoch # 96	
 * Finished epoch # 96     top1:  28.955  top5:   7.822
	
=> Training epoch # 97	
 * Finished epoch # 97     top1:  29.551  top5:   8.545
	
=> Training epoch # 98	
 * Finished epoch # 98     top1:  29.678  top5:   8.115
	
=> Training epoch # 99	
 * Finished epoch # 99     top1:  30.059  top5:   8.389
	
=> Training epoch # 100	
 * Finished epoch # 100     top1:  28.613  top5:   7.812
	
=> Training epoch # 101	
 * Finished epoch # 101     top1:  29.131  top5:   8.330
	
=> Training epoch # 102	
 * Finished epoch # 102     top1:  30.078  top5:   8.467
	
=> Training epoch # 103	
 * Finished epoch # 103     top1:  30.254  top5:   8.623
	
=> Training epoch # 104	
 * Finished epoch # 104     top1:  29.395  top5:   8.369
	
=> Training epoch # 105	
 * Finished epoch # 105     top1:  29.160  top5:   8.018
	
=> Training epoch # 106	
 * Finished epoch # 106     top1:  29.736  top5:   8.506
	
=> Training epoch # 107	
 * Finished epoch # 107     top1:  30.029  top5:   8.350
	
=> Training epoch # 108	
 * Finished epoch # 108     top1:  29.883  top5:   8.604
	
=> Training epoch # 109	
 * Finished epoch # 109     top1:  29.277  top5:   8.379
	
=> Training epoch # 110	
 * Finished epoch # 110     top1:  30.322  top5:   9.014
	
=> Training epoch # 111	
 * Finished epoch # 111     top1:  30.410  top5:   9.551
	
=> Training epoch # 112	
 * Finished epoch # 112     top1:  30.742  top5:   9.287
	
=> Training epoch # 113	
 * Finished epoch # 113     top1:  30.791  top5:   8.691
	
=> Training epoch # 114	
 * Finished epoch # 114     top1:  30.127  top5:   8.682
	
=> Training epoch # 115	
 * Finished epoch # 115     top1:  30.322  top5:   9.189
	
=> Training epoch # 116	
 * Finished epoch # 116     top1:  30.732  top5:   8.848
	
=> Training epoch # 117	
 * Finished epoch # 117     top1:  30.762  top5:   8.896
	
=> Training epoch # 118	
 * Finished epoch # 118     top1:  30.654  top5:   8.955
	
=> Training epoch # 119	
 * Finished epoch # 119     top1:  29.912  top5:   8.828
	
=> Training epoch # 120	
 * Finished epoch # 120     top1:  29.873  top5:   8.438
	
=> Training epoch # 121	
 * Finished epoch # 121     top1:  29.971  top5:   8.760
	
=> Training epoch # 122	
 * Finished epoch # 122     top1:  27.432  top5:   7.656
	
=> Training epoch # 123	
 * Finished epoch # 123     top1:  27.002  top5:   7.451
	
 * Best model 	27.001953125	7.451171875	
=> Training epoch # 124	
 * Finished epoch # 124     top1:  26.738  top5:   7.480
	
 * Best model 	26.73828125	7.48046875	
=> Training epoch # 125	
 * Finished epoch # 125     top1:  26.895  top5:   7.441
	
=> Training epoch # 126	
 * Finished epoch # 126     top1:  26.631  top5:   7.627
	
 * Best model 	26.630859375	7.626953125	
=> Training epoch # 127	
 * Finished epoch # 127     top1:  26.602  top5:   7.002
	
 * Best model 	26.6015625	7.001953125	
=> Training epoch # 128	
 * Finished epoch # 128     top1:  26.729  top5:   7.197
	
=> Training epoch # 129	
 * Finished epoch # 129     top1:  26.475  top5:   7.402
	
 * Best model 	26.474609375	7.40234375	
=> Training epoch # 130	
 * Finished epoch # 130     top1:  26.572  top5:   7.158
	
=> Training epoch # 131	
 * Finished epoch # 131     top1:  26.904  top5:   7.275
	
=> Training epoch # 132	
 * Finished epoch # 132     top1:  26.016  top5:   7.080
	
 * Best model 	26.015625	7.080078125	
=> Training epoch # 133	
 * Finished epoch # 133     top1:  27.051  top5:   7.627
	
=> Training epoch # 134	
 * Finished epoch # 134     top1:  26.172  top5:   7.217
	
=> Training epoch # 135	
 * Finished epoch # 135     top1:  26.270  top5:   7.070
	
=> Training epoch # 136	
 * Finished epoch # 136     top1:  26.045  top5:   7.002
	
=> Training epoch # 137	
 * Finished epoch # 137     top1:  26.338  top5:   7.139
	
=> Training epoch # 138	
 * Finished epoch # 138     top1:  25.869  top5:   7.100
	
 * Best model 	25.869140625	7.099609375	
=> Training epoch # 139	
 * Finished epoch # 139     top1:  26.299  top5:   7.139
	
=> Training epoch # 140	
 * Finished epoch # 140     top1:  26.680  top5:   7.666
	
=> Training epoch # 141	
 * Finished epoch # 141     top1:  26.611  top5:   7.246
	
=> Training epoch # 142	
 * Finished epoch # 142     top1:  26.182  top5:   7.139
	
=> Training epoch # 143	
 * Finished epoch # 143     top1:  26.660  top5:   7.314
	
=> Training epoch # 144	
 * Finished epoch # 144     top1:  26.826  top5:   7.334
	
=> Training epoch # 145	
 * Finished epoch # 145     top1:  26.357  top5:   7.227
	
=> Training epoch # 146	
 * Finished epoch # 146     top1:  26.660  top5:   7.236
	
=> Training epoch # 147	
 * Finished epoch # 147     top1:  26.191  top5:   7.393
	
=> Training epoch # 148	
 * Finished epoch # 148     top1:  26.074  top5:   7.197
	
=> Training epoch # 149	
 * Finished epoch # 149     top1:  25.986  top5:   7.393
	
=> Training epoch # 150	
 * Finished epoch # 150     top1:  26.221  top5:   7.451
	
=> Training epoch # 151	
 * Finished epoch # 151     top1:  26.318  top5:   7.314
	
=> Training epoch # 152	
 * Finished epoch # 152     top1:  26.904  top5:   7.373
	
=> Training epoch # 153	
 * Finished epoch # 153     top1:  26.660  top5:   7.207
	
=> Training epoch # 154	
 * Finished epoch # 154     top1:  26.768  top5:   7.246
	
=> Training epoch # 155	
 * Finished epoch # 155     top1:  25.918  top5:   7.275
	
=> Training epoch # 156	
 * Finished epoch # 156     top1:  25.977  top5:   7.441
	
=> Training epoch # 157	
 * Finished epoch # 157     top1:  26.592  top5:   7.256
	
=> Training epoch # 158	
 * Finished epoch # 158     top1:  26.689  top5:   7.451
	
=> Training epoch # 159	
 * Finished epoch # 159     top1:  26.191  top5:   7.266
	
=> Training epoch # 160	
 * Finished epoch # 160     top1:  26.631  top5:   7.656
	
=> Training epoch # 161	
 * Finished epoch # 161     top1:  26.406  top5:   7.441
	
=> Training epoch # 162	
 * Finished epoch # 162     top1:  26.934  top5:   7.500
	
=> Training epoch # 163	
 * Finished epoch # 163     top1:  26.260  top5:   7.412
	
=> Training epoch # 164	
 * Finished epoch # 164     top1:  26.387  top5:   7.305
	
=> Training epoch # 165	
 * Finished epoch # 165     top1:  27.227  top5:   7.822
	
=> Training epoch # 166	
 * Finished epoch # 166     top1:  26.729  top5:   7.568
	
=> Training epoch # 167	
 * Finished epoch # 167     top1:  26.162  top5:   7.305
	
=> Training epoch # 168	
 * Finished epoch # 168     top1:  26.367  top5:   7.607
	
=> Training epoch # 169	
 * Finished epoch # 169     top1:  26.885  top5:   7.764
	
=> Training epoch # 170	
 * Finished epoch # 170     top1:  26.562  top5:   7.363
	
=> Training epoch # 171	
 * Finished epoch # 171     top1:  26.074  top5:   7.246
	
=> Training epoch # 172	
 * Finished epoch # 172     top1:  26.445  top5:   7.725
	
=> Training epoch # 173	
 * Finished epoch # 173     top1:  26.338  top5:   7.490
	
=> Training epoch # 174	
 * Finished epoch # 174     top1:  26.729  top5:   7.412
	
=> Training epoch # 175	
 * Finished epoch # 175     top1:  26.865  top5:   7.578
	
=> Training epoch # 176	
 * Finished epoch # 176     top1:  26.924  top5:   7.725
	
=> Training epoch # 177	
 * Finished epoch # 177     top1:  26.748  top5:   7.822
	
=> Training epoch # 178	
 * Finished epoch # 178     top1:  26.729  top5:   7.490
	
=> Training epoch # 179	
 * Finished epoch # 179     top1:  26.523  top5:   7.275
	
=> Training epoch # 180	
 * Finished epoch # 180     top1:  27.168  top5:   7.773
	
=> Training epoch # 181	
 * Finished epoch # 181     top1:  27.402  top5:   7.832
	
=> Training epoch # 182	
 * Finished epoch # 182     top1:  27.100  top5:   7.959
	
=> Training epoch # 183	
 * Finished epoch # 183     top1:  27.109  top5:   7.637
	
=> Training epoch # 184	
 * Finished epoch # 184     top1:  26.650  top5:   7.441
	
=> Training epoch # 185	
 * Finished epoch # 185     top1:  26.846  top5:   7.354
	
=> Training epoch # 186	
 * Finished epoch # 186     top1:  26.191  top5:   7.588
	
=> Training epoch # 187	
 * Finished epoch # 187     top1:  26.260  top5:   7.588
	
=> Training epoch # 188	
 * Finished epoch # 188     top1:  26.611  top5:   7.373
	
=> Training epoch # 189	
 * Finished epoch # 189     top1:  26.465  top5:   7.490
	
=> Training epoch # 190	
 * Finished epoch # 190     top1:  26.826  top5:   7.744
	
=> Training epoch # 191	
 * Finished epoch # 191     top1:  26.230  top5:   7.432
	
=> Training epoch # 192	
 * Finished epoch # 192     top1:  27.041  top5:   7.432
	
=> Training epoch # 193	
 * Finished epoch # 193     top1:  26.816  top5:   7.861
	
=> Training epoch # 194	
 * Finished epoch # 194     top1:  27.051  top5:   7.734
	
=> Training epoch # 195	
 * Finished epoch # 195     top1:  26.455  top5:   7.568
	
=> Training epoch # 196	
 * Finished epoch # 196     top1:  26.650  top5:   7.617
	
=> Training epoch # 197	
 * Finished epoch # 197     top1:  26.377  top5:   7.539
	
=> Training epoch # 198	
 * Finished epoch # 198     top1:  26.514  top5:   7.510
	
=> Training epoch # 199	
 * Finished epoch # 199     top1:  27.100  top5:   7.803
	
=> Training epoch # 200	
 * Finished epoch # 200     top1:  27.178  top5:   7.549
	
 * Finished top1: 25.869  top5:  7.100	
