{
  cudnn : "fastest"
  LR : 0.1
  nThreads : 2
  nClasses : 0
  batchSize : 256
  testOnly : false
  netType : "resnet-pelu-mul-mul"
  resetClassifier : false
  shortcutType : "A"
  gen : "gen"
  nGPU : 1
  depth : 110
  weightDecay : 0.001
  data : ""
  dataset : "cifar10"
  epochNumber : 1
  manualSeed : 2
  resume : "results/results-pelu-mul-mul/try4/cifar10/110"
  optimState : "none"
  nEpochs : 200
  tenCrop : false
  shareGradInput : false
  backend : "cudnn"
  momentum : 0.9
  retrain : "none"
}
=> Creating model from file: models/resnet-pelu-mul-mul.lua	
 | ResNet-110 CIFAR-10	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1) without bias
  (2): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedMul
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedMul
  }
  (3): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (4): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 32, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (5): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 64, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (6): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedMul
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedMul
  }
  (7): cudnn.SpatialAveragePooling(8x8, 1,1)
  (8): nn.View(64)
  (9): nn.Linear(64 -> 10)
}
=> Training epoch # 1	
 * Finished epoch # 1     top1:  49.658  top5:   6.846
	
 * Best model 	49.658203125	6.845703125	
=> Training epoch # 2	
 * Finished epoch # 2     top1:  39.111  top5:   3.906
	
 * Best model 	39.111328125	3.90625	
=> Training epoch # 3	
 * Finished epoch # 3     top1:  29.951  top5:   2.070
	
 * Best model 	29.951171875	2.0703125	
=> Training epoch # 4	
 * Finished epoch # 4     top1:  33.945  top5:   4.639
	
=> Training epoch # 5	
 * Finished epoch # 5     top1:  25.986  top5:   1.338
	
 * Best model 	25.986328125	1.337890625	
=> Training epoch # 6	
 * Finished epoch # 6     top1:  23.057  top5:   1.084
	
 * Best model 	23.056640625	1.083984375	
=> Training epoch # 7	
 * Finished epoch # 7     top1:  23.311  top5:   1.387
	
=> Training epoch # 8	
 * Finished epoch # 8     top1:  30.000  top5:   1.709
	
=> Training epoch # 9	
 * Finished epoch # 9     top1:  22.461  top5:   1.465
	
 * Best model 	22.4609375	1.46484375	
=> Training epoch # 10	
 * Finished epoch # 10     top1:  25.537  top5:   1.582
	
=> Training epoch # 11	
 * Finished epoch # 11     top1:  19.336  top5:   0.898
	
 * Best model 	19.3359375	0.8984375	
=> Training epoch # 12	
 * Finished epoch # 12     top1:  23.428  top5:   1.533
	
=> Training epoch # 13	
 * Finished epoch # 13     top1:  24.980  top5:   1.846
	
=> Training epoch # 14	
 * Finished epoch # 14     top1:  30.742  top5:   2.031
	
=> Training epoch # 15	
 * Finished epoch # 15     top1:  20.615  top5:   0.947
	
=> Training epoch # 16	
 * Finished epoch # 16     top1:  19.170  top5:   1.328
	
 * Best model 	19.169921875	1.328125	
=> Training epoch # 17	
 * Finished epoch # 17     top1:  21.748  top5:   1.631
	
=> Training epoch # 18	
 * Finished epoch # 18     top1:  23.486  top5:   0.791
	
=> Training epoch # 19	
 * Finished epoch # 19     top1:  22.832  top5:   0.908
	
=> Training epoch # 20	
 * Finished epoch # 20     top1:  18.740  top5:   0.781
	
 * Best model 	18.740234375	0.78125	
=> Training epoch # 21	
 * Finished epoch # 21     top1:  18.018  top5:   0.957
	
 * Best model 	18.017578125	0.95703125	
=> Training epoch # 22	
 * Finished epoch # 22     top1:  23.545  top5:   2.051
	
=> Training epoch # 23	
 * Finished epoch # 23     top1:  18.477  top5:   1.455
	
=> Training epoch # 24	
 * Finished epoch # 24     top1:  25.820  top5:   1.191
	
=> Training epoch # 25	
 * Finished epoch # 25     top1:  28.037  top5:   2.939
	
=> Training epoch # 26	
 * Finished epoch # 26     top1:  24.951  top5:   1.807
	
=> Training epoch # 27	
 * Finished epoch # 27     top1:  21.064  top5:   1.895
	
=> Training epoch # 28	
 * Finished epoch # 28     top1:  23.457  top5:   1.924
	
=> Training epoch # 29	
 * Finished epoch # 29     top1:  20.400  top5:   1.113
	
=> Training epoch # 30	
 * Finished epoch # 30     top1:  18.369  top5:   1.279
	
=> Training epoch # 31	
 * Finished epoch # 31     top1:  18.438  top5:   1.143
	
=> Training epoch # 32	
 * Finished epoch # 32     top1:  38.574  top5:   4.092
	
=> Training epoch # 33	
 * Finished epoch # 33     top1:  20.850  top5:   1.396
	
=> Training epoch # 34	
 * Finished epoch # 34     top1:  20.830  top5:   0.801
	
=> Training epoch # 35	
 * Finished epoch # 35     top1:  21.826  top5:   1.445
	
=> Training epoch # 36	
 * Finished epoch # 36     top1:  25.674  top5:   1.953
	
=> Training epoch # 37	
 * Finished epoch # 37     top1:  28.506  top5:   1.758
	
=> Training epoch # 38	
 * Finished epoch # 38     top1:  24.863  top5:   1.426
	
=> Training epoch # 39	
 * Finished epoch # 39     top1:  22.393  top5:   1.865
	
=> Training epoch # 40	
 * Finished epoch # 40     top1:  30.928  top5:   2.441
	
=> Training epoch # 41	
 * Finished epoch # 41     top1:  17.256  top5:   0.957
	
 * Best model 	17.255859375	0.95703125	
=> Training epoch # 42	
 * Finished epoch # 42     top1:  15.879  top5:   0.693
	
 * Best model 	15.87890625	0.693359375	
=> Training epoch # 43	
 * Finished epoch # 43     top1:  26.240  top5:   1.338
	
=> Training epoch # 44	
 * Finished epoch # 44     top1:  27.471  top5:   3.057
	
=> Training epoch # 45	
 * Finished epoch # 45     top1:  19.160  top5:   1.152
	
=> Training epoch # 46	
 * Finished epoch # 46     top1:  26.719  top5:   2.197
	
=> Training epoch # 47	
 * Finished epoch # 47     top1:  25.781  top5:   1.123
	
=> Training epoch # 48	
 * Finished epoch # 48     top1:  21.426  top5:   2.129
	
=> Training epoch # 49	
 * Finished epoch # 49     top1:  14.365  top5:   0.566
	
 * Best model 	14.365234375	0.56640625	
=> Training epoch # 50	
 * Finished epoch # 50     top1:  19.805  top5:   1.484
	
=> Training epoch # 51	
 * Finished epoch # 51     top1:  24.883  top5:   3.398
	
=> Training epoch # 52	
 * Finished epoch # 52     top1:  18.477  top5:   0.693
	
=> Training epoch # 53	
 * Finished epoch # 53     top1:  24.678  top5:   2.402
	
=> Training epoch # 54	
 * Finished epoch # 54     top1:  24.912  top5:   1.895
	
=> Training epoch # 55	
 * Finished epoch # 55     top1:  18.418  top5:   1.357
	
=> Training epoch # 56	
 * Finished epoch # 56     top1:  24.355  top5:   1.816
	
=> Training epoch # 57	
 * Finished epoch # 57     top1:  16.230  top5:   0.771
	
=> Training epoch # 58	
 * Finished epoch # 58     top1:  21.934  top5:   1.855
	
=> Training epoch # 59	
 * Finished epoch # 59     top1:  24.854  top5:   1.807
	
=> Training epoch # 60	
 * Finished epoch # 60     top1:  20.186  top5:   2.197
	
=> Training epoch # 61	
 * Finished epoch # 61     top1:  26.826  top5:   3.105
	
=> Training epoch # 62	
 * Finished epoch # 62     top1:  18.203  top5:   1.279
	
=> Training epoch # 63	
 * Finished epoch # 63     top1:  22.021  top5:   1.807
	
=> Training epoch # 64	
 * Finished epoch # 64     top1:  16.895  top5:   0.596
	
=> Training epoch # 65	
 * Finished epoch # 65     top1:  18.867  top5:   0.781
	
=> Training epoch # 66	
 * Finished epoch # 66     top1:  22.520  top5:   2.012
	
=> Training epoch # 67	
 * Finished epoch # 67     top1:  25.029  top5:   4.580
	
=> Training epoch # 68	
 * Finished epoch # 68     top1:  19.316  top5:   1.104
	
=> Training epoch # 69	
 * Finished epoch # 69     top1:  22.275  top5:   0.938
	
=> Training epoch # 70	
 * Finished epoch # 70     top1:  23.535  top5:   1.523
	
=> Training epoch # 71	
 * Finished epoch # 71     top1:  21.621  top5:   1.670
	
=> Training epoch # 72	
 * Finished epoch # 72     top1:  26.895  top5:   1.992
	
=> Training epoch # 73	
 * Finished epoch # 73     top1:  21.133  top5:   1.152
	
=> Training epoch # 74	
 * Finished epoch # 74     top1:  25.264  top5:   2.256
	
=> Training epoch # 75	
 * Finished epoch # 75     top1:  21.670  top5:   1.445
	
=> Training epoch # 76	
 * Finished epoch # 76     top1:  16.074  top5:   0.576
	
=> Training epoch # 77	
 * Finished epoch # 77     top1:  23.203  top5:   1.689
	
=> Training epoch # 78	
 * Finished epoch # 78     top1:  42.510  top5:   1.709
	
=> Training epoch # 79	
 * Finished epoch # 79     top1:  25.918  top5:   2.051
	
=> Training epoch # 80	
 * Finished epoch # 80     top1:  29.326  top5:   1.318
	
=> Training epoch # 81	
 * Finished epoch # 81     top1:   7.432  top5:   0.156
	
 * Best model 	7.431640625	0.15625	
=> Training epoch # 82	
 * Finished epoch # 82     top1:   7.354  top5:   0.186
	
 * Best model 	7.353515625	0.185546875	
=> Training epoch # 83	
 * Finished epoch # 83     top1:   7.842  top5:   0.176
	
=> Training epoch # 84	
 * Finished epoch # 84     top1:   7.578  top5:   0.186
	
=> Training epoch # 85	
 * Finished epoch # 85     top1:   7.793  top5:   0.254
	
=> Training epoch # 86	
 * Finished epoch # 86     top1:   7.988  top5:   0.156
	
=> Training epoch # 87	
 * Finished epoch # 87     top1:   7.939  top5:   0.117
	
=> Training epoch # 88	
 * Finished epoch # 88     top1:   7.217  top5:   0.146
	
 * Best model 	7.216796875	0.146484375	
=> Training epoch # 89	
 * Finished epoch # 89     top1:   8.301  top5:   0.215
	
=> Training epoch # 90	
 * Finished epoch # 90     top1:   8.145  top5:   0.225
	
=> Training epoch # 91	
 * Finished epoch # 91     top1:   8.516  top5:   0.225
	
=> Training epoch # 92	
 * Finished epoch # 92     top1:  11.084  top5:   0.264
	
=> Training epoch # 93	
 * Finished epoch # 93     top1:  10.537  top5:   0.430
	
=> Training epoch # 94	
 * Finished epoch # 94     top1:   9.092  top5:   0.283
	
=> Training epoch # 95	
 * Finished epoch # 95     top1:   9.141  top5:   0.322
	
=> Training epoch # 96	
 * Finished epoch # 96     top1:   8.027  top5:   0.176
	
=> Training epoch # 97	
 * Finished epoch # 97     top1:   9.746  top5:   0.488
	
=> Training epoch # 98	
 * Finished epoch # 98     top1:  10.996  top5:   0.264
	
=> Training epoch # 99	
 * Finished epoch # 99     top1:  11.562  top5:   0.312
	
=> Training epoch # 100	
 * Finished epoch # 100     top1:  10.508  top5:   0.615
	
=> Training epoch # 101	
 * Finished epoch # 101     top1:  12.881  top5:   0.742
	
=> Training epoch # 102	
 * Finished epoch # 102     top1:  12.539  top5:   0.459
	
=> Training epoch # 103	
 * Finished epoch # 103     top1:  21.152  top5:   0.371
	
=> Training epoch # 104	
 * Finished epoch # 104     top1:  19.170  top5:   1.768
	
=> Training epoch # 105	
 * Finished epoch # 105     top1:   9.863  top5:   0.293
	
=> Training epoch # 106	
 * Finished epoch # 106     top1:  14.785  top5:   0.801
	
=> Training epoch # 107	
 * Finished epoch # 107     top1:  12.539  top5:   0.518
	
=> Training epoch # 108	
 * Finished epoch # 108     top1:  13.623  top5:   0.635
	
=> Training epoch # 109	
 * Finished epoch # 109     top1:  13.008  top5:   0.703
	
=> Training epoch # 110	
 * Finished epoch # 110     top1:  16.465  top5:   1.523
	
=> Training epoch # 111	
 * Finished epoch # 111     top1:  16.113  top5:   1.484
	
=> Training epoch # 112	
 * Finished epoch # 112     top1:  15.283  top5:   0.713
	
=> Training epoch # 113	
 * Finished epoch # 113     top1:  10.342  top5:   0.391
	
=> Training epoch # 114	
 * Finished epoch # 114     top1:  16.318  top5:   0.674
	
=> Training epoch # 115	
 * Finished epoch # 115     top1:  16.357  top5:   1.182
	
=> Training epoch # 116	
 * Finished epoch # 116     top1:  16.875  top5:   1.016
	
=> Training epoch # 117	
 * Finished epoch # 117     top1:  13.633  top5:   0.703
	
=> Training epoch # 118	
 * Finished epoch # 118     top1:  12.412  top5:   0.381
	
=> Training epoch # 119	
 * Finished epoch # 119     top1:  17.217  top5:   1.338
	
=> Training epoch # 120	
 * Finished epoch # 120     top1:  13.281  top5:   0.615
	
=> Training epoch # 121	
 * Finished epoch # 121     top1:  18.672  top5:   0.967
	
=> Training epoch # 122	
 * Finished epoch # 122     top1:   6.631  top5:   0.166
	
 * Best model 	6.630859375	0.166015625	
=> Training epoch # 123	
 * Finished epoch # 123     top1:   6.504  top5:   0.146
	
 * Best model 	6.50390625	0.146484375	
=> Training epoch # 124	
 * Finished epoch # 124     top1:   6.270  top5:   0.166
	
 * Best model 	6.26953125	0.166015625	
=> Training epoch # 125	
 * Finished epoch # 125     top1:   6.260  top5:   0.137
	
 * Best model 	6.259765625	0.13671875	
=> Training epoch # 126	
 * Finished epoch # 126     top1:   6.445  top5:   0.186
	
=> Training epoch # 127	
 * Finished epoch # 127     top1:   6.650  top5:   0.186
	
=> Training epoch # 128	
 * Finished epoch # 128     top1:   6.338  top5:   0.176
	
=> Training epoch # 129	
 * Finished epoch # 129     top1:   6.689  top5:   0.332
	
=> Training epoch # 130	
 * Finished epoch # 130     top1:   6.279  top5:   0.156
	
=> Training epoch # 131	
 * Finished epoch # 131     top1:   6.123  top5:   0.166
	
 * Best model 	6.123046875	0.166015625	
=> Training epoch # 132	
 * Finished epoch # 132     top1:   6.240  top5:   0.176
	
=> Training epoch # 133	
 * Finished epoch # 133     top1:   6.104  top5:   0.186
	
 * Best model 	6.103515625	0.185546875	
=> Training epoch # 134	
 * Finished epoch # 134     top1:   6.250  top5:   0.186
	
=> Training epoch # 135	
 * Finished epoch # 135     top1:   6.309  top5:   0.195
	
=> Training epoch # 136	
 * Finished epoch # 136     top1:   6.377  top5:   0.195
	
=> Training epoch # 137	
 * Finished epoch # 137     top1:   6.240  top5:   0.176
	
=> Training epoch # 138	
 * Finished epoch # 138     top1:   6.152  top5:   0.166
	
=> Training epoch # 139	
 * Finished epoch # 139     top1:   6.191  top5:   0.156
	
=> Training epoch # 140	
 * Finished epoch # 140     top1:   6.143  top5:   0.186
	
=> Training epoch # 141	
 * Finished epoch # 141     top1:   6.357  top5:   0.166
	
=> Training epoch # 142	
 * Finished epoch # 142     top1:   6.465  top5:   0.166
	
=> Training epoch # 143	
 * Finished epoch # 143     top1:   6.270  top5:   0.166
	
=> Training epoch # 144	
 * Finished epoch # 144     top1:   6.104  top5:   0.186
	
=> Training epoch # 145	
 * Finished epoch # 145     top1:   6.270  top5:   0.195
	
=> Training epoch # 146	
 * Finished epoch # 146     top1:   6.270  top5:   0.176
	
=> Training epoch # 147	
 * Finished epoch # 147     top1:   6.299  top5:   0.186
	
=> Training epoch # 148	
 * Finished epoch # 148     top1:   6.504  top5:   0.186
	
=> Training epoch # 149	
 * Finished epoch # 149     top1:   6.445  top5:   0.156
	
=> Training epoch # 150	
 * Finished epoch # 150     top1:   6.396  top5:   0.195
	
=> Training epoch # 151	
 * Finished epoch # 151     top1:   6.299  top5:   0.186
	
=> Training epoch # 152	
 * Finished epoch # 152     top1:   6.475  top5:   0.332
	
=> Training epoch # 153	
 * Finished epoch # 153     top1:   6.201  top5:   0.176
	
=> Training epoch # 154	
 * Finished epoch # 154     top1:   6.377  top5:   0.176
	
=> Training epoch # 155	
 * Finished epoch # 155     top1:   6.357  top5:   0.186
	
=> Training epoch # 156	
 * Finished epoch # 156     top1:   6.865  top5:   0.225
	
=> Training epoch # 157	
 * Finished epoch # 157     top1:   6.230  top5:   0.186
	
=> Training epoch # 158	
 * Finished epoch # 158     top1:   6.123  top5:   0.215
	
=> Training epoch # 159	
 * Finished epoch # 159     top1:   6.328  top5:   0.195
	
=> Training epoch # 160	
 * Finished epoch # 160     top1:   6.113  top5:   0.186
	
=> Training epoch # 161	
 * Finished epoch # 161     top1:   6.396  top5:   0.205
	
=> Training epoch # 162	
 * Finished epoch # 162     top1:   6.621  top5:   0.195
	
=> Training epoch # 163	
 * Finished epoch # 163     top1:   6.338  top5:   0.195
	
=> Training epoch # 164	
 * Finished epoch # 164     top1:   6.309  top5:   0.225
	
=> Training epoch # 165	
 * Finished epoch # 165     top1:   6.191  top5:   0.225
	
=> Training epoch # 166	
 * Finished epoch # 166     top1:   6.289  top5:   0.205
	
=> Training epoch # 167	
 * Finished epoch # 167     top1:   6.162  top5:   0.244
	
=> Training epoch # 168	
 * Finished epoch # 168     top1:   6.318  top5:   0.215
	
=> Training epoch # 169	
 * Finished epoch # 169     top1:   6.279  top5:   0.195
	
=> Training epoch # 170	
 * Finished epoch # 170     top1:   7.021  top5:   0.205
	
=> Training epoch # 171	
 * Finished epoch # 171     top1:   6.211  top5:   0.215
	
=> Training epoch # 172	
 * Finished epoch # 172     top1:   6.045  top5:   0.195
	
 * Best model 	6.044921875	0.1953125	
=> Training epoch # 173	
 * Finished epoch # 173     top1:   6.377  top5:   0.225
	
=> Training epoch # 174	
 * Finished epoch # 174     top1:   6.172  top5:   0.215
	
=> Training epoch # 175	
 * Finished epoch # 175     top1:   6.230  top5:   0.234
	
=> Training epoch # 176	
 * Finished epoch # 176     top1:   6.123  top5:   0.205
	
=> Training epoch # 177	
 * Finished epoch # 177     top1:   6.777  top5:   0.225
	
=> Training epoch # 178	
 * Finished epoch # 178     top1:   6.338  top5:   0.234
	
=> Training epoch # 179	
 * Finished epoch # 179     top1:   6.123  top5:   0.215
	
=> Training epoch # 180	
 * Finished epoch # 180     top1:   6.494  top5:   0.195
	
=> Training epoch # 181	
 * Finished epoch # 181     top1:   6.514  top5:   0.186
	
=> Training epoch # 182	
 * Finished epoch # 182     top1:   6.523  top5:   0.283
	
=> Training epoch # 183	
 * Finished epoch # 183     top1:   6.797  top5:   0.264
	
=> Training epoch # 184	
 * Finished epoch # 184     top1:   6.504  top5:   0.205
	
=> Training epoch # 185	
 * Finished epoch # 185     top1:   7.061  top5:   0.244
	
=> Training epoch # 186	
 * Finished epoch # 186     top1:   6.426  top5:   0.215
	
=> Training epoch # 187	
 * Finished epoch # 187     top1:   6.445  top5:   0.264
	
=> Training epoch # 188	
 * Finished epoch # 188     top1:   7.051  top5:   0.195
	
=> Training epoch # 189	
 * Finished epoch # 189     top1:   6.377  top5:   0.225
	
=> Training epoch # 190	
 * Finished epoch # 190     top1:   6.982  top5:   0.215
	
=> Training epoch # 191	
 * Finished epoch # 191     top1:   6.562  top5:   0.205
	
=> Training epoch # 192	
 * Finished epoch # 192     top1:   6.318  top5:   0.234
	
=> Training epoch # 193	
 * Finished epoch # 193     top1:   6.250  top5:   0.215
	
=> Training epoch # 194	
 * Finished epoch # 194     top1:   6.465  top5:   0.195
	
=> Training epoch # 195	
 * Finished epoch # 195     top1:   6.924  top5:   0.273
	
=> Training epoch # 196	
 * Finished epoch # 196     top1:   6.445  top5:   0.176
	
=> Training epoch # 197	
 * Finished epoch # 197     top1:   7.012  top5:   0.186
	
=> Training epoch # 198	
 * Finished epoch # 198     top1:   6.328  top5:   0.244
	
=> Training epoch # 199	
 * Finished epoch # 199     top1:   6.572  top5:   0.234
	
=> Training epoch # 200	
 * Finished epoch # 200     top1:   6.875  top5:   0.205
	
 * Finished top1:  6.045  top5:  0.195	
