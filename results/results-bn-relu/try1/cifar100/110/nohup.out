{
  cudnn : "fastest"
  LR : 0.1
  nThreads : 2
  nClasses : 0
  batchSize : 256
  testOnly : false
  netType : "resnet-bn-relu"
  resetClassifier : false
  shortcutType : "A"
  gen : "gen"
  nGPU : 1
  depth : 110
  weightDecay : 0.001
  data : ""
  dataset : "cifar100"
  epochNumber : 1
  manualSeed : 2
  resume : "results/results-bn-relu/try1/cifar100/110"
  optimState : "none"
  nEpochs : 200
  tenCrop : false
  shareGradInput : false
  backend : "cudnn"
  momentum : 0.9
  retrain : "none"
}
=> Creating model from file: models/resnet-bn-relu.lua	
 | ResNet-110 CIFAR-100	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1) without bias
  (2): nn.Sequential {
    [input -> (1) -> (2) -> output]
    (1): nn.SpatialBatchNormalization (4D) (16)
    (2): nn.ReLU
  }
  (3): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (4): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 32, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (5): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 64, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ReLU
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (6): nn.Sequential {
    [input -> (1) -> (2) -> output]
    (1): nn.SpatialBatchNormalization (4D) (64)
    (2): nn.ReLU
  }
  (7): cudnn.SpatialAveragePooling(8x8, 1,1)
  (8): nn.View(64)
  (9): nn.Linear(64 -> 100)
}
=> Training epoch # 1	
 * Finished epoch # 1     top1:  89.355  top5:  67.715
	
 * Best model 	89.35546875	67.71484375	
=> Training epoch # 2	
 * Finished epoch # 2     top1:  86.416  top5:  59.248
	
 * Best model 	86.416015625	59.248046875	
=> Training epoch # 3	
 * Finished epoch # 3     top1:  82.695  top5:  55.273
	
 * Best model 	82.6953125	55.2734375	
=> Training epoch # 4	
 * Finished epoch # 4     top1:  74.746  top5:  41.572
	
 * Best model 	74.74609375	41.572265625	
=> Training epoch # 5	
 * Finished epoch # 5     top1:  68.184  top5:  33.818
	
 * Best model 	68.18359375	33.818359375	
=> Training epoch # 6	
 * Finished epoch # 6     top1:  62.510  top5:  29.414
	
 * Best model 	62.509765625	29.4140625	
=> Training epoch # 7	
 * Finished epoch # 7     top1:  61.064  top5:  27.480
	
 * Best model 	61.064453125	27.48046875	
=> Training epoch # 8	
 * Finished epoch # 8     top1:  62.334  top5:  28.203
	
=> Training epoch # 9	
 * Finished epoch # 9     top1:  58.721  top5:  25.566
	
 * Best model 	58.720703125	25.56640625	
=> Training epoch # 10	
 * Finished epoch # 10     top1:  55.615  top5:  22.256
	
 * Best model 	55.615234375	22.255859375	
=> Training epoch # 11	
 * Finished epoch # 11     top1:  58.438  top5:  25.332
	
=> Training epoch # 12	
 * Finished epoch # 12     top1:  53.584  top5:  21.719
	
 * Best model 	53.583984375	21.71875	
=> Training epoch # 13	
 * Finished epoch # 13     top1:  50.811  top5:  18.916
	
 * Best model 	50.810546875	18.916015625	
=> Training epoch # 14	
 * Finished epoch # 14     top1:  56.035  top5:  25.312
	
=> Training epoch # 15	
 * Finished epoch # 15     top1:  52.871  top5:  23.018
	
=> Training epoch # 16	
 * Finished epoch # 16     top1:  55.557  top5:  24.092
	
=> Training epoch # 17	
 * Finished epoch # 17     top1:  55.850  top5:  23.301
	
=> Training epoch # 18	
 * Finished epoch # 18     top1:  57.451  top5:  23.779
	
=> Training epoch # 19	
 * Finished epoch # 19     top1:  52.588  top5:  21.162
	
=> Training epoch # 20	
 * Finished epoch # 20     top1:  60.234  top5:  27.500
	
=> Training epoch # 21	
 * Finished epoch # 21     top1:  51.787  top5:  21.689
	
=> Training epoch # 22	
 * Finished epoch # 22     top1:  52.998  top5:  22.012
	
=> Training epoch # 23	
 * Finished epoch # 23     top1:  52.207  top5:  19.834
	
=> Training epoch # 24	
 * Finished epoch # 24     top1:  53.018  top5:  21.523
	
=> Training epoch # 25	
 * Finished epoch # 25     top1:  51.934  top5:  19.424
	
=> Training epoch # 26	
 * Finished epoch # 26     top1:  54.482  top5:  21.982
	
=> Training epoch # 27	
 * Finished epoch # 27     top1:  51.191  top5:  19.883
	
=> Training epoch # 28	
 * Finished epoch # 28     top1:  49.189  top5:  19.590
	
 * Best model 	49.189453125	19.58984375	
=> Training epoch # 29	
 * Finished epoch # 29     top1:  48.428  top5:  18.369
	
 * Best model 	48.427734375	18.369140625	
=> Training epoch # 30	
 * Finished epoch # 30     top1:  49.834  top5:  18.398
	
=> Training epoch # 31	
 * Finished epoch # 31     top1:  50.049  top5:  19.277
	
=> Training epoch # 32	
 * Finished epoch # 32     top1:  46.055  top5:  17.227
	
 * Best model 	46.0546875	17.2265625	
=> Training epoch # 33	
 * Finished epoch # 33     top1:  46.533  top5:  17.109
	
=> Training epoch # 34	
 * Finished epoch # 34     top1:  50.039  top5:  19.570
	
=> Training epoch # 35	
 * Finished epoch # 35     top1:  46.777  top5:  17.061
	
=> Training epoch # 36	
 * Finished epoch # 36     top1:  44.688  top5:  16.074
	
 * Best model 	44.6875	16.07421875	
=> Training epoch # 37	
 * Finished epoch # 37     top1:  46.758  top5:  17.520
	
=> Training epoch # 38	
 * Finished epoch # 38     top1:  51.953  top5:  20.176
	
=> Training epoch # 39	
 * Finished epoch # 39     top1:  50.352  top5:  18.750
	
=> Training epoch # 40	
 * Finished epoch # 40     top1:  47.139  top5:  16.895
	
=> Training epoch # 41	
 * Finished epoch # 41     top1:  49.668  top5:  18.994
	
=> Training epoch # 42	
 * Finished epoch # 42     top1:  45.312  top5:  16.074
	
=> Training epoch # 43	
 * Finished epoch # 43     top1:  46.729  top5:  16.689
	
=> Training epoch # 44	
 * Finished epoch # 44     top1:  47.686  top5:  17.305
	
=> Training epoch # 45	
 * Finished epoch # 45     top1:  47.979  top5:  17.510
	
=> Training epoch # 46	
 * Finished epoch # 46     top1:  47.471  top5:  18.047
	
=> Training epoch # 47	
 * Finished epoch # 47     top1:  45.566  top5:  15.967
	
=> Training epoch # 48	
 * Finished epoch # 48     top1:  51.807  top5:  21.113
	
=> Training epoch # 49	
 * Finished epoch # 49     top1:  49.561  top5:  19.141
	
=> Training epoch # 50	
 * Finished epoch # 50     top1:  50.635  top5:  19.941
	
=> Training epoch # 51	
 * Finished epoch # 51     top1:  55.381  top5:  24.521
	
=> Training epoch # 52	
 * Finished epoch # 52     top1:  47.002  top5:  16.797
	
=> Training epoch # 53	
 * Finished epoch # 53     top1:  49.014  top5:  17.695
	
=> Training epoch # 54	
 * Finished epoch # 54     top1:  44.814  top5:  16.201
	
=> Training epoch # 55	
 * Finished epoch # 55     top1:  47.061  top5:  16.650
	
=> Training epoch # 56	
 * Finished epoch # 56     top1:  45.879  top5:  17.051
	
=> Training epoch # 57	
 * Finished epoch # 57     top1:  47.900  top5:  18.076
	
=> Training epoch # 58	
 * Finished epoch # 58     top1:  52.295  top5:  20.957
	
=> Training epoch # 59	
 * Finished epoch # 59     top1:  48.975  top5:  18.125
	
=> Training epoch # 60	
 * Finished epoch # 60     top1:  48.535  top5:  18.447
	
=> Training epoch # 61	
 * Finished epoch # 61     top1:  48.154  top5:  18.047
	
=> Training epoch # 62	
 * Finished epoch # 62     top1:  51.680  top5:  20.625
	
=> Training epoch # 63	
 * Finished epoch # 63     top1:  51.504  top5:  21.260
	
=> Training epoch # 64	
 * Finished epoch # 64     top1:  49.199  top5:  18.848
	
=> Training epoch # 65	
 * Finished epoch # 65     top1:  49.590  top5:  19.902
	
=> Training epoch # 66	
 * Finished epoch # 66     top1:  49.951  top5:  18.389
	
=> Training epoch # 67	
 * Finished epoch # 67     top1:  46.875  top5:  16.836
	
=> Training epoch # 68	
 * Finished epoch # 68     top1:  49.492  top5:  18.955
	
=> Training epoch # 69	
 * Finished epoch # 69     top1:  49.639  top5:  19.248
	
=> Training epoch # 70	
 * Finished epoch # 70     top1:  51.631  top5:  21.309
	
=> Training epoch # 71	
 * Finished epoch # 71     top1:  46.582  top5:  17.031
	
=> Training epoch # 72	
 * Finished epoch # 72     top1:  47.900  top5:  18.428
	
=> Training epoch # 73	
 * Finished epoch # 73     top1:  46.299  top5:  16.514
	
=> Training epoch # 74	
 * Finished epoch # 74     top1:  52.168  top5:  22.734
	
=> Training epoch # 75	
 * Finished epoch # 75     top1:  50.176  top5:  19.033
	
=> Training epoch # 76	
 * Finished epoch # 76     top1:  50.176  top5:  19.854
	
=> Training epoch # 77	
 * Finished epoch # 77     top1:  45.527  top5:  15.791
	
=> Training epoch # 78	
 * Finished epoch # 78     top1:  48.779  top5:  19.326
	
=> Training epoch # 79	
 * Finished epoch # 79     top1:  47.920  top5:  17.100
	
=> Training epoch # 80	
 * Finished epoch # 80     top1:  47.363  top5:  17.559
	
=> Training epoch # 81	
 * Finished epoch # 81     top1:  28.604  top5:   6.934
	
 * Best model 	28.603515625	6.93359375	
=> Training epoch # 82	
 * Finished epoch # 82     top1:  28.076  top5:   6.719
	
 * Best model 	28.076171875	6.71875	
=> Training epoch # 83	
 * Finished epoch # 83     top1:  27.012  top5:   6.367
	
 * Best model 	27.01171875	6.3671875	
=> Training epoch # 84	
 * Finished epoch # 84     top1:  27.383  top5:   6.602
	
=> Training epoch # 85	
 * Finished epoch # 85     top1:  27.266  top5:   6.934
	
=> Training epoch # 86	
 * Finished epoch # 86     top1:  27.852  top5:   7.021
	
=> Training epoch # 87	
 * Finished epoch # 87     top1:  27.148  top5:   7.217
	
=> Training epoch # 88	
 * Finished epoch # 88     top1:  28.398  top5:   7.471
	
=> Training epoch # 89	
 * Finished epoch # 89     top1:  28.564  top5:   7.559
	
=> Training epoch # 90	
 * Finished epoch # 90     top1:  28.506  top5:   7.588
	
=> Training epoch # 91	
 * Finished epoch # 91     top1:  28.789  top5:   7.871
	
=> Training epoch # 92	
 * Finished epoch # 92     top1:  28.848  top5:   7.764
	
=> Training epoch # 93	
 * Finished epoch # 93     top1:  28.770  top5:   7.812
	
=> Training epoch # 94	
 * Finished epoch # 94     top1:  28.711  top5:   7.676
	
=> Training epoch # 95	
 * Finished epoch # 95     top1:  28.818  top5:   7.676
	
=> Training epoch # 96	
 * Finished epoch # 96     top1:  29.824  top5:   8.232
	
=> Training epoch # 97	
 * Finished epoch # 97     top1:  29.355  top5:   8.154
	
=> Training epoch # 98	
 * Finished epoch # 98     top1:  29.385  top5:   8.311
	
=> Training epoch # 99	
 * Finished epoch # 99     top1:  29.209  top5:   8.311
	
=> Training epoch # 100	
 * Finished epoch # 100     top1:  30.078  top5:   8.232
	
=> Training epoch # 101	
 * Finished epoch # 101     top1:  30.186  top5:   8.164
	
=> Training epoch # 102	
 * Finished epoch # 102     top1:  30.293  top5:   8.496
	
=> Training epoch # 103	
 * Finished epoch # 103     top1:  30.986  top5:   8.574
	
=> Training epoch # 104	
 * Finished epoch # 104     top1:  30.166  top5:   8.926
	
=> Training epoch # 105	
 * Finished epoch # 105     top1:  31.846  top5:   8.848
	
=> Training epoch # 106	
 * Finished epoch # 106     top1:  32.168  top5:   9.414
	
=> Training epoch # 107	
 * Finished epoch # 107     top1:  30.781  top5:   8.721
	
=> Training epoch # 108	
 * Finished epoch # 108     top1:  32.764  top5:   9.385
	
=> Training epoch # 109	
 * Finished epoch # 109     top1:  31.494  top5:   9.590
	
=> Training epoch # 110	
 * Finished epoch # 110     top1:  30.547  top5:   8.516
	
=> Training epoch # 111	
 * Finished epoch # 111     top1:  31.670  top5:   8.984
	
=> Training epoch # 112	
 * Finished epoch # 112     top1:  29.541  top5:   8.389
	
=> Training epoch # 113	
 * Finished epoch # 113     top1:  31.406  top5:   9.297
	
=> Training epoch # 114	
 * Finished epoch # 114     top1:  33.389  top5:  10.479
	
=> Training epoch # 115	
 * Finished epoch # 115     top1:  31.113  top5:   9.580
	
=> Training epoch # 116	
 * Finished epoch # 116     top1:  31.641  top5:   9.346
	
=> Training epoch # 117	
 * Finished epoch # 117     top1:  32.930  top5:  10.078
	
=> Training epoch # 118	
 * Finished epoch # 118     top1:  33.379  top5:  10.273
	
=> Training epoch # 119	
 * Finished epoch # 119     top1:  33.770  top5:  10.947
	
=> Training epoch # 120	
 * Finished epoch # 120     top1:  32.568  top5:  10.039
	
=> Training epoch # 121	
 * Finished epoch # 121     top1:  32.305  top5:   9.863
	
=> Training epoch # 122	
 * Finished epoch # 122     top1:  25.957  top5:   7.002
	
 * Best model 	25.95703125	7.001953125	
=> Training epoch # 123	
 * Finished epoch # 123     top1:  25.645  top5:   7.109
	
 * Best model 	25.64453125	7.109375	
=> Training epoch # 124	
 * Finished epoch # 124     top1:  25.830  top5:   6.855
	
=> Training epoch # 125	
 * Finished epoch # 125     top1:  25.381  top5:   7.100
	
 * Best model 	25.380859375	7.099609375	
=> Training epoch # 126	
 * Finished epoch # 126     top1:  25.801  top5:   6.973
	
=> Training epoch # 127	
 * Finished epoch # 127     top1:  25.400  top5:   6.904
	
=> Training epoch # 128	
 * Finished epoch # 128     top1:  25.879  top5:   6.855
	
=> Training epoch # 129	
 * Finished epoch # 129     top1:  25.430  top5:   7.207
	
=> Training epoch # 130	
 * Finished epoch # 130     top1:  25.869  top5:   7.393
	
=> Training epoch # 131	
 * Finished epoch # 131     top1:  25.547  top5:   7.354
	
=> Training epoch # 132	
 * Finished epoch # 132     top1:  25.752  top5:   7.588
	
=> Training epoch # 133	
 * Finished epoch # 133     top1:  26.201  top5:   7.383
	
=> Training epoch # 134	
 * Finished epoch # 134     top1:  26.357  top5:   7.500
	
=> Training epoch # 135	
 * Finished epoch # 135     top1:  25.459  top5:   7.266
	
=> Training epoch # 136	
 * Finished epoch # 136     top1:  25.957  top5:   7.734
	
=> Training epoch # 137	
 * Finished epoch # 137     top1:  26.143  top5:   7.715
	
=> Training epoch # 138	
 * Finished epoch # 138     top1:  25.898  top5:   7.324
	
=> Training epoch # 139	
 * Finished epoch # 139     top1:  25.586  top5:   7.451
	
=> Training epoch # 140	
 * Finished epoch # 140     top1:  25.068  top5:   7.500
	
 * Best model 	25.068359375	7.5	
=> Training epoch # 141	
 * Finished epoch # 141     top1:  25.869  top5:   7.451
	
=> Training epoch # 142	
 * Finished epoch # 142     top1:  25.898  top5:   7.607
	
=> Training epoch # 143	
 * Finished epoch # 143     top1:  25.596  top5:   8.047
	
=> Training epoch # 144	
 * Finished epoch # 144     top1:  25.615  top5:   7.812
	
=> Training epoch # 145	
 * Finished epoch # 145     top1:  26.133  top5:   7.773
	
=> Training epoch # 146	
 * Finished epoch # 146     top1:  25.996  top5:   7.588
	
=> Training epoch # 147	
 * Finished epoch # 147     top1:  25.225  top5:   7.568
	
=> Training epoch # 148	
 * Finished epoch # 148     top1:  25.898  top5:   7.539
	
=> Training epoch # 149	
 * Finished epoch # 149     top1:  25.967  top5:   7.568
	
=> Training epoch # 150	
 * Finished epoch # 150     top1:  25.625  top5:   7.734
	
=> Training epoch # 151	
 * Finished epoch # 151     top1:  25.605  top5:   7.920
	
=> Training epoch # 152	
 * Finished epoch # 152     top1:  25.352  top5:   7.578
	
=> Training epoch # 153	
 * Finished epoch # 153     top1:  25.273  top5:   7.588
	
=> Training epoch # 154	
 * Finished epoch # 154     top1:  25.410  top5:   7.803
	
=> Training epoch # 155	
 * Finished epoch # 155     top1:  25.547  top5:   7.637
	
=> Training epoch # 156	
 * Finished epoch # 156     top1:  25.508  top5:   7.881
	
=> Training epoch # 157	
 * Finished epoch # 157     top1:  25.908  top5:   7.588
	
=> Training epoch # 158	
 * Finished epoch # 158     top1:  25.859  top5:   7.871
	
=> Training epoch # 159	
 * Finished epoch # 159     top1:  25.850  top5:   7.900
	
=> Training epoch # 160	
 * Finished epoch # 160     top1:  26.016  top5:   7.832
	
=> Training epoch # 161	
 * Finished epoch # 161     top1:  25.820  top5:   7.881
	
=> Training epoch # 162	
 * Finished epoch # 162     top1:  26.221  top5:   8.281
	
=> Training epoch # 163	
 * Finished epoch # 163     top1:  26.191  top5:   7.793
	
=> Training epoch # 164	
 * Finished epoch # 164     top1:  25.420  top5:   8.047
	
=> Training epoch # 165	
 * Finished epoch # 165     top1:  25.684  top5:   8.008
	
=> Training epoch # 166	
 * Finished epoch # 166     top1:  25.859  top5:   8.477
	
=> Training epoch # 167	
 * Finished epoch # 167     top1:  25.820  top5:   7.939
	
=> Training epoch # 168	
 * Finished epoch # 168     top1:  25.645  top5:   7.871
	
=> Training epoch # 169	
 * Finished epoch # 169     top1:  26.016  top5:   8.262
	
=> Training epoch # 170	
 * Finished epoch # 170     top1:  26.230  top5:   8.096
	
=> Training epoch # 171	
 * Finished epoch # 171     top1:  25.820  top5:   8.262
	
=> Training epoch # 172	
 * Finished epoch # 172     top1:  25.996  top5:   7.959
	
=> Training epoch # 173	
 * Finished epoch # 173     top1:  25.752  top5:   7.588
	
=> Training epoch # 174	
 * Finished epoch # 174     top1:  25.781  top5:   8.203
	
=> Training epoch # 175	
 * Finished epoch # 175     top1:  26.162  top5:   8.184
	
=> Training epoch # 176	
 * Finished epoch # 176     top1:  25.576  top5:   8.096
	
=> Training epoch # 177	
 * Finished epoch # 177     top1:  25.547  top5:   7.949
	
=> Training epoch # 178	
 * Finished epoch # 178     top1:  25.752  top5:   8.145
	
=> Training epoch # 179	
 * Finished epoch # 179     top1:  25.996  top5:   7.988
	
=> Training epoch # 180	
 * Finished epoch # 180     top1:  25.127  top5:   7.559
	
=> Training epoch # 181	
 * Finished epoch # 181     top1:  25.605  top5:   7.949
	
=> Training epoch # 182	
 * Finished epoch # 182     top1:  25.879  top5:   8.125
	
=> Training epoch # 183	
 * Finished epoch # 183     top1:  25.967  top5:   8.086
	
=> Training epoch # 184	
 * Finished epoch # 184     top1:  25.801  top5:   7.939
	
=> Training epoch # 185	
 * Finished epoch # 185     top1:  25.850  top5:   7.871
	
=> Training epoch # 186	
 * Finished epoch # 186     top1:  26.006  top5:   8.174
	
=> Training epoch # 187	
 * Finished epoch # 187     top1:  25.645  top5:   7.900
	
=> Training epoch # 188	
 * Finished epoch # 188     top1:  25.830  top5:   8.076
	
=> Training epoch # 189	
 * Finished epoch # 189     top1:  25.771  top5:   8.564
	
=> Training epoch # 190	
 * Finished epoch # 190     top1:  25.586  top5:   8.223
	
=> Training epoch # 191	
 * Finished epoch # 191     top1:  25.938  top5:   7.852
	
=> Training epoch # 192	
 * Finished epoch # 192     top1:  25.879  top5:   7.930
	
=> Training epoch # 193	
 * Finished epoch # 193     top1:  26.201  top5:   8.438
	
=> Training epoch # 194	
 * Finished epoch # 194     top1:  25.674  top5:   8.145
	
=> Training epoch # 195	
 * Finished epoch # 195     top1:  25.879  top5:   8.066
	
=> Training epoch # 196	
 * Finished epoch # 196     top1:  26.143  top5:   8.369
	
=> Training epoch # 197	
 * Finished epoch # 197     top1:  25.469  top5:   7.822
	
=> Training epoch # 198	
 * Finished epoch # 198     top1:  25.830  top5:   7.979
	
=> Training epoch # 199	
 * Finished epoch # 199     top1:  26.523  top5:   8.311
	
=> Training epoch # 200	
 * Finished epoch # 200     top1:  26.074  top5:   8.105
	
 * Finished top1: 25.068  top5:  7.500	
