{
  cudnn : "fastest"
  LR : 0.1
  nThreads : 2
  nClasses : 0
  batchSize : 256
  testOnly : false
  netType : "resnet-pelu-div-div"
  resetClassifier : false
  shortcutType : "A"
  gen : "gen"
  nGPU : 1
  depth : 110
  weightDecay : 0.001
  data : ""
  dataset : "cifar100"
  epochNumber : 1
  manualSeed : 2
  resume : "results/results-pelu-div-div/try1/cifar100/110"
  optimState : "none"
  nEpochs : 200
  tenCrop : false
  shareGradInput : false
  backend : "cudnn"
  momentum : 0.9
  retrain : "none"
}
=> Creating model from file: models/resnet-pelu-div-div.lua	
 | ResNet-110 CIFAR-100	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1) without bias
  (2): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedDiv
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedDiv
  }
  (3): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (4): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 32, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (5): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 64, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (6): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedDiv
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedDiv
  }
  (7): cudnn.SpatialAveragePooling(8x8, 1,1)
  (8): nn.View(64)
  (9): nn.Linear(64 -> 100)
}
=> Training epoch # 1	
 * Finished epoch # 1     top1:  89.463  top5:  67.676
	
 * Best model 	89.462890625	67.67578125	
=> Training epoch # 2	
 * Finished epoch # 2     top1:  77.539  top5:  46.934
	
 * Best model 	77.5390625	46.93359375	
=> Training epoch # 3	
 * Finished epoch # 3     top1:  68.555  top5:  37.061
	
 * Best model 	68.5546875	37.060546875	
=> Training epoch # 4	
 * Finished epoch # 4     top1:  62.871  top5:  30.732
	
 * Best model 	62.87109375	30.732421875	
=> Training epoch # 5	
 * Finished epoch # 5     top1:  60.820  top5:  27.627
	
 * Best model 	60.8203125	27.626953125	
=> Training epoch # 6	
 * Finished epoch # 6     top1:  53.428  top5:  21.641
	
 * Best model 	53.427734375	21.640625	
=> Training epoch # 7	
 * Finished epoch # 7     top1:  53.760  top5:  22.607
	
=> Training epoch # 8	
 * Finished epoch # 8     top1:  61.729  top5:  30.439
	
=> Training epoch # 9	
 * Finished epoch # 9     top1:  52.031  top5:  20.537
	
 * Best model 	52.03125	20.537109375	
=> Training epoch # 10	
 * Finished epoch # 10     top1:  47.646  top5:  17.959
	
 * Best model 	47.646484375	17.958984375	
=> Training epoch # 11	
 * Finished epoch # 11     top1:  46.182  top5:  16.357
	
 * Best model 	46.181640625	16.357421875	
=> Training epoch # 12	
 * Finished epoch # 12     top1:  45.957  top5:  16.475
	
 * Best model 	45.95703125	16.474609375	
=> Training epoch # 13	
 * Finished epoch # 13     top1:  48.418  top5:  17.988
	
=> Training epoch # 14	
 * Finished epoch # 14     top1:  48.545  top5:  18.936
	
=> Training epoch # 15	
 * Finished epoch # 15     top1:  46.836  top5:  16.592
	
=> Training epoch # 16	
 * Finished epoch # 16     top1:  48.018  top5:  18.037
	
=> Training epoch # 17	
 * Finished epoch # 17     top1:  50.996  top5:  20.586
	
=> Training epoch # 18	
 * Finished epoch # 18     top1:  44.668  top5:  14.453
	
 * Best model 	44.66796875	14.453125	
=> Training epoch # 19	
 * Finished epoch # 19     top1:  45.039  top5:  15.986
	
=> Training epoch # 20	
 * Finished epoch # 20     top1:  43.457  top5:  15.088
	
 * Best model 	43.45703125	15.087890625	
=> Training epoch # 21	
 * Finished epoch # 21     top1:  47.363  top5:  18.242
	
=> Training epoch # 22	
 * Finished epoch # 22     top1:  46.250  top5:  16.875
	
=> Training epoch # 23	
 * Finished epoch # 23     top1:  48.662  top5:  18.916
	
=> Training epoch # 24	
 * Finished epoch # 24     top1:  43.047  top5:  15.137
	
 * Best model 	43.046875	15.13671875	
=> Training epoch # 25	
 * Finished epoch # 25     top1:  43.994  top5:  15.410
	
=> Training epoch # 26	
 * Finished epoch # 26     top1:  40.430  top5:  13.330
	
 * Best model 	40.4296875	13.330078125	
=> Training epoch # 27	
 * Finished epoch # 27     top1:  41.572  top5:  14.014
	
=> Training epoch # 28	
 * Finished epoch # 28     top1:  43.203  top5:  13.896
	
=> Training epoch # 29	
 * Finished epoch # 29     top1:  43.467  top5:  15.898
	
=> Training epoch # 30	
 * Finished epoch # 30     top1:  45.645  top5:  16.211
	
=> Training epoch # 31	
 * Finished epoch # 31     top1:  42.979  top5:  14.453
	
=> Training epoch # 32	
 * Finished epoch # 32     top1:  40.996  top5:  13.184
	
=> Training epoch # 33	
 * Finished epoch # 33     top1:  44.473  top5:  15.449
	
=> Training epoch # 34	
 * Finished epoch # 34     top1:  44.668  top5:  15.420
	
=> Training epoch # 35	
 * Finished epoch # 35     top1:  43.105  top5:  14.883
	
=> Training epoch # 36	
 * Finished epoch # 36     top1:  43.926  top5:  15.107
	
=> Training epoch # 37	
 * Finished epoch # 37     top1:  41.611  top5:  14.414
	
=> Training epoch # 38	
 * Finished epoch # 38     top1:  40.957  top5:  13.760
	
=> Training epoch # 39	
 * Finished epoch # 39     top1:  45.176  top5:  16.611
	
=> Training epoch # 40	
 * Finished epoch # 40     top1:  40.918  top5:  14.141
	
=> Training epoch # 41	
 * Finished epoch # 41     top1:  43.164  top5:  14.014
	
=> Training epoch # 42	
 * Finished epoch # 42     top1:  48.574  top5:  18.643
	
=> Training epoch # 43	
 * Finished epoch # 43     top1:  40.654  top5:  13.232
	
=> Training epoch # 44	
 * Finished epoch # 44     top1:  42.959  top5:  14.326
	
=> Training epoch # 45	
 * Finished epoch # 45     top1:  41.914  top5:  14.941
	
=> Training epoch # 46	
 * Finished epoch # 46     top1:  41.543  top5:  13.936
	
=> Training epoch # 47	
 * Finished epoch # 47     top1:  43.936  top5:  16.357
	
=> Training epoch # 48	
 * Finished epoch # 48     top1:  40.625  top5:  13.789
	
=> Training epoch # 49	
 * Finished epoch # 49     top1:  40.186  top5:  12.549
	
 * Best model 	40.185546875	12.548828125	
=> Training epoch # 50	
 * Finished epoch # 50     top1:  44.160  top5:  15.166
	
=> Training epoch # 51	
 * Finished epoch # 51     top1:  41.533  top5:  14.316
	
=> Training epoch # 52	
 * Finished epoch # 52     top1:  41.426  top5:  13.691
	
=> Training epoch # 53	
 * Finished epoch # 53     top1:  40.381  top5:  13.047
	
=> Training epoch # 54	
 * Finished epoch # 54     top1:  42.490  top5:  14.355
	
=> Training epoch # 55	
 * Finished epoch # 55     top1:  43.711  top5:  15.059
	
=> Training epoch # 56	
 * Finished epoch # 56     top1:  42.256  top5:  14.443
	
=> Training epoch # 57	
 * Finished epoch # 57     top1:  41.270  top5:  13.750
	
=> Training epoch # 58	
 * Finished epoch # 58     top1:  44.766  top5:  15.811
	
=> Training epoch # 59	
 * Finished epoch # 59     top1:  41.035  top5:  14.541
	
=> Training epoch # 60	
 * Finished epoch # 60     top1:  38.711  top5:  11.846
	
 * Best model 	38.7109375	11.845703125	
=> Training epoch # 61	
 * Finished epoch # 61     top1:  45.352  top5:  16.250
	
=> Training epoch # 62	
 * Finished epoch # 62     top1:  42.646  top5:  14.600
	
=> Training epoch # 63	
 * Finished epoch # 63     top1:  41.797  top5:  14.512
	
=> Training epoch # 64	
 * Finished epoch # 64     top1:  48.799  top5:  17.109
	
=> Training epoch # 65	
 * Finished epoch # 65     top1:  41.963  top5:  14.688
	
=> Training epoch # 66	
 * Finished epoch # 66     top1:  42.559  top5:  15.078
	
=> Training epoch # 67	
 * Finished epoch # 67     top1:  41.113  top5:  12.939
	
=> Training epoch # 68	
 * Finished epoch # 68     top1:  41.904  top5:  14.365
	
=> Training epoch # 69	
 * Finished epoch # 69     top1:  42.441  top5:  14.131
	
=> Training epoch # 70	
 * Finished epoch # 70     top1:  41.240  top5:  14.102
	
=> Training epoch # 71	
 * Finished epoch # 71     top1:  41.523  top5:  13.477
	
=> Training epoch # 72	
 * Finished epoch # 72     top1:  39.727  top5:  12.734
	
=> Training epoch # 73	
 * Finished epoch # 73     top1:  41.035  top5:  13.340
	
=> Training epoch # 74	
 * Finished epoch # 74     top1:  41.143  top5:  14.766
	
=> Training epoch # 75	
 * Finished epoch # 75     top1:  43.184  top5:  14.531
	
=> Training epoch # 76	
 * Finished epoch # 76     top1:  42.764  top5:  13.994
	
=> Training epoch # 77	
 * Finished epoch # 77     top1:  42.471  top5:  15.371
	
=> Training epoch # 78	
 * Finished epoch # 78     top1:  43.066  top5:  14.180
	
=> Training epoch # 79	
 * Finished epoch # 79     top1:  42.207  top5:  15.078
	
=> Training epoch # 80	
 * Finished epoch # 80     top1:  40.332  top5:  13.311
	
=> Training epoch # 81	
 * Finished epoch # 81     top1:  27.285  top5:   6.699
	
 * Best model 	27.28515625	6.69921875	
=> Training epoch # 82	
 * Finished epoch # 82     top1:  26.504  top5:   6.816
	
 * Best model 	26.50390625	6.81640625	
=> Training epoch # 83	
 * Finished epoch # 83     top1:  27.490  top5:   6.729
	
=> Training epoch # 84	
 * Finished epoch # 84     top1:  26.582  top5:   6.230
	
=> Training epoch # 85	
 * Finished epoch # 85     top1:  27.803  top5:   6.592
	
=> Training epoch # 86	
 * Finished epoch # 86     top1:  27.197  top5:   6.768
	
=> Training epoch # 87	
 * Finished epoch # 87     top1:  27.500  top5:   7.334
	
=> Training epoch # 88	
 * Finished epoch # 88     top1:  28.125  top5:   7.451
	
=> Training epoch # 89	
 * Finished epoch # 89     top1:  27.441  top5:   7.109
	
=> Training epoch # 90	
 * Finished epoch # 90     top1:  27.959  top5:   7.549
	
=> Training epoch # 91	
 * Finished epoch # 91     top1:  27.822  top5:   7.900
	
=> Training epoch # 92	
 * Finished epoch # 92     top1:  28.896  top5:   8.223
	
=> Training epoch # 93	
 * Finished epoch # 93     top1:  28.301  top5:   7.852
	
=> Training epoch # 94	
 * Finished epoch # 94     top1:  29.121  top5:   8.369
	
=> Training epoch # 95	
 * Finished epoch # 95     top1:  28.379  top5:   7.568
	
=> Training epoch # 96	
 * Finished epoch # 96     top1:  29.521  top5:   8.174
	
=> Training epoch # 97	
 * Finished epoch # 97     top1:  28.516  top5:   7.500
	
=> Training epoch # 98	
 * Finished epoch # 98     top1:  29.209  top5:   8.037
	
=> Training epoch # 99	
 * Finished epoch # 99     top1:  29.355  top5:   8.428
	
=> Training epoch # 100	
 * Finished epoch # 100     top1:  28.477  top5:   7.998
	
=> Training epoch # 101	
 * Finished epoch # 101     top1:  29.053  top5:   8.213
	
=> Training epoch # 102	
 * Finished epoch # 102     top1:  28.711  top5:   8.184
	
=> Training epoch # 103	
 * Finished epoch # 103     top1:  29.551  top5:   8.496
	
=> Training epoch # 104	
 * Finished epoch # 104     top1:  29.102  top5:   8.291
	
=> Training epoch # 105	
 * Finished epoch # 105     top1:  29.385  top5:   8.350
	
=> Training epoch # 106	
 * Finished epoch # 106     top1:  28.789  top5:   7.793
	
=> Training epoch # 107	
 * Finished epoch # 107     top1:  30.283  top5:   8.311
	
=> Training epoch # 108	
 * Finished epoch # 108     top1:  29.199  top5:   7.783
	
=> Training epoch # 109	
 * Finished epoch # 109     top1:  29.404  top5:   8.135
	
=> Training epoch # 110	
 * Finished epoch # 110     top1:  30.420  top5:   8.447
	
=> Training epoch # 111	
 * Finished epoch # 111     top1:  29.082  top5:   7.998
	
=> Training epoch # 112	
 * Finished epoch # 112     top1:  29.492  top5:   8.525
	
=> Training epoch # 113	
 * Finished epoch # 113     top1:  29.590  top5:   8.848
	
=> Training epoch # 114	
 * Finished epoch # 114     top1:  30.176  top5:   8.379
	
=> Training epoch # 115	
 * Finished epoch # 115     top1:  29.512  top5:   8.506
	
=> Training epoch # 116	
 * Finished epoch # 116     top1:  30.713  top5:   9.355
	
=> Training epoch # 117	
 * Finished epoch # 117     top1:  29.678  top5:   8.770
	
=> Training epoch # 118	
 * Finished epoch # 118     top1:  29.424  top5:   8.750
	
=> Training epoch # 119	
 * Finished epoch # 119     top1:  30.107  top5:   8.438
	
=> Training epoch # 120	
 * Finished epoch # 120     top1:  29.570  top5:   8.623
	
=> Training epoch # 121	
 * Finished epoch # 121     top1:  30.293  top5:   8.750
	
=> Training epoch # 122	
 * Finished epoch # 122     top1:  26.768  top5:   7.373
	
=> Training epoch # 123	
 * Finished epoch # 123     top1:  26.885  top5:   7.158
	
=> Training epoch # 124	
 * Finished epoch # 124     top1:  26.416  top5:   7.139
	
 * Best model 	26.416015625	7.138671875	
=> Training epoch # 125	
 * Finished epoch # 125     top1:  25.557  top5:   6.992
	
 * Best model 	25.556640625	6.9921875	
=> Training epoch # 126	
 * Finished epoch # 126     top1:  25.654  top5:   6.943
	
=> Training epoch # 127	
 * Finished epoch # 127     top1:  26.074  top5:   6.895
	
=> Training epoch # 128	
 * Finished epoch # 128     top1:  25.977  top5:   6.924
	
=> Training epoch # 129	
 * Finished epoch # 129     top1:  25.479  top5:   6.973
	
 * Best model 	25.478515625	6.97265625	
=> Training epoch # 130	
 * Finished epoch # 130     top1:  26.104  top5:   7.021
	
=> Training epoch # 131	
 * Finished epoch # 131     top1:  25.527  top5:   6.973
	
=> Training epoch # 132	
 * Finished epoch # 132     top1:  25.303  top5:   6.709
	
 * Best model 	25.302734375	6.708984375	
=> Training epoch # 133	
 * Finished epoch # 133     top1:  25.977  top5:   6.973
	
=> Training epoch # 134	
 * Finished epoch # 134     top1:  25.527  top5:   6.992
	
=> Training epoch # 135	
 * Finished epoch # 135     top1:  25.879  top5:   6.885
	
=> Training epoch # 136	
 * Finished epoch # 136     top1:  25.781  top5:   7.373
	
=> Training epoch # 137	
 * Finished epoch # 137     top1:  25.752  top5:   7.100
	
=> Training epoch # 138	
 * Finished epoch # 138     top1:  25.576  top5:   6.855
	
=> Training epoch # 139	
 * Finished epoch # 139     top1:  25.928  top5:   6.846
	
=> Training epoch # 140	
 * Finished epoch # 140     top1:  25.840  top5:   6.758
	
=> Training epoch # 141	
 * Finished epoch # 141     top1:  25.781  top5:   6.807
	
=> Training epoch # 142	
 * Finished epoch # 142     top1:  25.898  top5:   7.041
	
=> Training epoch # 143	
 * Finished epoch # 143     top1:  25.840  top5:   7.109
	
=> Training epoch # 144	
 * Finished epoch # 144     top1:  25.693  top5:   7.061
	
=> Training epoch # 145	
 * Finished epoch # 145     top1:  25.547  top5:   7.041
	
=> Training epoch # 146	
 * Finished epoch # 146     top1:  26.035  top5:   7.207
	
=> Training epoch # 147	
 * Finished epoch # 147     top1:  25.908  top5:   7.188
	
=> Training epoch # 148	
 * Finished epoch # 148     top1:  25.215  top5:   6.943
	
 * Best model 	25.21484375	6.943359375	
=> Training epoch # 149	
 * Finished epoch # 149     top1:  25.840  top5:   7.031
	
=> Training epoch # 150	
 * Finished epoch # 150     top1:  25.459  top5:   7.031
	
=> Training epoch # 151	
 * Finished epoch # 151     top1:  25.967  top5:   7.158
	
=> Training epoch # 152	
 * Finished epoch # 152     top1:  25.869  top5:   7.510
	
=> Training epoch # 153	
 * Finished epoch # 153     top1:  25.762  top5:   6.973
	
=> Training epoch # 154	
 * Finished epoch # 154     top1:  25.654  top5:   7.012
	
=> Training epoch # 155	
 * Finished epoch # 155     top1:  26.445  top5:   7.324
	
=> Training epoch # 156	
 * Finished epoch # 156     top1:  26.152  top5:   7.236
	
=> Training epoch # 157	
 * Finished epoch # 157     top1:  25.684  top5:   6.885
	
=> Training epoch # 158	
 * Finished epoch # 158     top1:  26.201  top5:   7.051
	
=> Training epoch # 159	
 * Finished epoch # 159     top1:  25.879  top5:   7.158
	
=> Training epoch # 160	
 * Finished epoch # 160     top1:  25.303  top5:   6.904
	
=> Training epoch # 161	
 * Finished epoch # 161     top1:  25.986  top5:   7.090
	
=> Training epoch # 162	
 * Finished epoch # 162     top1:  25.166  top5:   6.875
	
 * Best model 	25.166015625	6.875	
=> Training epoch # 163	
 * Finished epoch # 163     top1:  25.615  top5:   7.178
	
=> Training epoch # 164	
 * Finished epoch # 164     top1:  25.703  top5:   7.061
	
=> Training epoch # 165	
 * Finished epoch # 165     top1:  25.352  top5:   6.934
	
=> Training epoch # 166	
 * Finished epoch # 166     top1:  25.830  top5:   6.865
	
=> Training epoch # 167	
 * Finished epoch # 167     top1:  25.293  top5:   7.129
	
=> Training epoch # 168	
 * Finished epoch # 168     top1:  25.254  top5:   7.305
	
=> Training epoch # 169	
 * Finished epoch # 169     top1:  25.186  top5:   7.090
	
=> Training epoch # 170	
 * Finished epoch # 170     top1:  25.469  top5:   7.295
	
=> Training epoch # 171	
 * Finished epoch # 171     top1:  25.449  top5:   7.070
	
=> Training epoch # 172	
 * Finished epoch # 172     top1:  25.137  top5:   7.451
	
 * Best model 	25.13671875	7.451171875	
=> Training epoch # 173	
 * Finished epoch # 173     top1:  25.566  top5:   7.178
	
=> Training epoch # 174	
 * Finished epoch # 174     top1:  25.791  top5:   6.982
	
=> Training epoch # 175	
 * Finished epoch # 175     top1:  25.781  top5:   6.934
	
=> Training epoch # 176	
 * Finished epoch # 176     top1:  25.225  top5:   6.836
	
=> Training epoch # 177	
 * Finished epoch # 177     top1:  25.400  top5:   7.314
	
=> Training epoch # 178	
 * Finished epoch # 178     top1:  25.947  top5:   7.188
	
=> Training epoch # 179	
 * Finished epoch # 179     top1:  25.225  top5:   7.246
	
=> Training epoch # 180	
 * Finished epoch # 180     top1:  25.117  top5:   6.953
	
 * Best model 	25.1171875	6.953125	
=> Training epoch # 181	
 * Finished epoch # 181     top1:  25.391  top5:   6.992
	
=> Training epoch # 182	
 * Finished epoch # 182     top1:  25.820  top5:   6.934
	
=> Training epoch # 183	
 * Finished epoch # 183     top1:  25.234  top5:   7.109
	
=> Training epoch # 184	
 * Finished epoch # 184     top1:  26.396  top5:   7.393
	
=> Training epoch # 185	
 * Finished epoch # 185     top1:  25.605  top5:   7.373
	
=> Training epoch # 186	
 * Finished epoch # 186     top1:  25.010  top5:   6.846
	
 * Best model 	25.009765625	6.845703125	
=> Training epoch # 187	
 * Finished epoch # 187     top1:  25.889  top5:   7.441
	
=> Training epoch # 188	
 * Finished epoch # 188     top1:  25.215  top5:   7.002
	
=> Training epoch # 189	
 * Finished epoch # 189     top1:  25.342  top5:   6.816
	
=> Training epoch # 190	
 * Finished epoch # 190     top1:  25.869  top5:   7.051
	
=> Training epoch # 191	
 * Finished epoch # 191     top1:  25.264  top5:   6.904
	
=> Training epoch # 192	
 * Finished epoch # 192     top1:  25.088  top5:   7.031
	
=> Training epoch # 193	
 * Finished epoch # 193     top1:  25.303  top5:   6.680
	
=> Training epoch # 194	
 * Finished epoch # 194     top1:  25.439  top5:   6.992
	
=> Training epoch # 195	
 * Finished epoch # 195     top1:  25.059  top5:   6.680
	
=> Training epoch # 196	
 * Finished epoch # 196     top1:  25.234  top5:   6.748
	
=> Training epoch # 197	
 * Finished epoch # 197     top1:  25.811  top5:   6.885
	
=> Training epoch # 198	
 * Finished epoch # 198     top1:  25.068  top5:   6.963
	
=> Training epoch # 199	
 * Finished epoch # 199     top1:  25.762  top5:   6.836
	
=> Training epoch # 200	
 * Finished epoch # 200     top1:  25.303  top5:   7.051
	
 * Finished top1: 25.010  top5:  6.846	
