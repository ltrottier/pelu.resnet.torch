{
  cudnn : "fastest"
  LR : 0.1
  nThreads : 2
  nClasses : 0
  batchSize : 256
  testOnly : false
  netType : "resnet"
  resetClassifier : false
  shortcutType : "A"
  gen : "gen"
  nGPU : 1
  depth : 110
  weightDecay : 0.001
  data : ""
  dataset : "cifar100"
  epochNumber : 1
  manualSeed : 2
  resume : "results/results-elu/try4/cifar100/110"
  optimState : "none"
  nEpochs : 200
  tenCrop : false
  shareGradInput : false
  backend : "cudnn"
  momentum : 0.9
  retrain : "none"
}
=> Creating model from file: models/resnet.lua	
 | ResNet-110 CIFAR-100	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1) without bias
  (2): nn.ELU (alpha:1.000000)
  (3): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (4): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 32, 3x3, 2,2, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (5): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 64, 3x3, 2,2, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.ELU (alpha:1.000000)
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (6): nn.ELU (alpha:1.000000)
  (7): cudnn.SpatialAveragePooling(8x8, 1,1)
  (8): nn.View(64)
  (9): nn.Linear(64 -> 100)
}
=> Training epoch # 1	
 * Finished epoch # 1     top1:  79.678  top5:  50.381
	
 * Best model 	79.677734375	50.380859375	
=> Training epoch # 2	
 * Finished epoch # 2     top1:  71.387  top5:  39.824
	
 * Best model 	71.38671875	39.82421875	
=> Training epoch # 3	
 * Finished epoch # 3     top1:  64.082  top5:  31.475
	
 * Best model 	64.08203125	31.474609375	
=> Training epoch # 4	
 * Finished epoch # 4     top1:  61.943  top5:  30.557
	
 * Best model 	61.943359375	30.556640625	
=> Training epoch # 5	
 * Finished epoch # 5     top1:  56.904  top5:  24.219
	
 * Best model 	56.904296875	24.21875	
=> Training epoch # 6	
 * Finished epoch # 6     top1:  51.582  top5:  20.049
	
 * Best model 	51.58203125	20.048828125	
=> Training epoch # 7	
 * Finished epoch # 7     top1:  49.199  top5:  18.457
	
 * Best model 	49.19921875	18.45703125	
=> Training epoch # 8	
 * Finished epoch # 8     top1:  58.584  top5:  25.977
	
=> Training epoch # 9	
 * Finished epoch # 9     top1:  52.061  top5:  19.980
	
=> Training epoch # 10	
 * Finished epoch # 10     top1:  49.424  top5:  18.828
	
=> Training epoch # 11	
 * Finished epoch # 11     top1:  48.730  top5:  18.057
	
 * Best model 	48.73046875	18.056640625	
=> Training epoch # 12	
 * Finished epoch # 12     top1:  46.191  top5:  17.324
	
 * Best model 	46.19140625	17.32421875	
=> Training epoch # 13	
 * Finished epoch # 13     top1:  48.662  top5:  18.545
	
=> Training epoch # 14	
 * Finished epoch # 14     top1:  46.650  top5:  16.885
	
=> Training epoch # 15	
 * Finished epoch # 15     top1:  45.762  top5:  16.533
	
 * Best model 	45.76171875	16.533203125	
=> Training epoch # 16	
 * Finished epoch # 16     top1:  48.047  top5:  18.262
	
=> Training epoch # 17	
 * Finished epoch # 17     top1:  53.428  top5:  22.129
	
=> Training epoch # 18	
 * Finished epoch # 18     top1:  48.096  top5:  17.070
	
=> Training epoch # 19	
 * Finished epoch # 19     top1:  47.529  top5:  16.982
	
=> Training epoch # 20	
 * Finished epoch # 20     top1:  44.551  top5:  16.035
	
 * Best model 	44.55078125	16.03515625	
=> Training epoch # 21	
 * Finished epoch # 21     top1:  50.732  top5:  20.518
	
=> Training epoch # 22	
 * Finished epoch # 22     top1:  47.344  top5:  18.379
	
=> Training epoch # 23	
 * Finished epoch # 23     top1:  47.246  top5:  17.266
	
=> Training epoch # 24	
 * Finished epoch # 24     top1:  45.635  top5:  17.061
	
=> Training epoch # 25	
 * Finished epoch # 25     top1:  50.361  top5:  20.947
	
=> Training epoch # 26	
 * Finished epoch # 26     top1:  47.852  top5:  18.105
	
=> Training epoch # 27	
 * Finished epoch # 27     top1:  44.570  top5:  16.299
	
=> Training epoch # 28	
 * Finished epoch # 28     top1:  46.211  top5:  16.680
	
=> Training epoch # 29	
 * Finished epoch # 29     top1:  43.438  top5:  15.127
	
 * Best model 	43.4375	15.126953125	
=> Training epoch # 30	
 * Finished epoch # 30     top1:  48.418  top5:  19.512
	
=> Training epoch # 31	
 * Finished epoch # 31     top1:  56.377  top5:  26.094
	
=> Training epoch # 32	
 * Finished epoch # 32     top1:  46.650  top5:  16.699
	
=> Training epoch # 33	
 * Finished epoch # 33     top1:  47.275  top5:  17.803
	
=> Training epoch # 34	
 * Finished epoch # 34     top1:  49.678  top5:  19.131
	
=> Training epoch # 35	
 * Finished epoch # 35     top1:  53.506  top5:  24.355
	
=> Training epoch # 36	
 * Finished epoch # 36     top1:  46.641  top5:  18.506
	
=> Training epoch # 37	
 * Finished epoch # 37     top1:  45.303  top5:  17.129
	
=> Training epoch # 38	
 * Finished epoch # 38     top1:  42.988  top5:  16.201
	
 * Best model 	42.98828125	16.201171875	
=> Training epoch # 39	
 * Finished epoch # 39     top1:  49.346  top5:  20.518
	
=> Training epoch # 40	
 * Finished epoch # 40     top1:  52.773  top5:  22.480
	
=> Training epoch # 41	
 * Finished epoch # 41     top1:  55.654  top5:  23.916
	
=> Training epoch # 42	
 * Finished epoch # 42     top1:  50.430  top5:  20.107
	
=> Training epoch # 43	
 * Finished epoch # 43     top1:  47.734  top5:  17.324
	
=> Training epoch # 44	
 * Finished epoch # 44     top1:  46.904  top5:  18.018
	
=> Training epoch # 45	
 * Finished epoch # 45     top1:  54.189  top5:  22.686
	
=> Training epoch # 46	
 * Finished epoch # 46     top1:  46.504  top5:  15.674
	
=> Training epoch # 47	
 * Finished epoch # 47     top1:  48.779  top5:  18.838
	
=> Training epoch # 48	
 * Finished epoch # 48     top1:  52.588  top5:  21.768
	
=> Training epoch # 49	
 * Finished epoch # 49     top1:  44.053  top5:  16.191
	
=> Training epoch # 50	
 * Finished epoch # 50     top1:  51.348  top5:  21.865
	
=> Training epoch # 51	
 * Finished epoch # 51     top1:  48.965  top5:  21.279
	
=> Training epoch # 52	
 * Finished epoch # 52     top1:  48.125  top5:  17.773
	
=> Training epoch # 53	
 * Finished epoch # 53     top1:  45.898  top5:  16.426
	
=> Training epoch # 54	
 * Finished epoch # 54     top1:  52.109  top5:  22.520
	
=> Training epoch # 55	
 * Finished epoch # 55     top1:  47.900  top5:  17.529
	
=> Training epoch # 56	
 * Finished epoch # 56     top1:  44.775  top5:  15.400
	
=> Training epoch # 57	
 * Finished epoch # 57     top1:  45.713  top5:  17.939
	
=> Training epoch # 58	
 * Finished epoch # 58     top1:  47.969  top5:  18.350
	
=> Training epoch # 59	
 * Finished epoch # 59     top1:  53.682  top5:  23.105
	
=> Training epoch # 60	
 * Finished epoch # 60     top1:  48.311  top5:  18.584
	
=> Training epoch # 61	
 * Finished epoch # 61     top1:  47.002  top5:  18.184
	
=> Training epoch # 62	
 * Finished epoch # 62     top1:  45.645  top5:  17.480
	
=> Training epoch # 63	
 * Finished epoch # 63     top1:  51.152  top5:  18.906
	
=> Training epoch # 64	
 * Finished epoch # 64     top1:  43.516  top5:  13.809
	
=> Training epoch # 65	
 * Finished epoch # 65     top1:  43.789  top5:  15.176
	
=> Training epoch # 66	
 * Finished epoch # 66     top1:  46.533  top5:  17.500
	
=> Training epoch # 67	
 * Finished epoch # 67     top1:  51.201  top5:  19.951
	
=> Training epoch # 68	
 * Finished epoch # 68     top1:  48.232  top5:  18.457
	
=> Training epoch # 69	
 * Finished epoch # 69     top1:  46.367  top5:  18.184
	
=> Training epoch # 70	
 * Finished epoch # 70     top1:  44.980  top5:  16.592
	
=> Training epoch # 71	
 * Finished epoch # 71     top1:  45.342  top5:  16.924
	
=> Training epoch # 72	
 * Finished epoch # 72     top1:  43.896  top5:  15.605
	
=> Training epoch # 73	
 * Finished epoch # 73     top1:  45.068  top5:  15.361
	
=> Training epoch # 74	
 * Finished epoch # 74     top1:  47.803  top5:  19.795
	
=> Training epoch # 75	
 * Finished epoch # 75     top1:  44.062  top5:  17.168
	
=> Training epoch # 76	
 * Finished epoch # 76     top1:  44.775  top5:  16.270
	
=> Training epoch # 77	
 * Finished epoch # 77     top1:  44.893  top5:  16.309
	
=> Training epoch # 78	
 * Finished epoch # 78     top1:  48.848  top5:  19.111
	
=> Training epoch # 79	
 * Finished epoch # 79     top1:  53.662  top5:  24.551
	
=> Training epoch # 80	
 * Finished epoch # 80     top1:  49.844  top5:  20.947
	
=> Training epoch # 81	
 * Finished epoch # 81     top1:  27.031  top5:   6.436
	
 * Best model 	27.03125	6.435546875	
=> Training epoch # 82	
 * Finished epoch # 82     top1:  26.729  top5:   6.299
	
 * Best model 	26.728515625	6.298828125	
=> Training epoch # 83	
 * Finished epoch # 83     top1:  26.445  top5:   6.289
	
 * Best model 	26.4453125	6.2890625	
=> Training epoch # 84	
 * Finished epoch # 84     top1:  26.758  top5:   6.211
	
=> Training epoch # 85	
 * Finished epoch # 85     top1:  28.398  top5:   7.266
	
=> Training epoch # 86	
 * Finished epoch # 86     top1:  26.885  top5:   6.611
	
=> Training epoch # 87	
 * Finished epoch # 87     top1:  28.262  top5:   7.051
	
=> Training epoch # 88	
 * Finished epoch # 88     top1:  27.920  top5:   7.451
	
=> Training epoch # 89	
 * Finished epoch # 89     top1:  31.484  top5:   9.902
	
=> Training epoch # 90	
 * Finished epoch # 90     top1:  29.971  top5:   8.271
	
=> Training epoch # 91	
 * Finished epoch # 91     top1:  31.162  top5:   8.867
	
=> Training epoch # 92	
 * Finished epoch # 92     top1:  32.881  top5:  10.186
	
=> Training epoch # 93	
 * Finished epoch # 93     top1:  33.135  top5:  10.488
	
=> Training epoch # 94	
 * Finished epoch # 94     top1:  32.949  top5:  10.205
	
=> Training epoch # 95	
 * Finished epoch # 95     top1:  34.004  top5:  10.996
	
=> Training epoch # 96	
 * Finished epoch # 96     top1:  37.139  top5:  12.207
	
=> Training epoch # 97	
 * Finished epoch # 97     top1:  35.166  top5:  11.934
	
=> Training epoch # 98	
 * Finished epoch # 98     top1:  41.230  top5:  15.127
	
=> Training epoch # 99	
 * Finished epoch # 99     top1:  40.547  top5:  15.391
	
=> Training epoch # 100	
 * Finished epoch # 100     top1:  38.271  top5:  14.521
	
=> Training epoch # 101	
 * Finished epoch # 101     top1:  41.533  top5:  15.791
	
=> Training epoch # 102	
 * Finished epoch # 102     top1:  40.801  top5:  15.059
	
=> Training epoch # 103	
 * Finished epoch # 103     top1:  43.828  top5:  16.211
	
=> Training epoch # 104	
 * Finished epoch # 104     top1:  38.467  top5:  13.291
	
=> Training epoch # 105	
 * Finished epoch # 105     top1:  45.430  top5:  19.092
	
=> Training epoch # 106	
 * Finished epoch # 106     top1:  39.551  top5:  14.043
	
=> Training epoch # 107	
 * Finished epoch # 107     top1:  41.387  top5:  16.094
	
=> Training epoch # 108	
 * Finished epoch # 108     top1:  46.855  top5:  19.014
	
=> Training epoch # 109	
 * Finished epoch # 109     top1:  39.482  top5:  14.932
	
=> Training epoch # 110	
 * Finished epoch # 110     top1:  38.789  top5:  13.730
	
=> Training epoch # 111	
 * Finished epoch # 111     top1:  45.859  top5:  18.867
	
=> Training epoch # 112	
 * Finished epoch # 112     top1:  43.408  top5:  16.934
	
=> Training epoch # 113	
 * Finished epoch # 113     top1:  44.316  top5:  18.057
	
=> Training epoch # 114	
 * Finished epoch # 114     top1:  52.725  top5:  20.088
	
=> Training epoch # 115	
 * Finished epoch # 115     top1:  41.377  top5:  15.420
	
=> Training epoch # 116	
 * Finished epoch # 116     top1:  43.838  top5:  17.002
	
=> Training epoch # 117	
 * Finished epoch # 117     top1:  51.885  top5:  24.170
	
=> Training epoch # 118	
 * Finished epoch # 118     top1:  45.244  top5:  19.150
	
=> Training epoch # 119	
 * Finished epoch # 119     top1:  42.129  top5:  17.129
	
=> Training epoch # 120	
 * Finished epoch # 120     top1:  41.270  top5:  14.805
	
=> Training epoch # 121	
 * Finished epoch # 121     top1:  47.773  top5:  19.941
	
=> Training epoch # 122	
 * Finished epoch # 122     top1:  26.123  top5:   7.324
	
 * Best model 	26.123046875	7.32421875	
=> Training epoch # 123	
 * Finished epoch # 123     top1:  25.967  top5:   7.100
	
 * Best model 	25.966796875	7.099609375	
=> Training epoch # 124	
 * Finished epoch # 124     top1:  25.918  top5:   7.256
	
 * Best model 	25.91796875	7.255859375	
=> Training epoch # 125	
 * Finished epoch # 125     top1:  24.805  top5:   6.709
	
 * Best model 	24.8046875	6.708984375	
=> Training epoch # 126	
 * Finished epoch # 126     top1:  24.873  top5:   6.777
	
=> Training epoch # 127	
 * Finished epoch # 127     top1:  25.283  top5:   7.002
	
=> Training epoch # 128	
 * Finished epoch # 128     top1:  25.176  top5:   6.865
	
=> Training epoch # 129	
 * Finished epoch # 129     top1:  25.215  top5:   6.934
	
=> Training epoch # 130	
 * Finished epoch # 130     top1:  24.990  top5:   6.826
	
=> Training epoch # 131	
 * Finished epoch # 131     top1:  24.629  top5:   6.875
	
 * Best model 	24.62890625	6.875	
=> Training epoch # 132	
 * Finished epoch # 132     top1:  25.703  top5:   6.865
	
=> Training epoch # 133	
 * Finished epoch # 133     top1:  25.605  top5:   7.090
	
=> Training epoch # 134	
 * Finished epoch # 134     top1:  24.502  top5:   6.992
	
 * Best model 	24.501953125	6.9921875	
=> Training epoch # 135	
 * Finished epoch # 135     top1:  25.615  top5:   6.865
	
=> Training epoch # 136	
 * Finished epoch # 136     top1:  25.654  top5:   7.334
	
=> Training epoch # 137	
 * Finished epoch # 137     top1:  25.713  top5:   6.953
	
=> Training epoch # 138	
 * Finished epoch # 138     top1:  24.561  top5:   6.953
	
=> Training epoch # 139	
 * Finished epoch # 139     top1:  25.723  top5:   7.070
	
=> Training epoch # 140	
 * Finished epoch # 140     top1:  24.971  top5:   7.090
	
=> Training epoch # 141	
 * Finished epoch # 141     top1:  25.430  top5:   7.061
	
=> Training epoch # 142	
 * Finished epoch # 142     top1:  25.527  top5:   7.158
	
=> Training epoch # 143	
 * Finished epoch # 143     top1:  25.879  top5:   7.705
	
=> Training epoch # 144	
 * Finished epoch # 144     top1:  25.537  top5:   6.973
	
=> Training epoch # 145	
 * Finished epoch # 145     top1:  25.098  top5:   7.041
	
=> Training epoch # 146	
 * Finished epoch # 146     top1:  25.205  top5:   7.295
	
=> Training epoch # 147	
 * Finished epoch # 147     top1:  25.273  top5:   7.334
	
=> Training epoch # 148	
 * Finished epoch # 148     top1:  25.908  top5:   7.188
	
=> Training epoch # 149	
 * Finished epoch # 149     top1:  25.342  top5:   7.207
	
=> Training epoch # 150	
 * Finished epoch # 150     top1:  25.635  top5:   7.217
	
=> Training epoch # 151	
 * Finished epoch # 151     top1:  25.645  top5:   7.373
	
=> Training epoch # 152	
 * Finished epoch # 152     top1:  26.660  top5:   7.832
	
=> Training epoch # 153	
 * Finished epoch # 153     top1:  25.283  top5:   7.168
	
=> Training epoch # 154	
 * Finished epoch # 154     top1:  25.371  top5:   7.256
	
=> Training epoch # 155	
 * Finished epoch # 155     top1:  26.445  top5:   7.744
	
=> Training epoch # 156	
 * Finished epoch # 156     top1:  25.635  top5:   7.363
	
=> Training epoch # 157	
 * Finished epoch # 157     top1:  25.723  top5:   7.139
	
=> Training epoch # 158	
 * Finished epoch # 158     top1:  26.006  top5:   7.871
	
=> Training epoch # 159	
 * Finished epoch # 159     top1:  25.762  top5:   7.383
	
=> Training epoch # 160	
 * Finished epoch # 160     top1:  25.352  top5:   7.334
	
=> Training epoch # 161	
 * Finished epoch # 161     top1:  25.820  top5:   7.539
	
=> Training epoch # 162	
 * Finished epoch # 162     top1:  25.820  top5:   7.412
	
=> Training epoch # 163	
 * Finished epoch # 163     top1:  25.811  top5:   7.314
	
=> Training epoch # 164	
 * Finished epoch # 164     top1:  26.094  top5:   7.490
	
=> Training epoch # 165	
 * Finished epoch # 165     top1:  25.469  top5:   7.275
	
=> Training epoch # 166	
 * Finished epoch # 166     top1:  25.469  top5:   7.148
	
=> Training epoch # 167	
 * Finished epoch # 167     top1:  25.615  top5:   7.646
	
=> Training epoch # 168	
 * Finished epoch # 168     top1:  25.547  top5:   7.393
	
=> Training epoch # 169	
 * Finished epoch # 169     top1:  25.264  top5:   7.305
	
=> Training epoch # 170	
 * Finished epoch # 170     top1:  26.748  top5:   7.793
	
=> Training epoch # 171	
 * Finished epoch # 171     top1:  26.172  top5:   7.793
	
=> Training epoch # 172	
 * Finished epoch # 172     top1:  26.006  top5:   7.656
	
=> Training epoch # 173	
 * Finished epoch # 173     top1:  26.084  top5:   7.451
	
=> Training epoch # 174	
 * Finished epoch # 174     top1:  25.928  top5:   7.686
	
=> Training epoch # 175	
 * Finished epoch # 175     top1:  25.947  top5:   7.686
	
=> Training epoch # 176	
 * Finished epoch # 176     top1:  25.273  top5:   7.305
	
=> Training epoch # 177	
 * Finished epoch # 177     top1:  26.475  top5:   8.037
	
=> Training epoch # 178	
 * Finished epoch # 178     top1:  26.484  top5:   7.354
	
=> Training epoch # 179	
 * Finished epoch # 179     top1:  25.557  top5:   7.588
	
=> Training epoch # 180	
 * Finished epoch # 180     top1:  26.152  top5:   7.793
	
=> Training epoch # 181	
 * Finished epoch # 181     top1:  26.172  top5:   7.646
	
=> Training epoch # 182	
 * Finished epoch # 182     top1:  26.270  top5:   7.627
	
=> Training epoch # 183	
 * Finished epoch # 183     top1:  25.811  top5:   7.451
	
=> Training epoch # 184	
 * Finished epoch # 184     top1:  26.729  top5:   7.764
	
=> Training epoch # 185	
 * Finished epoch # 185     top1:  25.654  top5:   7.119
	
=> Training epoch # 186	
 * Finished epoch # 186     top1:  25.527  top5:   7.412
	
=> Training epoch # 187	
 * Finished epoch # 187     top1:  26.104  top5:   7.939
	
=> Training epoch # 188	
 * Finished epoch # 188     top1:  26.250  top5:   7.178
	
=> Training epoch # 189	
 * Finished epoch # 189     top1:  26.465  top5:   7.510
	
=> Training epoch # 190	
 * Finished epoch # 190     top1:  26.602  top5:   7.803
	
=> Training epoch # 191	
 * Finished epoch # 191     top1:  25.742  top5:   7.725
	
=> Training epoch # 192	
 * Finished epoch # 192     top1:  25.889  top5:   7.881
	
=> Training epoch # 193	
 * Finished epoch # 193     top1:  26.738  top5:   7.891
	
=> Training epoch # 194	
 * Finished epoch # 194     top1:  26.465  top5:   8.281
	
=> Training epoch # 195	
 * Finished epoch # 195     top1:  26.152  top5:   7.588
	
=> Training epoch # 196	
 * Finished epoch # 196     top1:  25.938  top5:   7.490
	
=> Training epoch # 197	
 * Finished epoch # 197     top1:  26.631  top5:   7.783
	
=> Training epoch # 198	
 * Finished epoch # 198     top1:  26.211  top5:   7.598
	
=> Training epoch # 199	
 * Finished epoch # 199     top1:  26.855  top5:   7.979
	
=> Training epoch # 200	
 * Finished epoch # 200     top1:  26.611  top5:   7.451
	
 * Finished top1: 24.502  top5:  6.992	
