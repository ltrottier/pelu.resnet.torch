{
  cudnn : "fastest"
  LR : 0.1
  nThreads : 2
  nClasses : 0
  batchSize : 256
  testOnly : false
  netType : "resnet-pelu-mul-div"
  resetClassifier : false
  shortcutType : "A"
  gen : "gen"
  nGPU : 1
  depth : 110
  weightDecay : 0.001
  data : ""
  dataset : "cifar100"
  epochNumber : 1
  manualSeed : 2
  resume : "results/results-pelu-mul-div/try1/cifar100/110"
  optimState : "none"
  nEpochs : 200
  tenCrop : false
  shareGradInput : false
  backend : "cudnn"
  momentum : 0.9
  retrain : "none"
}
=> Creating model from file: models/resnet-pelu-mul-div.lua	
 | ResNet-110 CIFAR-100	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1) without bias
  (2): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedMul
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedDiv
  }
  (3): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (4): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 32, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (5): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 64, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedMul
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedDiv
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (6): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedMul
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedDiv
  }
  (7): cudnn.SpatialAveragePooling(8x8, 1,1)
  (8): nn.View(64)
  (9): nn.Linear(64 -> 100)
}
=> Training epoch # 1	
 * Finished epoch # 1     top1:  88.535  top5:  65.752
	
 * Best model 	88.53515625	65.751953125	
=> Training epoch # 2	
 * Finished epoch # 2     top1:  77.012  top5:  46.240
	
 * Best model 	77.01171875	46.240234375	
=> Training epoch # 3	
 * Finished epoch # 3     top1:  65.537  top5:  32.842
	
 * Best model 	65.537109375	32.841796875	
=> Training epoch # 4	
 * Finished epoch # 4     top1:  65.117  top5:  32.910
	
 * Best model 	65.1171875	32.91015625	
=> Training epoch # 5	
 * Finished epoch # 5     top1:  61.582  top5:  28.486
	
 * Best model 	61.58203125	28.486328125	
=> Training epoch # 6	
 * Finished epoch # 6     top1:  54.863  top5:  22.334
	
 * Best model 	54.86328125	22.333984375	
=> Training epoch # 7	
 * Finished epoch # 7     top1:  53.564  top5:  22.637
	
 * Best model 	53.564453125	22.63671875	
=> Training epoch # 8	
 * Finished epoch # 8     top1:  59.326  top5:  27.305
	
=> Training epoch # 9	
 * Finished epoch # 9     top1:  52.500  top5:  20.801
	
 * Best model 	52.5	20.80078125	
=> Training epoch # 10	
 * Finished epoch # 10     top1:  53.984  top5:  24.023
	
=> Training epoch # 11	
 * Finished epoch # 11     top1:  48.857  top5:  18.125
	
 * Best model 	48.857421875	18.125	
=> Training epoch # 12	
 * Finished epoch # 12     top1:  49.697  top5:  18.955
	
=> Training epoch # 13	
 * Finished epoch # 13     top1:  47.178  top5:  17.217
	
 * Best model 	47.177734375	17.216796875	
=> Training epoch # 14	
 * Finished epoch # 14     top1:  49.463  top5:  20.273
	
=> Training epoch # 15	
 * Finished epoch # 15     top1:  46.865  top5:  16.729
	
 * Best model 	46.865234375	16.728515625	
=> Training epoch # 16	
 * Finished epoch # 16     top1:  51.211  top5:  20.459
	
=> Training epoch # 17	
 * Finished epoch # 17     top1:  50.967  top5:  19.160
	
=> Training epoch # 18	
 * Finished epoch # 18     top1:  49.502  top5:  19.561
	
=> Training epoch # 19	
 * Finished epoch # 19     top1:  45.820  top5:  17.412
	
 * Best model 	45.8203125	17.412109375	
=> Training epoch # 20	
 * Finished epoch # 20     top1:  45.635  top5:  16.992
	
 * Best model 	45.634765625	16.9921875	
=> Training epoch # 21	
 * Finished epoch # 21     top1:  54.727  top5:  25.332
	
=> Training epoch # 22	
 * Finished epoch # 22     top1:  52.021  top5:  22.588
	
=> Training epoch # 23	
 * Finished epoch # 23     top1:  45.605  top5:  16.260
	
 * Best model 	45.60546875	16.259765625	
=> Training epoch # 24	
 * Finished epoch # 24     top1:  45.830  top5:  15.908
	
=> Training epoch # 25	
 * Finished epoch # 25     top1:  47.168  top5:  17.988
	
=> Training epoch # 26	
 * Finished epoch # 26     top1:  43.760  top5:  15.635
	
 * Best model 	43.759765625	15.634765625	
=> Training epoch # 27	
 * Finished epoch # 27     top1:  44.756  top5:  15.840
	
=> Training epoch # 28	
 * Finished epoch # 28     top1:  49.443  top5:  18.994
	
=> Training epoch # 29	
 * Finished epoch # 29     top1:  44.609  top5:  16.445
	
=> Training epoch # 30	
 * Finished epoch # 30     top1:  49.453  top5:  20.850
	
=> Training epoch # 31	
 * Finished epoch # 31     top1:  45.820  top5:  16.162
	
=> Training epoch # 32	
 * Finished epoch # 32     top1:  44.902  top5:  16.680
	
=> Training epoch # 33	
 * Finished epoch # 33     top1:  46.885  top5:  18.057
	
=> Training epoch # 34	
 * Finished epoch # 34     top1:  44.727  top5:  16.084
	
=> Training epoch # 35	
 * Finished epoch # 35     top1:  48.203  top5:  19.395
	
=> Training epoch # 36	
 * Finished epoch # 36     top1:  46.475  top5:  19.268
	
=> Training epoch # 37	
 * Finished epoch # 37     top1:  45.088  top5:  16.533
	
=> Training epoch # 38	
 * Finished epoch # 38     top1:  42.812  top5:  15.635
	
 * Best model 	42.8125	15.634765625	
=> Training epoch # 39	
 * Finished epoch # 39     top1:  43.145  top5:  15.801
	
=> Training epoch # 40	
 * Finished epoch # 40     top1:  44.766  top5:  16.875
	
=> Training epoch # 41	
 * Finished epoch # 41     top1:  49.463  top5:  20.703
	
=> Training epoch # 42	
 * Finished epoch # 42     top1:  47.480  top5:  18.604
	
=> Training epoch # 43	
 * Finished epoch # 43     top1:  46.787  top5:  18.594
	
=> Training epoch # 44	
 * Finished epoch # 44     top1:  49.951  top5:  20.654
	
=> Training epoch # 45	
 * Finished epoch # 45     top1:  51.562  top5:  21.270
	
=> Training epoch # 46	
 * Finished epoch # 46     top1:  47.676  top5:  18.838
	
=> Training epoch # 47	
 * Finished epoch # 47     top1:  49.316  top5:  20.068
	
=> Training epoch # 48	
 * Finished epoch # 48     top1:  47.012  top5:  17.461
	
=> Training epoch # 49	
 * Finished epoch # 49     top1:  46.104  top5:  17.979
	
=> Training epoch # 50	
 * Finished epoch # 50     top1:  47.383  top5:  17.441
	
=> Training epoch # 51	
 * Finished epoch # 51     top1:  48.057  top5:  18.477
	
=> Training epoch # 52	
 * Finished epoch # 52     top1:  52.129  top5:  20.859
	
=> Training epoch # 53	
 * Finished epoch # 53     top1:  46.064  top5:  17.432
	
=> Training epoch # 54	
 * Finished epoch # 54     top1:  44.561  top5:  17.695
	
=> Training epoch # 55	
 * Finished epoch # 55     top1:  43.428  top5:  15.996
	
=> Training epoch # 56	
 * Finished epoch # 56     top1:  48.037  top5:  18.174
	
=> Training epoch # 57	
 * Finished epoch # 57     top1:  42.422  top5:  15.098
	
 * Best model 	42.421875	15.09765625	
=> Training epoch # 58	
 * Finished epoch # 58     top1:  47.305  top5:  19.209
	
=> Training epoch # 59	
 * Finished epoch # 59     top1:  44.326  top5:  16.729
	
=> Training epoch # 60	
 * Finished epoch # 60     top1:  43.525  top5:  15.312
	
=> Training epoch # 61	
 * Finished epoch # 61     top1:  44.648  top5:  16.113
	
=> Training epoch # 62	
 * Finished epoch # 62     top1:  43.857  top5:  16.162
	
=> Training epoch # 63	
 * Finished epoch # 63     top1:  45.068  top5:  17.588
	
=> Training epoch # 64	
 * Finished epoch # 64     top1:  47.344  top5:  18.467
	
=> Training epoch # 65	
 * Finished epoch # 65     top1:  56.328  top5:  31.211
	
=> Training epoch # 66	
 * Finished epoch # 66     top1:  46.328  top5:  17.520
	
=> Training epoch # 67	
 * Finished epoch # 67     top1:  48.496  top5:  20.430
	
=> Training epoch # 68	
 * Finished epoch # 68     top1:  48.711  top5:  18.369
	
=> Training epoch # 69	
 * Finished epoch # 69     top1:  48.018  top5:  19.590
	
=> Training epoch # 70	
 * Finished epoch # 70     top1:  46.787  top5:  18.242
	
=> Training epoch # 71	
 * Finished epoch # 71     top1:  49.121  top5:  19.131
	
=> Training epoch # 72	
 * Finished epoch # 72     top1:  45.605  top5:  17.139
	
=> Training epoch # 73	
 * Finished epoch # 73     top1:  47.363  top5:  17.451
	
=> Training epoch # 74	
 * Finished epoch # 74     top1:  45.088  top5:  17.373
	
=> Training epoch # 75	
 * Finished epoch # 75     top1:  46.221  top5:  16.631
	
=> Training epoch # 76	
 * Finished epoch # 76     top1:  41.611  top5:  13.350
	
 * Best model 	41.611328125	13.349609375	
=> Training epoch # 77	
 * Finished epoch # 77     top1:  48.896  top5:  20.195
	
=> Training epoch # 78	
 * Finished epoch # 78     top1:  45.039  top5:  16.162
	
=> Training epoch # 79	
 * Finished epoch # 79     top1:  49.951  top5:  19.951
	
=> Training epoch # 80	
 * Finished epoch # 80     top1:  41.855  top5:  15.264
	
=> Training epoch # 81	
 * Finished epoch # 81     top1:  28.213  top5:   7.275
	
 * Best model 	28.212890625	7.275390625	
=> Training epoch # 82	
 * Finished epoch # 82     top1:  28.223  top5:   7.236
	
=> Training epoch # 83	
 * Finished epoch # 83     top1:  28.330  top5:   7.510
	
=> Training epoch # 84	
 * Finished epoch # 84     top1:  27.568  top5:   6.973
	
 * Best model 	27.568359375	6.97265625	
=> Training epoch # 85	
 * Finished epoch # 85     top1:  29.395  top5:   7.832
	
=> Training epoch # 86	
 * Finished epoch # 86     top1:  30.176  top5:   8.066
	
=> Training epoch # 87	
 * Finished epoch # 87     top1:  29.854  top5:   8.477
	
=> Training epoch # 88	
 * Finished epoch # 88     top1:  29.893  top5:   8.154
	
=> Training epoch # 89	
 * Finished epoch # 89     top1:  30.361  top5:   8.926
	
=> Training epoch # 90	
 * Finished epoch # 90     top1:  31.650  top5:   9.541
	
=> Training epoch # 91	
 * Finished epoch # 91     top1:  31.172  top5:   8.770
	
=> Training epoch # 92	
 * Finished epoch # 92     top1:  34.053  top5:  10.361
	
=> Training epoch # 93	
 * Finished epoch # 93     top1:  34.082  top5:  10.273
	
=> Training epoch # 94	
 * Finished epoch # 94     top1:  31.582  top5:   9.355
	
=> Training epoch # 95	
 * Finished epoch # 95     top1:  31.523  top5:  10.088
	
=> Training epoch # 96	
 * Finished epoch # 96     top1:  34.385  top5:  10.693
	
=> Training epoch # 97	
 * Finished epoch # 97     top1:  36.973  top5:  12.188
	
=> Training epoch # 98	
 * Finished epoch # 98     top1:  35.049  top5:  11.113
	
=> Training epoch # 99	
 * Finished epoch # 99     top1:  34.609  top5:  11.104
	
=> Training epoch # 100	
 * Finished epoch # 100     top1:  34.434  top5:  11.260
	
=> Training epoch # 101	
 * Finished epoch # 101     top1:  37.129  top5:  12.432
	
=> Training epoch # 102	
 * Finished epoch # 102     top1:  34.023  top5:  11.055
	
=> Training epoch # 103	
 * Finished epoch # 103     top1:  37.100  top5:  13.027
	
=> Training epoch # 104	
 * Finished epoch # 104     top1:  35.957  top5:  12.168
	
=> Training epoch # 105	
 * Finished epoch # 105     top1:  36.162  top5:  11.670
	
=> Training epoch # 106	
 * Finished epoch # 106     top1:  35.410  top5:  11.436
	
=> Training epoch # 107	
 * Finished epoch # 107     top1:  37.959  top5:  12.227
	
=> Training epoch # 108	
 * Finished epoch # 108     top1:  34.824  top5:  12.207
	
=> Training epoch # 109	
 * Finished epoch # 109     top1:  34.795  top5:  11.221
	
=> Training epoch # 110	
 * Finished epoch # 110     top1:  39.160  top5:  12.939
	
=> Training epoch # 111	
 * Finished epoch # 111     top1:  36.758  top5:  11.709
	
=> Training epoch # 112	
 * Finished epoch # 112     top1:  35.791  top5:  11.816
	
=> Training epoch # 113	
 * Finished epoch # 113     top1:  35.684  top5:  11.797
	
=> Training epoch # 114	
 * Finished epoch # 114     top1:  37.002  top5:  12.393
	
=> Training epoch # 115	
 * Finished epoch # 115     top1:  39.121  top5:  14.482
	
=> Training epoch # 116	
 * Finished epoch # 116     top1:  37.910  top5:  12.900
	
=> Training epoch # 117	
 * Finished epoch # 117     top1:  38.936  top5:  13.467
	
=> Training epoch # 118	
 * Finished epoch # 118     top1:  38.574  top5:  13.887
	
=> Training epoch # 119	
 * Finished epoch # 119     top1:  36.934  top5:  13.057
	
=> Training epoch # 120	
 * Finished epoch # 120     top1:  41.621  top5:  14.600
	
=> Training epoch # 121	
 * Finished epoch # 121     top1:  36.123  top5:  11.465
	
=> Training epoch # 122	
 * Finished epoch # 122     top1:  27.500  top5:   7.461
	
 * Best model 	27.5	7.4609375	
=> Training epoch # 123	
 * Finished epoch # 123     top1:  26.982  top5:   7.568
	
 * Best model 	26.982421875	7.568359375	
=> Training epoch # 124	
 * Finished epoch # 124     top1:  26.777  top5:   7.090
	
 * Best model 	26.77734375	7.08984375	
=> Training epoch # 125	
 * Finished epoch # 125     top1:  25.879  top5:   7.090
	
 * Best model 	25.87890625	7.08984375	
=> Training epoch # 126	
 * Finished epoch # 126     top1:  26.055  top5:   7.080
	
=> Training epoch # 127	
 * Finished epoch # 127     top1:  26.152  top5:   6.982
	
=> Training epoch # 128	
 * Finished epoch # 128     top1:  26.348  top5:   7.334
	
=> Training epoch # 129	
 * Finished epoch # 129     top1:  26.455  top5:   7.168
	
=> Training epoch # 130	
 * Finished epoch # 130     top1:  26.504  top5:   7.119
	
=> Training epoch # 131	
 * Finished epoch # 131     top1:  26.641  top5:   6.992
	
=> Training epoch # 132	
 * Finished epoch # 132     top1:  26.445  top5:   7.168
	
=> Training epoch # 133	
 * Finished epoch # 133     top1:  26.729  top5:   7.148
	
=> Training epoch # 134	
 * Finished epoch # 134     top1:  26.240  top5:   7.090
	
=> Training epoch # 135	
 * Finished epoch # 135     top1:  26.396  top5:   7.354
	
=> Training epoch # 136	
 * Finished epoch # 136     top1:  26.641  top5:   7.178
	
=> Training epoch # 137	
 * Finished epoch # 137     top1:  26.328  top5:   7.109
	
=> Training epoch # 138	
 * Finished epoch # 138     top1:  25.996  top5:   6.982
	
=> Training epoch # 139	
 * Finished epoch # 139     top1:  26.396  top5:   7.090
	
=> Training epoch # 140	
 * Finished epoch # 140     top1:  26.191  top5:   7.041
	
=> Training epoch # 141	
 * Finished epoch # 141     top1:  26.221  top5:   6.895
	
=> Training epoch # 142	
 * Finished epoch # 142     top1:  26.514  top5:   7.109
	
=> Training epoch # 143	
 * Finished epoch # 143     top1:  26.230  top5:   7.266
	
=> Training epoch # 144	
 * Finished epoch # 144     top1:  25.859  top5:   7.002
	
 * Best model 	25.859375	7.001953125	
=> Training epoch # 145	
 * Finished epoch # 145     top1:  26.094  top5:   7.031
	
=> Training epoch # 146	
 * Finished epoch # 146     top1:  26.240  top5:   7.236
	
=> Training epoch # 147	
 * Finished epoch # 147     top1:  26.328  top5:   7.354
	
=> Training epoch # 148	
 * Finished epoch # 148     top1:  26.953  top5:   7.148
	
=> Training epoch # 149	
 * Finished epoch # 149     top1:  26.211  top5:   6.963
	
=> Training epoch # 150	
 * Finished epoch # 150     top1:  26.367  top5:   7.148
	
=> Training epoch # 151	
 * Finished epoch # 151     top1:  26.855  top5:   7.129
	
=> Training epoch # 152	
 * Finished epoch # 152     top1:  27.080  top5:   7.500
	
=> Training epoch # 153	
 * Finished epoch # 153     top1:  25.947  top5:   6.963
	
=> Training epoch # 154	
 * Finished epoch # 154     top1:  26.553  top5:   7.246
	
=> Training epoch # 155	
 * Finished epoch # 155     top1:  26.758  top5:   7.227
	
=> Training epoch # 156	
 * Finished epoch # 156     top1:  26.787  top5:   7.012
	
=> Training epoch # 157	
 * Finished epoch # 157     top1:  26.045  top5:   7.217
	
=> Training epoch # 158	
 * Finished epoch # 158     top1:  26.543  top5:   7.061
	
=> Training epoch # 159	
 * Finished epoch # 159     top1:  26.406  top5:   7.441
	
=> Training epoch # 160	
 * Finished epoch # 160     top1:  25.664  top5:   7.041
	
 * Best model 	25.6640625	7.041015625	
=> Training epoch # 161	
 * Finished epoch # 161     top1:  26.084  top5:   7.139
	
=> Training epoch # 162	
 * Finished epoch # 162     top1:  25.811  top5:   6.982
	
=> Training epoch # 163	
 * Finished epoch # 163     top1:  26.406  top5:   7.236
	
=> Training epoch # 164	
 * Finished epoch # 164     top1:  26.279  top5:   6.914
	
=> Training epoch # 165	
 * Finished epoch # 165     top1:  26.152  top5:   6.963
	
=> Training epoch # 166	
 * Finished epoch # 166     top1:  26.426  top5:   6.953
	
=> Training epoch # 167	
 * Finished epoch # 167     top1:  26.445  top5:   7.109
	
=> Training epoch # 168	
 * Finished epoch # 168     top1:  26.240  top5:   7.227
	
=> Training epoch # 169	
 * Finished epoch # 169     top1:  25.996  top5:   7.051
	
=> Training epoch # 170	
 * Finished epoch # 170     top1:  26.484  top5:   7.383
	
=> Training epoch # 171	
 * Finished epoch # 171     top1:  25.850  top5:   6.992
	
=> Training epoch # 172	
 * Finished epoch # 172     top1:  26.201  top5:   7.266
	
=> Training epoch # 173	
 * Finished epoch # 173     top1:  26.279  top5:   7.363
	
=> Training epoch # 174	
 * Finished epoch # 174     top1:  26.260  top5:   6.943
	
=> Training epoch # 175	
 * Finished epoch # 175     top1:  26.484  top5:   7.471
	
=> Training epoch # 176	
 * Finished epoch # 176     top1:  26.240  top5:   7.207
	
=> Training epoch # 177	
 * Finished epoch # 177     top1:  26.426  top5:   7.568
	
=> Training epoch # 178	
 * Finished epoch # 178     top1:  26.836  top5:   7.285
	
=> Training epoch # 179	
 * Finished epoch # 179     top1:  26.230  top5:   7.256
	
=> Training epoch # 180	
 * Finished epoch # 180     top1:  25.947  top5:   7.178
	
=> Training epoch # 181	
 * Finished epoch # 181     top1:  26.035  top5:   7.021
	
=> Training epoch # 182	
 * Finished epoch # 182     top1:  26.523  top5:   7.178
	
=> Training epoch # 183	
 * Finished epoch # 183     top1:  26.562  top5:   7.285
	
=> Training epoch # 184	
 * Finished epoch # 184     top1:  26.836  top5:   7.178
	
=> Training epoch # 185	
 * Finished epoch # 185     top1:  26.318  top5:   7.061
	
=> Training epoch # 186	
 * Finished epoch # 186     top1:  25.928  top5:   7.227
	
=> Training epoch # 187	
 * Finished epoch # 187     top1:  26.738  top5:   7.949
	
=> Training epoch # 188	
 * Finished epoch # 188     top1:  25.693  top5:   7.246
	
=> Training epoch # 189	
 * Finished epoch # 189     top1:  26.074  top5:   7.031
	
=> Training epoch # 190	
 * Finished epoch # 190     top1:  26.074  top5:   7.100
	
=> Training epoch # 191	
 * Finished epoch # 191     top1:  25.781  top5:   6.953
	
=> Training epoch # 192	
 * Finished epoch # 192     top1:  26.074  top5:   6.914
	
=> Training epoch # 193	
 * Finished epoch # 193     top1:  25.879  top5:   7.070
	
=> Training epoch # 194	
 * Finished epoch # 194     top1:  26.885  top5:   7.441
	
=> Training epoch # 195	
 * Finished epoch # 195     top1:  25.723  top5:   7.021
	
=> Training epoch # 196	
 * Finished epoch # 196     top1:  26.562  top5:   7.070
	
=> Training epoch # 197	
 * Finished epoch # 197     top1:  26.465  top5:   7.256
	
=> Training epoch # 198	
 * Finished epoch # 198     top1:  26.465  top5:   7.266
	
=> Training epoch # 199	
 * Finished epoch # 199     top1:  26.797  top5:   7.295
	
=> Training epoch # 200	
 * Finished epoch # 200     top1:  26.270  top5:   7.227
	
 * Finished top1: 25.664  top5:  7.041	
