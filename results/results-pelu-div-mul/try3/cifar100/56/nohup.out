{
  cudnn : "fastest"
  LR : 0.1
  nThreads : 2
  nClasses : 0
  batchSize : 256
  testOnly : false
  netType : "resnet"
  resetClassifier : false
  shortcutType : "A"
  gen : "gen"
  nGPU : 1
  depth : 56
  weightDecay : 0.001
  data : ""
  dataset : "cifar100"
  epochNumber : 1
  manualSeed : 2
  resume : "results/try3/cifar100/56"
  optimState : "none"
  nEpochs : 200
  tenCrop : false
  shareGradInput : false
  backend : "cudnn"
  momentum : 0.9
  retrain : "none"
}
=> Creating model from file: models/resnet.lua	
 | ResNet-56 CIFAR-100	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1) without bias
  (2): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedDiv
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedMul
  }
  (3): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (4): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 32, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (5): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 64, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (6): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedDiv
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedMul
  }
  (7): cudnn.SpatialAveragePooling(8x8, 1,1)
  (8): nn.View(64)
  (9): nn.Linear(64 -> 100)
}
=> Training epoch # 1	
 * Finished epoch # 1     top1:  85.098  top5:  58.467
	
 * Best model 	85.09765625	58.466796875	
=> Training epoch # 2	
 * Finished epoch # 2     top1:  74.072  top5:  42.891
	
 * Best model 	74.072265625	42.890625	
=> Training epoch # 3	
 * Finished epoch # 3     top1:  66.299  top5:  34.600
	
 * Best model 	66.298828125	34.599609375	
=> Training epoch # 4	
 * Finished epoch # 4     top1:  60.752  top5:  28.457
	
 * Best model 	60.751953125	28.45703125	
=> Training epoch # 5	
 * Finished epoch # 5     top1:  60.947  top5:  28.926
	
=> Training epoch # 6	
 * Finished epoch # 6     top1:  58.770  top5:  26.035
	
 * Best model 	58.76953125	26.03515625	
=> Training epoch # 7	
 * Finished epoch # 7     top1:  51.152  top5:  19.736
	
 * Best model 	51.15234375	19.736328125	
=> Training epoch # 8	
 * Finished epoch # 8     top1:  50.723  top5:  20.625
	
 * Best model 	50.72265625	20.625	
=> Training epoch # 9	
 * Finished epoch # 9     top1:  49.502  top5:  20.186
	
 * Best model 	49.501953125	20.185546875	
=> Training epoch # 10	
 * Finished epoch # 10     top1:  54.854  top5:  22.461
	
=> Training epoch # 11	
 * Finished epoch # 11     top1:  48.350  top5:  18.447
	
 * Best model 	48.349609375	18.447265625	
=> Training epoch # 12	
 * Finished epoch # 12     top1:  50.273  top5:  18.965
	
=> Training epoch # 13	
 * Finished epoch # 13     top1:  46.904  top5:  17.051
	
 * Best model 	46.904296875	17.05078125	
=> Training epoch # 14	
 * Finished epoch # 14     top1:  45.684  top5:  16.484
	
 * Best model 	45.68359375	16.484375	
=> Training epoch # 15	
 * Finished epoch # 15     top1:  45.811  top5:  16.641
	
=> Training epoch # 16	
 * Finished epoch # 16     top1:  47.676  top5:  17.520
	
=> Training epoch # 17	
 * Finished epoch # 17     top1:  50.840  top5:  20.186
	
=> Training epoch # 18	
 * Finished epoch # 18     top1:  44.395  top5:  15.762
	
 * Best model 	44.39453125	15.76171875	
=> Training epoch # 19	
 * Finished epoch # 19     top1:  45.420  top5:  15.625
	
=> Training epoch # 20	
 * Finished epoch # 20     top1:  46.465  top5:  17.061
	
=> Training epoch # 21	
 * Finished epoch # 21     top1:  47.549  top5:  17.744
	
=> Training epoch # 22	
 * Finished epoch # 22     top1:  54.131  top5:  23.281
	
=> Training epoch # 23	
 * Finished epoch # 23     top1:  43.174  top5:  14.326
	
 * Best model 	43.173828125	14.326171875	
=> Training epoch # 24	
 * Finished epoch # 24     top1:  45.410  top5:  16.602
	
=> Training epoch # 25	
 * Finished epoch # 25     top1:  41.631  top5:  13.652
	
 * Best model 	41.630859375	13.65234375	
=> Training epoch # 26	
 * Finished epoch # 26     top1:  42.715  top5:  14.717
	
=> Training epoch # 27	
 * Finished epoch # 27     top1:  44.248  top5:  16.309
	
=> Training epoch # 28	
 * Finished epoch # 28     top1:  44.658  top5:  15.537
	
=> Training epoch # 29	
 * Finished epoch # 29     top1:  49.248  top5:  18.340
	
=> Training epoch # 30	
 * Finished epoch # 30     top1:  45.371  top5:  15.713
	
=> Training epoch # 31	
 * Finished epoch # 31     top1:  45.020  top5:  16.260
	
=> Training epoch # 32	
 * Finished epoch # 32     top1:  49.082  top5:  18.730
	
=> Training epoch # 33	
 * Finished epoch # 33     top1:  42.236  top5:  14.248
	
=> Training epoch # 34	
 * Finished epoch # 34     top1:  44.424  top5:  16.426
	
=> Training epoch # 35	
 * Finished epoch # 35     top1:  48.213  top5:  18.535
	
=> Training epoch # 36	
 * Finished epoch # 36     top1:  47.666  top5:  18.896
	
=> Training epoch # 37	
 * Finished epoch # 37     top1:  42.539  top5:  14.590
	
=> Training epoch # 38	
 * Finished epoch # 38     top1:  44.102  top5:  15.020
	
=> Training epoch # 39	
 * Finished epoch # 39     top1:  43.418  top5:  14.229
	
=> Training epoch # 40	
 * Finished epoch # 40     top1:  44.316  top5:  14.883
	
=> Training epoch # 41	
 * Finished epoch # 41     top1:  42.979  top5:  14.463
	
=> Training epoch # 42	
 * Finished epoch # 42     top1:  42.021  top5:  14.131
	
=> Training epoch # 43	
 * Finished epoch # 43     top1:  43.467  top5:  14.736
	
=> Training epoch # 44	
 * Finished epoch # 44     top1:  43.232  top5:  14.346
	
=> Training epoch # 45	
 * Finished epoch # 45     top1:  41.475  top5:  14.033
	
 * Best model 	41.474609375	14.033203125	
=> Training epoch # 46	
 * Finished epoch # 46     top1:  45.830  top5:  17.871
	
=> Training epoch # 47	
 * Finished epoch # 47     top1:  43.984  top5:  15.664
	
=> Training epoch # 48	
 * Finished epoch # 48     top1:  43.945  top5:  15.615
	
=> Training epoch # 49	
 * Finished epoch # 49     top1:  43.174  top5:  15.088
	
=> Training epoch # 50	
 * Finished epoch # 50     top1:  47.998  top5:  18.711
	
=> Training epoch # 51	
 * Finished epoch # 51     top1:  45.186  top5:  15.850
	
=> Training epoch # 52	
 * Finished epoch # 52     top1:  42.842  top5:  14.932
	
=> Training epoch # 53	
 * Finished epoch # 53     top1:  43.506  top5:  15.625
	
=> Training epoch # 54	
 * Finished epoch # 54     top1:  44.707  top5:  16.016
	
=> Training epoch # 55	
 * Finished epoch # 55     top1:  43.457  top5:  16.289
	
=> Training epoch # 56	
 * Finished epoch # 56     top1:  44.385  top5:  15.811
	
=> Training epoch # 57	
 * Finished epoch # 57     top1:  43.301  top5:  14.883
	
=> Training epoch # 58	
 * Finished epoch # 58     top1:  41.514  top5:  13.984
	
=> Training epoch # 59	
 * Finished epoch # 59     top1:  43.203  top5:  15.098
	
=> Training epoch # 60	
 * Finished epoch # 60     top1:  43.018  top5:  14.648
	
=> Training epoch # 61	
 * Finished epoch # 61     top1:  41.768  top5:  14.141
	
=> Training epoch # 62	
 * Finished epoch # 62     top1:  43.076  top5:  14.385
	
=> Training epoch # 63	
 * Finished epoch # 63     top1:  45.771  top5:  16.680
	
=> Training epoch # 64	
 * Finished epoch # 64     top1:  43.867  top5:  14.736
	
=> Training epoch # 65	
 * Finished epoch # 65     top1:  45.078  top5:  17.285
	
=> Training epoch # 66	
 * Finished epoch # 66     top1:  42.979  top5:  13.936
	
=> Training epoch # 67	
 * Finished epoch # 67     top1:  41.963  top5:  13.779
	
=> Training epoch # 68	
 * Finished epoch # 68     top1:  48.291  top5:  19.805
	
=> Training epoch # 69	
 * Finished epoch # 69     top1:  41.152  top5:  13.281
	
 * Best model 	41.15234375	13.28125	
=> Training epoch # 70	
 * Finished epoch # 70     top1:  40.635  top5:  13.750
	
 * Best model 	40.634765625	13.75	
=> Training epoch # 71	
 * Finished epoch # 71     top1:  45.840  top5:  16.299
	
=> Training epoch # 72	
 * Finished epoch # 72     top1:  43.975  top5:  16.152
	
=> Training epoch # 73	
 * Finished epoch # 73     top1:  44.990  top5:  15.557
	
=> Training epoch # 74	
 * Finished epoch # 74     top1:  41.973  top5:  13.750
	
=> Training epoch # 75	
 * Finished epoch # 75     top1:  40.957  top5:  13.555
	
=> Training epoch # 76	
 * Finished epoch # 76     top1:  52.041  top5:  20.879
	
=> Training epoch # 77	
 * Finished epoch # 77     top1:  43.760  top5:  15.352
	
=> Training epoch # 78	
 * Finished epoch # 78     top1:  42.705  top5:  14.111
	
=> Training epoch # 79	
 * Finished epoch # 79     top1:  46.602  top5:  16.484
	
=> Training epoch # 80	
 * Finished epoch # 80     top1:  41.631  top5:  14.229
	
=> Training epoch # 81	
 * Finished epoch # 81     top1:  29.219  top5:   7.500
	
 * Best model 	29.21875	7.5	
=> Training epoch # 82	
 * Finished epoch # 82     top1:  28.379  top5:   7.012
	
 * Best model 	28.37890625	7.01171875	
=> Training epoch # 83	
 * Finished epoch # 83     top1:  28.193  top5:   6.953
	
 * Best model 	28.193359375	6.953125	
=> Training epoch # 84	
 * Finished epoch # 84     top1:  28.066  top5:   7.031
	
 * Best model 	28.06640625	7.03125	
=> Training epoch # 85	
 * Finished epoch # 85     top1:  28.193  top5:   6.973
	
=> Training epoch # 86	
 * Finished epoch # 86     top1:  28.945  top5:   7.061
	
=> Training epoch # 87	
 * Finished epoch # 87     top1:  29.668  top5:   7.451
	
=> Training epoch # 88	
 * Finished epoch # 88     top1:  28.535  top5:   7.422
	
=> Training epoch # 89	
 * Finished epoch # 89     top1:  29.395  top5:   7.617
	
=> Training epoch # 90	
 * Finished epoch # 90     top1:  29.600  top5:   7.812
	
=> Training epoch # 91	
 * Finished epoch # 91     top1:  29.326  top5:   7.510
	
=> Training epoch # 92	
 * Finished epoch # 92     top1:  29.209  top5:   7.822
	
=> Training epoch # 93	
 * Finished epoch # 93     top1:  29.707  top5:   8.369
	
=> Training epoch # 94	
 * Finished epoch # 94     top1:  29.482  top5:   7.979
	
=> Training epoch # 95	
 * Finished epoch # 95     top1:  29.814  top5:   7.920
	
=> Training epoch # 96	
 * Finished epoch # 96     top1:  29.688  top5:   7.393
	
=> Training epoch # 97	
 * Finished epoch # 97     top1:  29.873  top5:   7.881
	
=> Training epoch # 98	
 * Finished epoch # 98     top1:  29.883  top5:   8.193
	
=> Training epoch # 99	
 * Finished epoch # 99     top1:  30.039  top5:   8.203
	
=> Training epoch # 100	
 * Finished epoch # 100     top1:  29.795  top5:   7.979
	
=> Training epoch # 101	
 * Finished epoch # 101     top1:  29.961  top5:   8.574
	
=> Training epoch # 102	
 * Finished epoch # 102     top1:  30.352  top5:   7.939
	
=> Training epoch # 103	
 * Finished epoch # 103     top1:  30.439  top5:   7.881
	
=> Training epoch # 104	
 * Finished epoch # 104     top1:  30.303  top5:   8.193
	
=> Training epoch # 105	
 * Finished epoch # 105     top1:  30.840  top5:   8.340
	
=> Training epoch # 106	
 * Finished epoch # 106     top1:  31.406  top5:   8.604
	
=> Training epoch # 107	
 * Finished epoch # 107     top1:  31.289  top5:   8.760
	
=> Training epoch # 108	
 * Finished epoch # 108     top1:  29.951  top5:   8.262
	
=> Training epoch # 109	
 * Finished epoch # 109     top1:  31.055  top5:   8.457
	
=> Training epoch # 110	
 * Finished epoch # 110     top1:  31.045  top5:   8.281
	
=> Training epoch # 111	
 * Finished epoch # 111     top1:  30.420  top5:   8.643
	
=> Training epoch # 112	
 * Finished epoch # 112     top1:  30.762  top5:   9.141
	
=> Training epoch # 113	
 * Finished epoch # 113     top1:  30.850  top5:   8.486
	
=> Training epoch # 114	
 * Finished epoch # 114     top1:  31.396  top5:   8.770
	
=> Training epoch # 115	
 * Finished epoch # 115     top1:  30.977  top5:   8.652
	
=> Training epoch # 116	
 * Finished epoch # 116     top1:  30.918  top5:   8.672
	
=> Training epoch # 117	
 * Finished epoch # 117     top1:  30.645  top5:   8.789
	
=> Training epoch # 118	
 * Finished epoch # 118     top1:  30.371  top5:   8.516
	
=> Training epoch # 119	
 * Finished epoch # 119     top1:  30.293  top5:   8.555
	
=> Training epoch # 120	
 * Finished epoch # 120     top1:  30.791  top5:   9.004
	
=> Training epoch # 121	
 * Finished epoch # 121     top1:  30.342  top5:   8.584
	
=> Training epoch # 122	
 * Finished epoch # 122     top1:  27.793  top5:   7.402
	
 * Best model 	27.79296875	7.40234375	
=> Training epoch # 123	
 * Finished epoch # 123     top1:  27.256  top5:   7.090
	
 * Best model 	27.255859375	7.08984375	
=> Training epoch # 124	
 * Finished epoch # 124     top1:  27.637  top5:   6.943
	
=> Training epoch # 125	
 * Finished epoch # 125     top1:  27.217  top5:   7.510
	
 * Best model 	27.216796875	7.509765625	
=> Training epoch # 126	
 * Finished epoch # 126     top1:  27.012  top5:   7.344
	
 * Best model 	27.01171875	7.34375	
=> Training epoch # 127	
 * Finished epoch # 127     top1:  26.484  top5:   6.924
	
 * Best model 	26.484375	6.923828125	
=> Training epoch # 128	
 * Finished epoch # 128     top1:  27.334  top5:   6.973
	
=> Training epoch # 129	
 * Finished epoch # 129     top1:  26.924  top5:   7.295
	
=> Training epoch # 130	
 * Finished epoch # 130     top1:  27.100  top5:   6.895
	
=> Training epoch # 131	
 * Finished epoch # 131     top1:  26.787  top5:   7.197
	
=> Training epoch # 132	
 * Finished epoch # 132     top1:  26.738  top5:   7.158
	
=> Training epoch # 133	
 * Finished epoch # 133     top1:  26.943  top5:   7.041
	
=> Training epoch # 134	
 * Finished epoch # 134     top1:  26.748  top5:   6.865
	
=> Training epoch # 135	
 * Finished epoch # 135     top1:  27.041  top5:   7.012
	
=> Training epoch # 136	
 * Finished epoch # 136     top1:  26.035  top5:   6.973
	
 * Best model 	26.03515625	6.97265625	
=> Training epoch # 137	
 * Finished epoch # 137     top1:  26.748  top5:   6.816
	
=> Training epoch # 138	
 * Finished epoch # 138     top1:  26.641  top5:   6.768
	
=> Training epoch # 139	
 * Finished epoch # 139     top1:  26.650  top5:   6.914
	
=> Training epoch # 140	
 * Finished epoch # 140     top1:  26.846  top5:   7.041
	
=> Training epoch # 141	
 * Finished epoch # 141     top1:  26.660  top5:   7.158
	
=> Training epoch # 142	
 * Finished epoch # 142     top1:  27.051  top5:   7.119
	
=> Training epoch # 143	
 * Finished epoch # 143     top1:  26.729  top5:   6.943
	
=> Training epoch # 144	
 * Finished epoch # 144     top1:  26.895  top5:   7.061
	
=> Training epoch # 145	
 * Finished epoch # 145     top1:  26.611  top5:   6.807
	
=> Training epoch # 146	
 * Finished epoch # 146     top1:  26.582  top5:   6.953
	
=> Training epoch # 147	
 * Finished epoch # 147     top1:  27.002  top5:   6.855
	
=> Training epoch # 148	
 * Finished epoch # 148     top1:  26.855  top5:   7.070
	
=> Training epoch # 149	
 * Finished epoch # 149     top1:  26.875  top5:   6.875
	
=> Training epoch # 150	
 * Finished epoch # 150     top1:  27.246  top5:   6.992
	
=> Training epoch # 151	
 * Finished epoch # 151     top1:  26.836  top5:   6.943
	
=> Training epoch # 152	
 * Finished epoch # 152     top1:  26.914  top5:   7.090
	
=> Training epoch # 153	
 * Finished epoch # 153     top1:  26.689  top5:   6.816
	
=> Training epoch # 154	
 * Finished epoch # 154     top1:  26.992  top5:   6.855
	
=> Training epoch # 155	
 * Finished epoch # 155     top1:  26.621  top5:   6.885
	
=> Training epoch # 156	
 * Finished epoch # 156     top1:  26.611  top5:   6.846
	
=> Training epoch # 157	
 * Finished epoch # 157     top1:  26.562  top5:   6.885
	
=> Training epoch # 158	
 * Finished epoch # 158     top1:  27.100  top5:   7.129
	
=> Training epoch # 159	
 * Finished epoch # 159     top1:  26.738  top5:   6.885
	
=> Training epoch # 160	
 * Finished epoch # 160     top1:  27.061  top5:   7.363
	
=> Training epoch # 161	
 * Finished epoch # 161     top1:  26.572  top5:   7.109
	
=> Training epoch # 162	
 * Finished epoch # 162     top1:  27.402  top5:   7.217
	
=> Training epoch # 163	
 * Finished epoch # 163     top1:  26.816  top5:   7.207
	
=> Training epoch # 164	
 * Finished epoch # 164     top1:  26.953  top5:   6.982
	
=> Training epoch # 165	
 * Finished epoch # 165     top1:  27.285  top5:   7.324
	
=> Training epoch # 166	
 * Finished epoch # 166     top1:  26.973  top5:   7.012
	
=> Training epoch # 167	
 * Finished epoch # 167     top1:  26.885  top5:   6.777
	
=> Training epoch # 168	
 * Finished epoch # 168     top1:  26.826  top5:   7.207
	
=> Training epoch # 169	
 * Finished epoch # 169     top1:  26.895  top5:   7.266
	
=> Training epoch # 170	
 * Finished epoch # 170     top1:  27.305  top5:   7.119
	
=> Training epoch # 171	
 * Finished epoch # 171     top1:  26.797  top5:   7.061
	
=> Training epoch # 172	
 * Finished epoch # 172     top1:  27.002  top5:   7.334
	
=> Training epoch # 173	
 * Finished epoch # 173     top1:  26.533  top5:   6.885
	
=> Training epoch # 174	
 * Finished epoch # 174     top1:  26.963  top5:   7.158
	
=> Training epoch # 175	
 * Finished epoch # 175     top1:  26.855  top5:   6.963
	
=> Training epoch # 176	
 * Finished epoch # 176     top1:  26.865  top5:   7.266
	
=> Training epoch # 177	
 * Finished epoch # 177     top1:  27.100  top5:   7.070
	
=> Training epoch # 178	
 * Finished epoch # 178     top1:  26.846  top5:   7.012
	
=> Training epoch # 179	
 * Finished epoch # 179     top1:  26.709  top5:   7.070
	
=> Training epoch # 180	
 * Finished epoch # 180     top1:  27.061  top5:   7.373
	
=> Training epoch # 181	
 * Finished epoch # 181     top1:  27.285  top5:   7.637
	
=> Training epoch # 182	
 * Finished epoch # 182     top1:  27.217  top5:   7.266
	
=> Training epoch # 183	
 * Finished epoch # 183     top1:  27.314  top5:   7.246
	
=> Training epoch # 184	
 * Finished epoch # 184     top1:  27.090  top5:   7.256
	
=> Training epoch # 185	
 * Finished epoch # 185     top1:  27.021  top5:   7.158
	
=> Training epoch # 186	
 * Finished epoch # 186     top1:  26.748  top5:   7.119
	
=> Training epoch # 187	
 * Finished epoch # 187     top1:  26.729  top5:   7.002
	
=> Training epoch # 188	
 * Finished epoch # 188     top1:  26.523  top5:   7.119
	
=> Training epoch # 189	
 * Finished epoch # 189     top1:  26.670  top5:   7.256
	
=> Training epoch # 190	
 * Finished epoch # 190     top1:  27.266  top5:   7.188
	
=> Training epoch # 191	
 * Finished epoch # 191     top1:  26.631  top5:   7.168
	
=> Training epoch # 192	
 * Finished epoch # 192     top1:  26.865  top5:   7.402
	
=> Training epoch # 193	
 * Finished epoch # 193     top1:  26.963  top5:   7.588
	
=> Training epoch # 194	
 * Finished epoch # 194     top1:  27.227  top5:   7.275
	
=> Training epoch # 195	
 * Finished epoch # 195     top1:  27.080  top5:   7.188
	
=> Training epoch # 196	
 * Finished epoch # 196     top1:  26.807  top5:   7.305
	
=> Training epoch # 197	
 * Finished epoch # 197     top1:  26.826  top5:   7.256
	
=> Training epoch # 198	
 * Finished epoch # 198     top1:  27.363  top5:   7.285
	
=> Training epoch # 199	
 * Finished epoch # 199     top1:  27.832  top5:   7.510
	
=> Training epoch # 200	
 * Finished epoch # 200     top1:  27.393  top5:   7.480
	
 * Finished top1: 26.035  top5:  6.973	
