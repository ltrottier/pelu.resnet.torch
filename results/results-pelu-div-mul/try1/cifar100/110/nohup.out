=> Creating model from file: models/resnet.lua	
 | ResNet-110 CIFAR-100	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1) without bias
  (2): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedDiv
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedMul
  }
  (3): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (4): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 32, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (5): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 64, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (6): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedDiv
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedMul
  }
  (7): cudnn.SpatialAveragePooling(8x8, 1,1)
  (8): nn.View(64)
  (9): nn.Linear(64 -> 100)
}
=> Training epoch # 1	
 * Finished epoch # 1     top1:  87.393  top5:  61.855
	
 * Best model 	87.392578125	61.85546875	
=> Training epoch # 2	
 * Finished epoch # 2     top1:  74.648  top5:  43.721
	
 * Best model 	74.6484375	43.720703125	
=> Training epoch # 3	
 * Finished epoch # 3     top1:  68.125  top5:  36.836
	
 * Best model 	68.125	36.8359375	
=> Training epoch # 4	
 * Finished epoch # 4     top1:  67.500  top5:  35.557
	
 * Best model 	67.5	35.556640625	
=> Training epoch # 5	
 * Finished epoch # 5     top1:  56.924  top5:  23.936
	
 * Best model 	56.923828125	23.935546875	
=> Training epoch # 6	
 * Finished epoch # 6     top1:  57.197  top5:  25.801
	
=> Training epoch # 7	
 * Finished epoch # 7     top1:  50.850  top5:  20.000
	
 * Best model 	50.849609375	20	
=> Training epoch # 8	
 * Finished epoch # 8     top1:  58.047  top5:  27.314
	
=> Training epoch # 9	
 * Finished epoch # 9     top1:  48.779  top5:  17.852
	
 * Best model 	48.779296875	17.8515625	
=> Training epoch # 10	
 * Finished epoch # 10     top1:  49.434  top5:  19.102
	
=> Training epoch # 11	
 * Finished epoch # 11     top1:  46.660  top5:  16.270
	
 * Best model 	46.66015625	16.26953125	
=> Training epoch # 12	
 * Finished epoch # 12     top1:  44.033  top5:  15.869
	
 * Best model 	44.033203125	15.869140625	
=> Training epoch # 13	
 * Finished epoch # 13     top1:  48.418  top5:  17.852
	
=> Training epoch # 14	
 * Finished epoch # 14     top1:  48.086  top5:  19.043
	
=> Training epoch # 15	
 * Finished epoch # 15     top1:  47.480  top5:  17.305
	
=> Training epoch # 16	
 * Finished epoch # 16     top1:  48.271  top5:  18.350
	
=> Training epoch # 17	
 * Finished epoch # 17     top1:  43.105  top5:  14.014
	
 * Best model 	43.10546875	14.013671875	
=> Training epoch # 18	
 * Finished epoch # 18     top1:  47.041  top5:  16.328
	
=> Training epoch # 19	
 * Finished epoch # 19     top1:  44.150  top5:  14.971
	
=> Training epoch # 20	
 * Finished epoch # 20     top1:  45.137  top5:  15.791
	
=> Training epoch # 21	
 * Finished epoch # 21     top1:  44.014  top5:  15.840
	
=> Training epoch # 22	
 * Finished epoch # 22     top1:  46.689  top5:  16.973
	
=> Training epoch # 23	
 * Finished epoch # 23     top1:  48.271  top5:  18.799
	
=> Training epoch # 24	
 * Finished epoch # 24     top1:  40.547  top5:  12.852
	
 * Best model 	40.546875	12.8515625	
=> Training epoch # 25	
 * Finished epoch # 25     top1:  42.334  top5:  13.955
	
=> Training epoch # 26	
 * Finished epoch # 26     top1:  43.750  top5:  15.010
	
=> Training epoch # 27	
 * Finished epoch # 27     top1:  42.861  top5:  14.404
	
=> Training epoch # 28	
 * Finished epoch # 28     top1:  44.473  top5:  15.547
	
=> Training epoch # 29	
 * Finished epoch # 29     top1:  41.484  top5:  14.160
	
=> Training epoch # 30	
 * Finished epoch # 30     top1:  44.570  top5:  15.342
	
=> Training epoch # 31	
 * Finished epoch # 31     top1:  41.406  top5:  13.848
	
=> Training epoch # 32	
 * Finished epoch # 32     top1:  41.689  top5:  14.131
	
=> Training epoch # 33	
 * Finished epoch # 33     top1:  41.631  top5:  14.033
	
=> Training epoch # 34	
 * Finished epoch # 34     top1:  42.490  top5:  15.010
	
=> Training epoch # 35	
 * Finished epoch # 35     top1:  42.617  top5:  14.863
	
=> Training epoch # 36	
 * Finished epoch # 36     top1:  46.104  top5:  16.387
	
=> Training epoch # 37	
 * Finished epoch # 37     top1:  41.562  top5:  15.000
	
=> Training epoch # 38	
 * Finished epoch # 38     top1:  41.592  top5:  13.389
	
=> Training epoch # 39	
 * Finished epoch # 39     top1:  41.562  top5:  14.336
	
=> Training epoch # 40	
 * Finished epoch # 40     top1:  42.979  top5:  15.410
	
=> Training epoch # 41	
 * Finished epoch # 41     top1:  39.883  top5:  12.500
	
 * Best model 	39.8828125	12.5	
=> Training epoch # 42	
 * Finished epoch # 42     top1:  41.738  top5:  14.395
	
=> Training epoch # 43	
 * Finished epoch # 43     top1:  42.725  top5:  14.492
	
=> Training epoch # 44	
 * Finished epoch # 44     top1:  43.447  top5:  14.580
	
=> Training epoch # 45	
 * Finished epoch # 45     top1:  41.709  top5:  14.893
	
=> Training epoch # 46	
 * Finished epoch # 46     top1:  42.529  top5:  14.922
	
=> Training epoch # 47	
 * Finished epoch # 47     top1:  42.695  top5:  15.010
	
=> Training epoch # 48	
 * Finished epoch # 48     top1:  41.992  top5:  14.395
	
=> Training epoch # 49	
 * Finished epoch # 49     top1:  40.234  top5:  13.711
	
=> Training epoch # 50	
 * Finished epoch # 50     top1:  40.293  top5:  11.826
	
=> Training epoch # 51	
 * Finished epoch # 51     top1:  43.154  top5:  16.406
	
=> Training epoch # 52	
 * Finished epoch # 52     top1:  45.186  top5:  16.533
	
=> Training epoch # 53	
 * Finished epoch # 53     top1:  41.064  top5:  13.340
	
=> Training epoch # 54	
 * Finished epoch # 54     top1:  40.645  top5:  14.414
	
=> Training epoch # 55	
 * Finished epoch # 55     top1:  42.666  top5:  14.912
	
=> Training epoch # 56	
 * Finished epoch # 56     top1:  40.889  top5:  13.789
	
=> Training epoch # 57	
 * Finished epoch # 57     top1:  43.906  top5:  15.938
	
=> Training epoch # 58	
 * Finished epoch # 58     top1:  40.713  top5:  13.525
	
=> Training epoch # 59	
 * Finished epoch # 59     top1:  40.625  top5:  12.676
	
=> Training epoch # 60	
 * Finished epoch # 60     top1:  40.820  top5:  12.637
	
=> Training epoch # 61	
 * Finished epoch # 61     top1:  41.572  top5:  13.848
	
=> Training epoch # 62	
 * Finished epoch # 62     top1:  41.016  top5:  13.369
	
=> Training epoch # 63	
 * Finished epoch # 63     top1:  39.316  top5:  12.617
	
 * Best model 	39.31640625	12.6171875	
=> Training epoch # 64	
 * Finished epoch # 64     top1:  42.256  top5:  13.730
	
=> Training epoch # 65	
 * Finished epoch # 65     top1:  40.518  top5:  14.004
	
=> Training epoch # 66	
 * Finished epoch # 66     top1:  44.102  top5:  15.430
	
=> Training epoch # 67	
 * Finished epoch # 67     top1:  40.713  top5:  12.920
	
=> Training epoch # 68	
 * Finished epoch # 68     top1:  40.244  top5:  13.711
	
=> Training epoch # 69	
 * Finished epoch # 69     top1:  40.273  top5:  13.291
	
=> Training epoch # 70	
 * Finished epoch # 70     top1:  43.672  top5:  16.133
	
=> Training epoch # 71	
 * Finished epoch # 71     top1:  42.812  top5:  14.736
	
=> Training epoch # 72	
 * Finished epoch # 72     top1:  43.193  top5:  15.615
	
=> Training epoch # 73	
 * Finished epoch # 73     top1:  42.598  top5:  15.078
	
=> Training epoch # 74	
 * Finished epoch # 74     top1:  38.477  top5:  13.486
	
 * Best model 	38.4765625	13.486328125	
=> Training epoch # 75	
 * Finished epoch # 75     top1:  38.955  top5:  13.008
	
=> Training epoch # 76	
 * Finished epoch # 76     top1:  42.100  top5:  14.316
	
=> Training epoch # 77	
 * Finished epoch # 77     top1:  44.072  top5:  16.289
	
=> Training epoch # 78	
 * Finished epoch # 78     top1:  42.695  top5:  14.814
	
=> Training epoch # 79	
 * Finished epoch # 79     top1:  45.684  top5:  16.816
	
=> Training epoch # 80	
 * Finished epoch # 80     top1:  40.078  top5:  13.398
	
=> Training epoch # 81	
 * Finished epoch # 81     top1:  27.559  top5:   6.719
	
 * Best model 	27.55859375	6.71875	
=> Training epoch # 82	
 * Finished epoch # 82     top1:  27.080  top5:   6.963
	
 * Best model 	27.080078125	6.962890625	
=> Training epoch # 83	
 * Finished epoch # 83     top1:  26.553  top5:   6.768
	
 * Best model 	26.552734375	6.767578125	
=> Training epoch # 84	
 * Finished epoch # 84     top1:  26.797  top5:   6.465
	
=> Training epoch # 85	
 * Finished epoch # 85     top1:  27.246  top5:   6.963
	
=> Training epoch # 86	
 * Finished epoch # 86     top1:  27.295  top5:   6.699
	
=> Training epoch # 87	
 * Finished epoch # 87     top1:  27.412  top5:   6.914
	
=> Training epoch # 88	
 * Finished epoch # 88     top1:  27.773  top5:   6.914
	
=> Training epoch # 89	
 * Finished epoch # 89     top1:  27.344  top5:   7.627
	
=> Training epoch # 90	
 * Finished epoch # 90     top1:  28.350  top5:   7.275
	
=> Training epoch # 91	
 * Finished epoch # 91     top1:  28.848  top5:   7.490
	
=> Training epoch # 92	
 * Finished epoch # 92     top1:  28.213  top5:   7.578
	
=> Training epoch # 93	
 * Finished epoch # 93     top1:  28.066  top5:   7.275
	
=> Training epoch # 94	
 * Finished epoch # 94     top1:  28.018  top5:   7.764
	
=> Training epoch # 95	
 * Finished epoch # 95     top1:  27.832  top5:   7.812
	
=> Training epoch # 96	
 * Finished epoch # 96     top1:  29.131  top5:   8.125
	
=> Training epoch # 97	
 * Finished epoch # 97     top1:  28.223  top5:   7.715
	
=> Training epoch # 98	
 * Finished epoch # 98     top1:  28.672  top5:   7.783
	
=> Training epoch # 99	
 * Finished epoch # 99     top1:  28.711  top5:   8.164
	
=> Training epoch # 100	
 * Finished epoch # 100     top1:  27.393  top5:   7.627
	
=> Training epoch # 101	
 * Finished epoch # 101     top1:  28.613  top5:   8.184
	
=> Training epoch # 102	
 * Finished epoch # 102     top1:  28.789  top5:   8.213
	
=> Training epoch # 103	
 * Finished epoch # 103     top1:  28.730  top5:   8.105
	
=> Training epoch # 104	
 * Finished epoch # 104     top1:  27.920  top5:   7.520
	
=> Training epoch # 105	
 * Finished epoch # 105     top1:  29.189  top5:   7.832
	
=> Training epoch # 106	
 * Finished epoch # 106     top1:  28.730  top5:   8.486
	
=> Training epoch # 107	
 * Finished epoch # 107     top1:  28.643  top5:   8.213
	
=> Training epoch # 108	
 * Finished epoch # 108     top1:  29.043  top5:   8.340
	
=> Training epoch # 109	
 * Finished epoch # 109     top1:  28.838  top5:   7.773
	
=> Training epoch # 110	
 * Finished epoch # 110     top1:  28.838  top5:   8.418
	
=> Training epoch # 111	
 * Finished epoch # 111     top1:  29.502  top5:   8.311
	
=> Training epoch # 112	
 * Finished epoch # 112     top1:  28.662  top5:   8.027
	
=> Training epoch # 113	
 * Finished epoch # 113     top1:  29.854  top5:   9.023
	
=> Training epoch # 114	
 * Finished epoch # 114     top1:  29.434  top5:   8.311
	
=> Training epoch # 115	
 * Finished epoch # 115     top1:  28.965  top5:   7.979
	
=> Training epoch # 116	
 * Finished epoch # 116     top1:  29.199  top5:   8.125
	
=> Training epoch # 117	
 * Finished epoch # 117     top1:  30.107  top5:   8.604
	
=> Training epoch # 118	
 * Finished epoch # 118     top1:  29.004  top5:   8.477
	
=> Training epoch # 119	
 * Finished epoch # 119     top1:  29.873  top5:   8.496
	
=> Training epoch # 120	
 * Finished epoch # 120     top1:  28.467  top5:   7.949
	
=> Training epoch # 121	
 * Finished epoch # 121     top1:  29.561  top5:   8.496
	
=> Training epoch # 122	
 * Finished epoch # 122     top1:  26.553  top5:   7.422
	
=> Training epoch # 123	
 * Finished epoch # 123     top1:  26.064  top5:   6.943
	
 * Best model 	26.064453125	6.943359375	
=> Training epoch # 124	
 * Finished epoch # 124     top1:  25.801  top5:   6.787
	
 * Best model 	25.80078125	6.787109375	
=> Training epoch # 125	
 * Finished epoch # 125     top1:  25.400  top5:   6.797
	
 * Best model 	25.400390625	6.796875	
=> Training epoch # 126	
 * Finished epoch # 126     top1:  25.371  top5:   6.631
	
 * Best model 	25.37109375	6.630859375	
=> Training epoch # 127	
 * Finished epoch # 127     top1:  24.932  top5:   6.699
	
 * Best model 	24.931640625	6.69921875	
=> Training epoch # 128	
 * Finished epoch # 128     top1:  25.020  top5:   7.070
	
=> Training epoch # 129	
 * Finished epoch # 129     top1:  25.254  top5:   6.963
	
=> Training epoch # 130	
 * Finished epoch # 130     top1:  24.893  top5:   6.855
	
 * Best model 	24.892578125	6.85546875	
=> Training epoch # 131	
 * Finished epoch # 131     top1:  24.814  top5:   6.875
	
 * Best model 	24.814453125	6.875	
=> Training epoch # 132	
 * Finished epoch # 132     top1:  24.766  top5:   6.768
	
 * Best model 	24.765625	6.767578125	
=> Training epoch # 133	
 * Finished epoch # 133     top1:  25.068  top5:   7.002
	
=> Training epoch # 134	
 * Finished epoch # 134     top1:  24.766  top5:   6.826
	
=> Training epoch # 135	
 * Finished epoch # 135     top1:  25.078  top5:   6.748
	
=> Training epoch # 136	
 * Finished epoch # 136     top1:  25.098  top5:   6.885
	
=> Training epoch # 137	
 * Finished epoch # 137     top1:  24.971  top5:   6.709
	
=> Training epoch # 138	
 * Finished epoch # 138     top1:  24.453  top5:   6.689
	
 * Best model 	24.453125	6.689453125	
=> Training epoch # 139	
 * Finished epoch # 139     top1:  25.273  top5:   7.041
	
=> Training epoch # 140	
 * Finished epoch # 140     top1:  24.629  top5:   6.748
	
=> Training epoch # 141	
 * Finished epoch # 141     top1:  24.658  top5:   6.748
	
=> Training epoch # 142	
 * Finished epoch # 142     top1:  24.814  top5:   6.885
	
=> Training epoch # 143	
 * Finished epoch # 143     top1:  25.039  top5:   7.207
	
=> Training epoch # 144	
 * Finished epoch # 144     top1:  25.039  top5:   6.719
	
=> Training epoch # 145	
 * Finished epoch # 145     top1:  24.854  top5:   6.738
	
=> Training epoch # 146	
 * Finished epoch # 146     top1:  24.629  top5:   6.836
	
=> Training epoch # 147	
 * Finished epoch # 147     top1:  24.824  top5:   6.924
	
=> Training epoch # 148	
 * Finished epoch # 148     top1:  24.941  top5:   6.738
	
=> Training epoch # 149	
 * Finished epoch # 149     top1:  24.932  top5:   6.885
	
=> Training epoch # 150	
 * Finished epoch # 150     top1:  24.775  top5:   6.748
	
=> Training epoch # 151	
 * Finished epoch # 151     top1:  25.420  top5:   7.354
	
=> Training epoch # 152	
 * Finished epoch # 152     top1:  25.156  top5:   7.295
	
=> Training epoch # 153	
 * Finished epoch # 153     top1:  25.020  top5:   6.826
	
=> Training epoch # 154	
 * Finished epoch # 154     top1:  24.863  top5:   6.787
	
=> Training epoch # 155	
 * Finished epoch # 155     top1:  25.391  top5:   7.031
	
=> Training epoch # 156	
 * Finished epoch # 156     top1:  25.283  top5:   6.973
	
=> Training epoch # 157	
 * Finished epoch # 157     top1:  24.736  top5:   6.748
	
=> Training epoch # 158	
 * Finished epoch # 158     top1:  25.303  top5:   7.031
	
=> Training epoch # 159	
 * Finished epoch # 159     top1:  25.078  top5:   7.139
	
=> Training epoch # 160	
 * Finished epoch # 160     top1:  24.258  top5:   6.621
	
 * Best model 	24.2578125	6.62109375	
=> Training epoch # 161	
 * Finished epoch # 161     top1:  24.971  top5:   6.816
	
=> Training epoch # 162	
 * Finished epoch # 162     top1:  24.658  top5:   6.631
	
=> Training epoch # 163	
 * Finished epoch # 163     top1:  25.186  top5:   6.826
	
=> Training epoch # 164	
 * Finished epoch # 164     top1:  24.941  top5:   6.797
	
=> Training epoch # 165	
 * Finished epoch # 165     top1:  24.775  top5:   6.846
	
=> Training epoch # 166	
 * Finished epoch # 166     top1:  24.834  top5:   6.846
	
=> Training epoch # 167	
 * Finished epoch # 167     top1:  25.010  top5:   6.807
	
=> Training epoch # 168	
 * Finished epoch # 168     top1:  24.990  top5:   7.080
	
=> Training epoch # 169	
 * Finished epoch # 169     top1:  24.609  top5:   6.748
	
=> Training epoch # 170	
 * Finished epoch # 170     top1:  25.098  top5:   7.256
	
=> Training epoch # 171	
 * Finished epoch # 171     top1:  24.756  top5:   6.885
	
=> Training epoch # 172	
 * Finished epoch # 172     top1:  24.844  top5:   6.982
	
=> Training epoch # 173	
 * Finished epoch # 173     top1:  24.580  top5:   6.826
	
=> Training epoch # 174	
 * Finished epoch # 174     top1:  24.941  top5:   6.973
	
=> Training epoch # 175	
 * Finished epoch # 175     top1:  24.746  top5:   6.680
	
=> Training epoch # 176	
 * Finished epoch # 176     top1:  24.502  top5:   6.807
	
=> Training epoch # 177	
 * Finished epoch # 177     top1:  25.156  top5:   7.334
	
=> Training epoch # 178	
 * Finished epoch # 178     top1:  24.893  top5:   6.914
	
=> Training epoch # 179	
 * Finished epoch # 179     top1:  24.736  top5:   6.865
	
=> Training epoch # 180	
 * Finished epoch # 180     top1:  24.463  top5:   6.982
	
=> Training epoch # 181	
 * Finished epoch # 181     top1:  25.068  top5:   6.865
	
=> Training epoch # 182	
 * Finished epoch # 182     top1:  24.980  top5:   6.914
	
=> Training epoch # 183	
 * Finished epoch # 183     top1:  24.727  top5:   7.021
	
=> Training epoch # 184	
 * Finished epoch # 184     top1:  25.342  top5:   7.002
	
=> Training epoch # 185	
 * Finished epoch # 185     top1:  25.010  top5:   7.061
	
=> Training epoch # 186	
 * Finished epoch # 186     top1:  24.678  top5:   6.660
	
=> Training epoch # 187	
 * Finished epoch # 187     top1:  24.893  top5:   7.119
	
=> Training epoch # 188	
 * Finished epoch # 188     top1:  24.717  top5:   6.826
	
=> Training epoch # 189	
 * Finished epoch # 189     top1:  24.531  top5:   6.807
	
=> Training epoch # 190	
 * Finished epoch # 190     top1:  25.137  top5:   6.689
	
=> Training epoch # 191	
 * Finished epoch # 191     top1:  24.453  top5:   6.885
	
=> Training epoch # 192	
 * Finished epoch # 192     top1:  24.473  top5:   6.797
	
=> Training epoch # 193	
 * Finished epoch # 193     top1:  24.492  top5:   6.719
	
=> Training epoch # 194	
 * Finished epoch # 194     top1:  24.795  top5:   6.719
	
=> Training epoch # 195	
 * Finished epoch # 195     top1:  24.512  top5:   6.719
	
=> Training epoch # 196	
 * Finished epoch # 196     top1:  24.824  top5:   6.768
	
=> Training epoch # 197	
 * Finished epoch # 197     top1:  25.049  top5:   6.670
	
=> Training epoch # 198	
 * Finished epoch # 198     top1:  24.863  top5:   7.109
	
=> Training epoch # 199	
 * Finished epoch # 199     top1:  25.361  top5:   6.768
	
=> Training epoch # 200	
 * Finished epoch # 200     top1:  24.287  top5:   6.709
	
 * Finished top1: 24.258  top5:  6.621	
