{
  cudnn : "fastest"
  LR : 0.1
  nThreads : 2
  nClasses : 0
  batchSize : 256
  testOnly : false
  netType : "resnet-bn-elu"
  resetClassifier : false
  shortcutType : "A"
  gen : "gen"
  nGPU : 1
  depth : 110
  weightDecay : 0.001
  data : ""
  dataset : "cifar100"
  epochNumber : 1
  manualSeed : 2
  resume : "results/results-bn-elu/try4/cifar100/110"
  optimState : "none"
  nEpochs : 200
  tenCrop : false
  shareGradInput : false
  backend : "cudnn"
  momentum : 0.9
  retrain : "none"
}
=> Creating model from file: models/resnet-bn-elu.lua	
 | ResNet-110 CIFAR-100	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1) without bias
  (2): nn.Sequential {
    [input -> (1) -> (2) -> output]
    (1): nn.SpatialBatchNormalization (4D) (16)
    (2): nn.ELU (alpha:1.000000)
  }
  (3): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (4): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 32, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (5): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 64, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (6): nn.Sequential {
    [input -> (1) -> (2) -> output]
    (1): nn.SpatialBatchNormalization (4D) (64)
    (2): nn.ELU (alpha:1.000000)
  }
  (7): cudnn.SpatialAveragePooling(8x8, 1,1)
  (8): nn.View(64)
  (9): nn.Linear(64 -> 100)
}
=> Training epoch # 1	
 * Finished epoch # 1     top1:  91.133  top5:  69.697
	
 * Best model 	91.1328125	69.697265625	
=> Training epoch # 2	
 * Finished epoch # 2     top1:  88.867  top5:  66.582
	
 * Best model 	88.8671875	66.58203125	
=> Training epoch # 3	
 * Finished epoch # 3     top1:  84.453  top5:  57.344
	
 * Best model 	84.453125	57.34375	
=> Training epoch # 4	
 * Finished epoch # 4     top1:  84.834  top5:  56.475
	
=> Training epoch # 5	
 * Finished epoch # 5     top1:  85.430  top5:  59.033
	
=> Training epoch # 6	
 * Finished epoch # 6     top1:  79.619  top5:  49.395
	
 * Best model 	79.619140625	49.39453125	
=> Training epoch # 7	
 * Finished epoch # 7     top1:  80.898  top5:  52.549
	
=> Training epoch # 8	
 * Finished epoch # 8     top1:  82.734  top5:  55.518
	
=> Training epoch # 9	
 * Finished epoch # 9     top1:  76.816  top5:  48.457
	
 * Best model 	76.81640625	48.45703125	
=> Training epoch # 10	
 * Finished epoch # 10     top1:  77.881  top5:  49.678
	
=> Training epoch # 11	
 * Finished epoch # 11     top1:  75.869  top5:  43.672
	
 * Best model 	75.869140625	43.671875	
=> Training epoch # 12	
 * Finished epoch # 12     top1:  77.549  top5:  45.400
	
=> Training epoch # 13	
 * Finished epoch # 13     top1:  75.566  top5:  44.307
	
 * Best model 	75.56640625	44.306640625	
=> Training epoch # 14	
 * Finished epoch # 14     top1:  73.525  top5:  42.656
	
 * Best model 	73.525390625	42.65625	
=> Training epoch # 15	
 * Finished epoch # 15     top1:  74.199  top5:  41.348
	
=> Training epoch # 16	
 * Finished epoch # 16     top1:  75.830  top5:  46.494
	
=> Training epoch # 17	
 * Finished epoch # 17     top1:  72.178  top5:  40.928
	
 * Best model 	72.177734375	40.927734375	
=> Training epoch # 18	
 * Finished epoch # 18     top1:  70.410  top5:  37.188
	
 * Best model 	70.41015625	37.1875	
=> Training epoch # 19	
 * Finished epoch # 19     top1:  72.227  top5:  38.662
	
=> Training epoch # 20	
 * Finished epoch # 20     top1:  69.453  top5:  37.139
	
 * Best model 	69.453125	37.138671875	
=> Training epoch # 21	
 * Finished epoch # 21     top1:  67.695  top5:  35.098
	
 * Best model 	67.6953125	35.09765625	
=> Training epoch # 22	
 * Finished epoch # 22     top1:  69.326  top5:  36.602
	
=> Training epoch # 23	
 * Finished epoch # 23     top1:  69.385  top5:  37.324
	
=> Training epoch # 24	
 * Finished epoch # 24     top1:  67.305  top5:  33.232
	
 * Best model 	67.3046875	33.232421875	
=> Training epoch # 25	
 * Finished epoch # 25     top1:  66.523  top5:  34.043
	
 * Best model 	66.5234375	34.04296875	
=> Training epoch # 26	
 * Finished epoch # 26     top1:  65.869  top5:  31.836
	
 * Best model 	65.869140625	31.8359375	
=> Training epoch # 27	
 * Finished epoch # 27     top1:  68.975  top5:  34.814
	
=> Training epoch # 28	
 * Finished epoch # 28     top1:  69.082  top5:  36.689
	
=> Training epoch # 29	
 * Finished epoch # 29     top1:  67.139  top5:  33.252
	
=> Training epoch # 30	
 * Finished epoch # 30     top1:  65.234  top5:  31.543
	
 * Best model 	65.234375	31.54296875	
=> Training epoch # 31	
 * Finished epoch # 31     top1:  70.752  top5:  39.307
	
=> Training epoch # 32	
 * Finished epoch # 32     top1:  67.422  top5:  34.189
	
=> Training epoch # 33	
 * Finished epoch # 33     top1:  69.033  top5:  36.689
	
=> Training epoch # 34	
 * Finished epoch # 34     top1:  71.709  top5:  41.572
	
=> Training epoch # 35	
 * Finished epoch # 35     top1:  64.688  top5:  31.865
	
 * Best model 	64.6875	31.865234375	
=> Training epoch # 36	
 * Finished epoch # 36     top1:  65.527  top5:  32.197
	
=> Training epoch # 37	
 * Finished epoch # 37     top1:  61.006  top5:  27.988
	
 * Best model 	61.005859375	27.98828125	
=> Training epoch # 38	
 * Finished epoch # 38     top1:  65.752  top5:  34.404
	
=> Training epoch # 39	
 * Finished epoch # 39     top1:  62.842  top5:  29.688
	
=> Training epoch # 40	
 * Finished epoch # 40     top1:  58.633  top5:  25.781
	
 * Best model 	58.6328125	25.78125	
=> Training epoch # 41	
 * Finished epoch # 41     top1:  64.453  top5:  32.266
	
=> Training epoch # 42	
 * Finished epoch # 42     top1:  66.973  top5:  32.012
	
=> Training epoch # 43	
 * Finished epoch # 43     top1:  74.990  top5:  40.059
	
=> Training epoch # 44	
 * Finished epoch # 44     top1:  70.215  top5:  39.023
	
=> Training epoch # 45	
 * Finished epoch # 45     top1:  63.662  top5:  31.592
	
=> Training epoch # 46	
 * Finished epoch # 46     top1:  61.592  top5:  28.037
	
=> Training epoch # 47	
 * Finished epoch # 47     top1:  62.461  top5:  29.727
	
=> Training epoch # 48	
 * Finished epoch # 48     top1:  61.992  top5:  30.225
	
=> Training epoch # 49	
 * Finished epoch # 49     top1:  61.709  top5:  27.451
	
=> Training epoch # 50	
 * Finished epoch # 50     top1:  59.482  top5:  26.279
	
=> Training epoch # 51	
 * Finished epoch # 51     top1:  59.873  top5:  26.592
	
=> Training epoch # 52	
 * Finished epoch # 52     top1:  64.971  top5:  31.084
	
=> Training epoch # 53	
 * Finished epoch # 53     top1:  59.668  top5:  27.900
	
=> Training epoch # 54	
 * Finished epoch # 54     top1:  61.885  top5:  29.053
	
=> Training epoch # 55	
 * Finished epoch # 55     top1:  61.475  top5:  28.340
	
=> Training epoch # 56	
 * Finished epoch # 56     top1:  59.971  top5:  29.160
	
=> Training epoch # 57	
 * Finished epoch # 57     top1:  66.699  top5:  34.434
	
=> Training epoch # 58	
 * Finished epoch # 58     top1:  67.598  top5:  36.982
	
=> Training epoch # 59	
 * Finished epoch # 59     top1:  63.574  top5:  30.889
	
=> Training epoch # 60	
 * Finished epoch # 60     top1:  57.686  top5:  25.469
	
 * Best model 	57.685546875	25.46875	
=> Training epoch # 61	
 * Finished epoch # 61     top1:  60.088  top5:  27.979
	
=> Training epoch # 62	
 * Finished epoch # 62     top1:  67.998  top5:  35.957
	
=> Training epoch # 63	
 * Finished epoch # 63     top1:  62.158  top5:  28.516
	
=> Training epoch # 64	
 * Finished epoch # 64     top1:  61.201  top5:  29.307
	
=> Training epoch # 65	
 * Finished epoch # 65     top1:  66.270  top5:  33.818
	
=> Training epoch # 66	
 * Finished epoch # 66     top1:  58.896  top5:  25.664
	
=> Training epoch # 67	
 * Finished epoch # 67     top1:  61.250  top5:  29.072
	
=> Training epoch # 68	
 * Finished epoch # 68     top1:  65.400  top5:  31.406
	
=> Training epoch # 69	
 * Finished epoch # 69     top1:  59.014  top5:  26.875
	
=> Training epoch # 70	
 * Finished epoch # 70     top1:  61.592  top5:  27.939
	
=> Training epoch # 71	
 * Finished epoch # 71     top1:  60.332  top5:  27.344
	
=> Training epoch # 72	
 * Finished epoch # 72     top1:  67.197  top5:  36.641
	
=> Training epoch # 73	
 * Finished epoch # 73     top1:  60.498  top5:  27.227
	
=> Training epoch # 74	
 * Finished epoch # 74     top1:  60.352  top5:  27.979
	
=> Training epoch # 75	
 * Finished epoch # 75     top1:  59.434  top5:  25.273
	
=> Training epoch # 76	
 * Finished epoch # 76     top1:  57.949  top5:  25.771
	
=> Training epoch # 77	
 * Finished epoch # 77     top1:  58.545  top5:  24.609
	
=> Training epoch # 78	
 * Finished epoch # 78     top1:  57.920  top5:  25.762
	
=> Training epoch # 79	
 * Finished epoch # 79     top1:  59.795  top5:  26.172
	
=> Training epoch # 80	
 * Finished epoch # 80     top1:  65.107  top5:  32.051
	
=> Training epoch # 81	
 * Finished epoch # 81     top1:  41.182  top5:  13.330
	
 * Best model 	41.181640625	13.330078125	
=> Training epoch # 82	
 * Finished epoch # 82     top1:  41.689  top5:  13.232
	
=> Training epoch # 83	
 * Finished epoch # 83     top1:  40.586  top5:  12.754
	
 * Best model 	40.5859375	12.75390625	
=> Training epoch # 84	
 * Finished epoch # 84     top1:  40.820  top5:  12.490
	
=> Training epoch # 85	
 * Finished epoch # 85     top1:  40.371  top5:  13.018
	
 * Best model 	40.37109375	13.017578125	
=> Training epoch # 86	
 * Finished epoch # 86     top1:  41.016  top5:  13.350
	
=> Training epoch # 87	
 * Finished epoch # 87     top1:  40.762  top5:  13.408
	
=> Training epoch # 88	
 * Finished epoch # 88     top1:  41.260  top5:  13.730
	
=> Training epoch # 89	
 * Finished epoch # 89     top1:  41.475  top5:  13.711
	
=> Training epoch # 90	
 * Finished epoch # 90     top1:  41.084  top5:  13.574
	
=> Training epoch # 91	
 * Finished epoch # 91     top1:  41.279  top5:  13.330
	
=> Training epoch # 92	
 * Finished epoch # 92     top1:  42.686  top5:  14.268
	
=> Training epoch # 93	
 * Finished epoch # 93     top1:  41.064  top5:  13.408
	
=> Training epoch # 94	
 * Finished epoch # 94     top1:  42.197  top5:  14.180
	
=> Training epoch # 95	
 * Finished epoch # 95     top1:  43.662  top5:  15.146
	
=> Training epoch # 96	
 * Finished epoch # 96     top1:  41.455  top5:  13.340
	
=> Training epoch # 97	
 * Finished epoch # 97     top1:  43.828  top5:  15.010
	
=> Training epoch # 98	
 * Finished epoch # 98     top1:  43.408  top5:  14.492
	
=> Training epoch # 99	
 * Finished epoch # 99     top1:  43.281  top5:  14.180
	
=> Training epoch # 100	
 * Finished epoch # 100     top1:  42.607  top5:  14.160
	
=> Training epoch # 101	
 * Finished epoch # 101     top1:  42.090  top5:  13.320
	
=> Training epoch # 102	
 * Finished epoch # 102     top1:  41.963  top5:  13.730
	
=> Training epoch # 103	
 * Finished epoch # 103     top1:  41.201  top5:  13.330
	
=> Training epoch # 104	
 * Finished epoch # 104     top1:  42.627  top5:  14.238
	
=> Training epoch # 105	
 * Finished epoch # 105     top1:  41.318  top5:  13.223
	
=> Training epoch # 106	
 * Finished epoch # 106     top1:  43.262  top5:  14.346
	
=> Training epoch # 107	
 * Finished epoch # 107     top1:  42.822  top5:  15.254
	
=> Training epoch # 108	
 * Finished epoch # 108     top1:  45.576  top5:  16.768
	
=> Training epoch # 109	
 * Finished epoch # 109     top1:  43.271  top5:  14.863
	
=> Training epoch # 110	
 * Finished epoch # 110     top1:  43.086  top5:  14.824
	
=> Training epoch # 111	
 * Finished epoch # 111     top1:  43.555  top5:  14.932
	
=> Training epoch # 112	
 * Finished epoch # 112     top1:  43.721  top5:  14.639
	
=> Training epoch # 113	
 * Finished epoch # 113     top1:  43.418  top5:  14.570
	
=> Training epoch # 114	
 * Finished epoch # 114     top1:  41.855  top5:  13.232
	
=> Training epoch # 115	
 * Finished epoch # 115     top1:  42.402  top5:  14.727
	
=> Training epoch # 116	
 * Finished epoch # 116     top1:  43.125  top5:  14.092
	
=> Training epoch # 117	
 * Finished epoch # 117     top1:  45.059  top5:  15.508
	
=> Training epoch # 118	
 * Finished epoch # 118     top1:  42.510  top5:  13.643
	
=> Training epoch # 119	
 * Finished epoch # 119     top1:  43.340  top5:  14.590
	
=> Training epoch # 120	
 * Finished epoch # 120     top1:  42.783  top5:  14.365
	
=> Training epoch # 121	
 * Finished epoch # 121     top1:  43.447  top5:  14.707
	
=> Training epoch # 122	
 * Finished epoch # 122     top1:  35.762  top5:  10.156
	
 * Best model 	35.76171875	10.15625	
=> Training epoch # 123	
 * Finished epoch # 123     top1:  35.713  top5:  10.059
	
 * Best model 	35.712890625	10.05859375	
=> Training epoch # 124	
 * Finished epoch # 124     top1:  35.254  top5:   9.775
	
 * Best model 	35.25390625	9.775390625	
=> Training epoch # 125	
 * Finished epoch # 125     top1:  35.439  top5:  10.000
	
=> Training epoch # 126	
 * Finished epoch # 126     top1:  35.488  top5:  10.166
	
=> Training epoch # 127	
 * Finished epoch # 127     top1:  35.645  top5:  10.039
	
=> Training epoch # 128	
 * Finished epoch # 128     top1:  35.254  top5:   9.707
	
=> Training epoch # 129	
 * Finished epoch # 129     top1:  35.039  top5:  10.010
	
 * Best model 	35.0390625	10.009765625	
=> Training epoch # 130	
 * Finished epoch # 130     top1:  34.766  top5:  10.166
	
 * Best model 	34.765625	10.166015625	
=> Training epoch # 131	
 * Finished epoch # 131     top1:  35.381  top5:  10.186
	
=> Training epoch # 132	
 * Finished epoch # 132     top1:  35.723  top5:  10.342
	
=> Training epoch # 133	
 * Finished epoch # 133     top1:  35.996  top5:  10.195
	
=> Training epoch # 134	
 * Finished epoch # 134     top1:  35.967  top5:  10.439
	
=> Training epoch # 135	
 * Finished epoch # 135     top1:  35.469  top5:   9.932
	
=> Training epoch # 136	
 * Finished epoch # 136     top1:  35.430  top5:  10.117
	
=> Training epoch # 137	
 * Finished epoch # 137     top1:  35.566  top5:  10.312
	
=> Training epoch # 138	
 * Finished epoch # 138     top1:  35.664  top5:   9.932
	
=> Training epoch # 139	
 * Finished epoch # 139     top1:  35.166  top5:   9.980
	
=> Training epoch # 140	
 * Finished epoch # 140     top1:  35.664  top5:   9.971
	
=> Training epoch # 141	
 * Finished epoch # 141     top1:  35.889  top5:  10.381
	
=> Training epoch # 142	
 * Finished epoch # 142     top1:  35.938  top5:   9.961
	
=> Training epoch # 143	
 * Finished epoch # 143     top1:  35.449  top5:  10.410
	
=> Training epoch # 144	
 * Finished epoch # 144     top1:  34.775  top5:   9.971
	
=> Training epoch # 145	
 * Finished epoch # 145     top1:  35.732  top5:  10.312
	
=> Training epoch # 146	
 * Finished epoch # 146     top1:  35.693  top5:  10.205
	
=> Training epoch # 147	
 * Finished epoch # 147     top1:  35.498  top5:   9.971
	
=> Training epoch # 148	
 * Finished epoch # 148     top1:  35.322  top5:  10.039
	
=> Training epoch # 149	
 * Finished epoch # 149     top1:  35.879  top5:  10.488
	
=> Training epoch # 150	
 * Finished epoch # 150     top1:  35.479  top5:  10.244
	
=> Training epoch # 151	
 * Finished epoch # 151     top1:  36.279  top5:  10.742
	
=> Training epoch # 152	
 * Finished epoch # 152     top1:  35.225  top5:  10.010
	
=> Training epoch # 153	
 * Finished epoch # 153     top1:  35.020  top5:   9.941
	
=> Training epoch # 154	
 * Finished epoch # 154     top1:  36.172  top5:  10.537
	
=> Training epoch # 155	
 * Finished epoch # 155     top1:  35.410  top5:  10.303
	
=> Training epoch # 156	
 * Finished epoch # 156     top1:  36.113  top5:  10.371
	
=> Training epoch # 157	
 * Finished epoch # 157     top1:  35.400  top5:  10.283
	
=> Training epoch # 158	
 * Finished epoch # 158     top1:  35.693  top5:  10.244
	
=> Training epoch # 159	
 * Finished epoch # 159     top1:  35.693  top5:  10.234
	
=> Training epoch # 160	
 * Finished epoch # 160     top1:  35.576  top5:  10.205
	
=> Training epoch # 161	
 * Finished epoch # 161     top1:  35.234  top5:  10.361
	
=> Training epoch # 162	
 * Finished epoch # 162     top1:  36.123  top5:  11.025
	
=> Training epoch # 163	
 * Finished epoch # 163     top1:  35.801  top5:  10.156
	
=> Training epoch # 164	
 * Finished epoch # 164     top1:  35.811  top5:  10.342
	
=> Training epoch # 165	
 * Finished epoch # 165     top1:  35.420  top5:  10.273
	
=> Training epoch # 166	
 * Finished epoch # 166     top1:  35.430  top5:  10.225
	
=> Training epoch # 167	
 * Finished epoch # 167     top1:  35.273  top5:   9.775
	
=> Training epoch # 168	
 * Finished epoch # 168     top1:  35.840  top5:  10.303
	
=> Training epoch # 169	
 * Finished epoch # 169     top1:  35.674  top5:  10.400
	
=> Training epoch # 170	
 * Finished epoch # 170     top1:  35.439  top5:  10.225
	
=> Training epoch # 171	
 * Finished epoch # 171     top1:  35.596  top5:  10.811
	
=> Training epoch # 172	
 * Finished epoch # 172     top1:  36.084  top5:  10.537
	
=> Training epoch # 173	
 * Finished epoch # 173     top1:  35.166  top5:  10.449
	
=> Training epoch # 174	
 * Finished epoch # 174     top1:  35.557  top5:  10.371
	
=> Training epoch # 175	
 * Finished epoch # 175     top1:  36.094  top5:  10.537
	
=> Training epoch # 176	
 * Finished epoch # 176     top1:  35.703  top5:  10.586
	
=> Training epoch # 177	
 * Finished epoch # 177     top1:  35.107  top5:  10.234
	
=> Training epoch # 178	
 * Finished epoch # 178     top1:  35.684  top5:  10.244
	
=> Training epoch # 179	
 * Finished epoch # 179     top1:  35.400  top5:  10.703
	
=> Training epoch # 180	
 * Finished epoch # 180     top1:  34.697  top5:  10.010
	
 * Best model 	34.697265625	10.009765625	
=> Training epoch # 181	
 * Finished epoch # 181     top1:  36.260  top5:  10.410
	
=> Training epoch # 182	
 * Finished epoch # 182     top1:  36.055  top5:  10.332
	
=> Training epoch # 183	
 * Finished epoch # 183     top1:  35.498  top5:  10.713
	
=> Training epoch # 184	
 * Finished epoch # 184     top1:  35.850  top5:  10.479
	
=> Training epoch # 185	
 * Finished epoch # 185     top1:  35.869  top5:   9.902
	
=> Training epoch # 186	
 * Finished epoch # 186     top1:  35.654  top5:  10.947
	
=> Training epoch # 187	
 * Finished epoch # 187     top1:  36.797  top5:  10.889
	
=> Training epoch # 188	
 * Finished epoch # 188     top1:  36.064  top5:  10.723
	
=> Training epoch # 189	
 * Finished epoch # 189     top1:  35.293  top5:  10.068
	
=> Training epoch # 190	
 * Finished epoch # 190     top1:  36.201  top5:  10.381
	
=> Training epoch # 191	
 * Finished epoch # 191     top1:  35.615  top5:  11.035
	
=> Training epoch # 192	
 * Finished epoch # 192     top1:  35.381  top5:  11.094
	
=> Training epoch # 193	
 * Finished epoch # 193     top1:  35.762  top5:  10.449
	
=> Training epoch # 194	
 * Finished epoch # 194     top1:  35.488  top5:  10.195
	
=> Training epoch # 195	
 * Finished epoch # 195     top1:  35.039  top5:   9.883
	
=> Training epoch # 196	
 * Finished epoch # 196     top1:  36.045  top5:  10.459
	
=> Training epoch # 197	
 * Finished epoch # 197     top1:  35.752  top5:  10.254
	
=> Training epoch # 198	
 * Finished epoch # 198     top1:  35.449  top5:  10.557
	
=> Training epoch # 199	
 * Finished epoch # 199     top1:  35.732  top5:  10.820
	
=> Training epoch # 200	
 * Finished epoch # 200     top1:  36.074  top5:  10.996
	
 * Finished top1: 34.697  top5: 10.010	
