{
  cudnn : "fastest"
  LR : 0.1
  nThreads : 2
  nClasses : 0
  batchSize : 256
  testOnly : false
  netType : "resnet"
  resetClassifier : false
  shortcutType : "A"
  gen : "gen"
  nGPU : 1
  depth : 110
  weightDecay : 0.001
  data : ""
  dataset : "cifar100"
  epochNumber : 1
  manualSeed : 2
  resume : "results/try4/cifar100/110"
  optimState : "none"
  nEpochs : 200
  tenCrop : false
  shareGradInput : false
  backend : "cudnn"
  momentum : 0.9
  retrain : "none"
}
=> Creating model from file: models/resnet.lua	
 | ResNet-110 CIFAR-100	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1) without bias
  (2): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedDiv
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedMul
  }
  (3): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (4): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 32, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (5): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 64, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> (3) -> output]
          |        (1): nn.ConstrainedDiv
          |        (2): nn.ELU (alpha:1.000000)
          |        (3): nn.ConstrainedMul
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (6): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> output]
    (1): nn.ConstrainedDiv
    (2): nn.ELU (alpha:1.000000)
    (3): nn.ConstrainedMul
  }
  (7): cudnn.SpatialAveragePooling(8x8, 1,1)
  (8): nn.View(64)
  (9): nn.Linear(64 -> 100)
}
=> Training epoch # 1	
 * Finished epoch # 1     top1:  84.697  top5:  59.365
	
 * Best model 	84.697265625	59.365234375	
=> Training epoch # 2	
 * Finished epoch # 2     top1:  75.439  top5:  44.121
	
 * Best model 	75.439453125	44.12109375	
=> Training epoch # 3	
 * Finished epoch # 3     top1:  65.781  top5:  33.389
	
 * Best model 	65.78125	33.388671875	
=> Training epoch # 4	
 * Finished epoch # 4     top1:  65.195  top5:  33.730
	
 * Best model 	65.1953125	33.73046875	
=> Training epoch # 5	
 * Finished epoch # 5     top1:  58.447  top5:  25.488
	
 * Best model 	58.447265625	25.48828125	
=> Training epoch # 6	
 * Finished epoch # 6     top1:  53.223  top5:  21.113
	
 * Best model 	53.22265625	21.11328125	
=> Training epoch # 7	
 * Finished epoch # 7     top1:  54.717  top5:  23.193
	
=> Training epoch # 8	
 * Finished epoch # 8     top1:  58.223  top5:  26.865
	
=> Training epoch # 9	
 * Finished epoch # 9     top1:  50.879  top5:  19.775
	
 * Best model 	50.87890625	19.775390625	
=> Training epoch # 10	
 * Finished epoch # 10     top1:  49.307  top5:  20.039
	
 * Best model 	49.306640625	20.0390625	
=> Training epoch # 11	
 * Finished epoch # 11     top1:  46.621  top5:  16.865
	
 * Best model 	46.62109375	16.865234375	
=> Training epoch # 12	
 * Finished epoch # 12     top1:  45.459  top5:  16.943
	
 * Best model 	45.458984375	16.943359375	
=> Training epoch # 13	
 * Finished epoch # 13     top1:  47.900  top5:  18.457
	
=> Training epoch # 14	
 * Finished epoch # 14     top1:  45.068  top5:  16.650
	
 * Best model 	45.068359375	16.650390625	
=> Training epoch # 15	
 * Finished epoch # 15     top1:  47.607  top5:  17.197
	
=> Training epoch # 16	
 * Finished epoch # 16     top1:  47.676  top5:  18.047
	
=> Training epoch # 17	
 * Finished epoch # 17     top1:  48.027  top5:  18.574
	
=> Training epoch # 18	
 * Finished epoch # 18     top1:  51.748  top5:  20.332
	
=> Training epoch # 19	
 * Finished epoch # 19     top1:  45.508  top5:  16.348
	
=> Training epoch # 20	
 * Finished epoch # 20     top1:  45.303  top5:  16.787
	
=> Training epoch # 21	
 * Finished epoch # 21     top1:  43.486  top5:  16.025
	
 * Best model 	43.486328125	16.025390625	
=> Training epoch # 22	
 * Finished epoch # 22     top1:  44.512  top5:  15.547
	
=> Training epoch # 23	
 * Finished epoch # 23     top1:  45.762  top5:  16.377
	
=> Training epoch # 24	
 * Finished epoch # 24     top1:  43.096  top5:  16.113
	
 * Best model 	43.095703125	16.11328125	
=> Training epoch # 25	
 * Finished epoch # 25     top1:  41.797  top5:  13.994
	
 * Best model 	41.796875	13.994140625	
=> Training epoch # 26	
 * Finished epoch # 26     top1:  42.168  top5:  14.189
	
=> Training epoch # 27	
 * Finished epoch # 27     top1:  43.652  top5:  15.674
	
=> Training epoch # 28	
 * Finished epoch # 28     top1:  44.180  top5:  15.078
	
=> Training epoch # 29	
 * Finished epoch # 29     top1:  42.148  top5:  14.258
	
=> Training epoch # 30	
 * Finished epoch # 30     top1:  46.553  top5:  18.096
	
=> Training epoch # 31	
 * Finished epoch # 31     top1:  45.225  top5:  15.791
	
=> Training epoch # 32	
 * Finished epoch # 32     top1:  41.963  top5:  13.799
	
=> Training epoch # 33	
 * Finished epoch # 33     top1:  46.426  top5:  17.490
	
=> Training epoch # 34	
 * Finished epoch # 34     top1:  47.881  top5:  18.193
	
=> Training epoch # 35	
 * Finished epoch # 35     top1:  43.193  top5:  15.137
	
=> Training epoch # 36	
 * Finished epoch # 36     top1:  42.676  top5:  15.303
	
=> Training epoch # 37	
 * Finished epoch # 37     top1:  44.766  top5:  17.031
	
=> Training epoch # 38	
 * Finished epoch # 38     top1:  45.703  top5:  16.514
	
=> Training epoch # 39	
 * Finished epoch # 39     top1:  44.795  top5:  15.742
	
=> Training epoch # 40	
 * Finished epoch # 40     top1:  42.705  top5:  14.658
	
=> Training epoch # 41	
 * Finished epoch # 41     top1:  42.637  top5:  13.906
	
=> Training epoch # 42	
 * Finished epoch # 42     top1:  44.590  top5:  16.250
	
=> Training epoch # 43	
 * Finished epoch # 43     top1:  44.072  top5:  14.941
	
=> Training epoch # 44	
 * Finished epoch # 44     top1:  41.396  top5:  14.541
	
 * Best model 	41.396484375	14.541015625	
=> Training epoch # 45	
 * Finished epoch # 45     top1:  42.178  top5:  14.707
	
=> Training epoch # 46	
 * Finished epoch # 46     top1:  44.189  top5:  15.977
	
=> Training epoch # 47	
 * Finished epoch # 47     top1:  43.311  top5:  15.137
	
=> Training epoch # 48	
 * Finished epoch # 48     top1:  42.793  top5:  14.814
	
=> Training epoch # 49	
 * Finished epoch # 49     top1:  42.090  top5:  14.932
	
=> Training epoch # 50	
 * Finished epoch # 50     top1:  41.484  top5:  13.467
	
=> Training epoch # 51	
 * Finished epoch # 51     top1:  41.846  top5:  15.352
	
=> Training epoch # 52	
 * Finished epoch # 52     top1:  45.752  top5:  16.162
	
=> Training epoch # 53	
 * Finished epoch # 53     top1:  42.090  top5:  14.463
	
=> Training epoch # 54	
 * Finished epoch # 54     top1:  41.719  top5:  15.674
	
=> Training epoch # 55	
 * Finished epoch # 55     top1:  41.631  top5:  13.789
	
=> Training epoch # 56	
 * Finished epoch # 56     top1:  41.348  top5:  13.662
	
 * Best model 	41.34765625	13.662109375	
=> Training epoch # 57	
 * Finished epoch # 57     top1:  42.373  top5:  14.043
	
=> Training epoch # 58	
 * Finished epoch # 58     top1:  42.852  top5:  14.746
	
=> Training epoch # 59	
 * Finished epoch # 59     top1:  41.191  top5:  13.193
	
 * Best model 	41.19140625	13.193359375	
=> Training epoch # 60	
 * Finished epoch # 60     top1:  42.002  top5:  15.127
	
=> Training epoch # 61	
 * Finished epoch # 61     top1:  40.801  top5:  13.281
	
 * Best model 	40.80078125	13.28125	
=> Training epoch # 62	
 * Finished epoch # 62     top1:  38.662  top5:  11.992
	
 * Best model 	38.662109375	11.9921875	
=> Training epoch # 63	
 * Finished epoch # 63     top1:  40.303  top5:  13.125
	
=> Training epoch # 64	
 * Finished epoch # 64     top1:  44.902  top5:  15.859
	
=> Training epoch # 65	
 * Finished epoch # 65     top1:  41.523  top5:  13.330
	
=> Training epoch # 66	
 * Finished epoch # 66     top1:  40.400  top5:  13.086
	
=> Training epoch # 67	
 * Finished epoch # 67     top1:  42.891  top5:  14.932
	
=> Training epoch # 68	
 * Finished epoch # 68     top1:  41.797  top5:  13.877
	
=> Training epoch # 69	
 * Finished epoch # 69     top1:  41.318  top5:  13.750
	
=> Training epoch # 70	
 * Finished epoch # 70     top1:  40.830  top5:  14.102
	
=> Training epoch # 71	
 * Finished epoch # 71     top1:  42.979  top5:  13.896
	
=> Training epoch # 72	
 * Finished epoch # 72     top1:  44.961  top5:  16.582
	
=> Training epoch # 73	
 * Finished epoch # 73     top1:  40.420  top5:  13.252
	
=> Training epoch # 74	
 * Finished epoch # 74     top1:  38.516  top5:  13.008
	
 * Best model 	38.515625	13.0078125	
=> Training epoch # 75	
 * Finished epoch # 75     top1:  42.178  top5:  13.604
	
=> Training epoch # 76	
 * Finished epoch # 76     top1:  38.027  top5:  12.402
	
 * Best model 	38.02734375	12.40234375	
=> Training epoch # 77	
 * Finished epoch # 77     top1:  40.889  top5:  14.727
	
=> Training epoch # 78	
 * Finished epoch # 78     top1:  41.729  top5:  13.613
	
=> Training epoch # 79	
 * Finished epoch # 79     top1:  52.695  top5:  22.031
	
=> Training epoch # 80	
 * Finished epoch # 80     top1:  42.031  top5:  14.229
	
=> Training epoch # 81	
 * Finished epoch # 81     top1:  27.939  top5:   6.748
	
 * Best model 	27.939453125	6.748046875	
=> Training epoch # 82	
 * Finished epoch # 82     top1:  26.963  top5:   6.855
	
 * Best model 	26.962890625	6.85546875	
=> Training epoch # 83	
 * Finished epoch # 83     top1:  27.139  top5:   6.826
	
=> Training epoch # 84	
 * Finished epoch # 84     top1:  27.275  top5:   6.660
	
=> Training epoch # 85	
 * Finished epoch # 85     top1:  27.334  top5:   7.070
	
=> Training epoch # 86	
 * Finished epoch # 86     top1:  27.773  top5:   7.109
	
=> Training epoch # 87	
 * Finished epoch # 87     top1:  27.432  top5:   7.314
	
=> Training epoch # 88	
 * Finished epoch # 88     top1:  27.461  top5:   7.295
	
=> Training epoch # 89	
 * Finished epoch # 89     top1:  27.871  top5:   7.744
	
=> Training epoch # 90	
 * Finished epoch # 90     top1:  28.154  top5:   7.148
	
=> Training epoch # 91	
 * Finished epoch # 91     top1:  28.691  top5:   7.666
	
=> Training epoch # 92	
 * Finished epoch # 92     top1:  28.525  top5:   7.979
	
=> Training epoch # 93	
 * Finished epoch # 93     top1:  28.135  top5:   7.666
	
=> Training epoch # 94	
 * Finished epoch # 94     top1:  28.545  top5:   8.154
	
=> Training epoch # 95	
 * Finished epoch # 95     top1:  28.242  top5:   7.803
	
=> Training epoch # 96	
 * Finished epoch # 96     top1:  27.939  top5:   7.686
	
=> Training epoch # 97	
 * Finished epoch # 97     top1:  28.672  top5:   8.057
	
=> Training epoch # 98	
 * Finished epoch # 98     top1:  28.057  top5:   7.715
	
=> Training epoch # 99	
 * Finished epoch # 99     top1:  29.346  top5:   8.574
	
=> Training epoch # 100	
 * Finished epoch # 100     top1:  27.773  top5:   8.076
	
=> Training epoch # 101	
 * Finished epoch # 101     top1:  28.242  top5:   7.734
	
=> Training epoch # 102	
 * Finished epoch # 102     top1:  28.799  top5:   8.486
	
=> Training epoch # 103	
 * Finished epoch # 103     top1:  28.281  top5:   8.125
	
=> Training epoch # 104	
 * Finished epoch # 104     top1:  29.443  top5:   8.457
	
=> Training epoch # 105	
 * Finished epoch # 105     top1:  29.590  top5:   8.428
	
=> Training epoch # 106	
 * Finished epoch # 106     top1:  28.701  top5:   7.773
	
=> Training epoch # 107	
 * Finished epoch # 107     top1:  28.721  top5:   8.301
	
=> Training epoch # 108	
 * Finished epoch # 108     top1:  28.252  top5:   7.832
	
=> Training epoch # 109	
 * Finished epoch # 109     top1:  28.447  top5:   8.555
	
=> Training epoch # 110	
 * Finished epoch # 110     top1:  28.818  top5:   8.428
	
=> Training epoch # 111	
 * Finished epoch # 111     top1:  29.268  top5:   8.682
	
=> Training epoch # 112	
 * Finished epoch # 112     top1:  29.170  top5:   8.730
	
=> Training epoch # 113	
 * Finished epoch # 113     top1:  29.961  top5:   8.877
	
=> Training epoch # 114	
 * Finished epoch # 114     top1:  29.150  top5:   8.730
	
=> Training epoch # 115	
 * Finished epoch # 115     top1:  29.658  top5:   8.770
	
=> Training epoch # 116	
 * Finished epoch # 116     top1:  30.391  top5:   8.955
	
=> Training epoch # 117	
 * Finished epoch # 117     top1:  30.010  top5:   8.955
	
=> Training epoch # 118	
 * Finished epoch # 118     top1:  29.062  top5:   9.004
	
=> Training epoch # 119	
 * Finished epoch # 119     top1:  29.307  top5:   9.062
	
=> Training epoch # 120	
 * Finished epoch # 120     top1:  29.111  top5:   8.203
	
=> Training epoch # 121	
 * Finished epoch # 121     top1:  28.857  top5:   8.096
	
=> Training epoch # 122	
 * Finished epoch # 122     top1:  26.611  top5:   7.207
	
 * Best model 	26.611328125	7.20703125	
=> Training epoch # 123	
 * Finished epoch # 123     top1:  26.123  top5:   7.266
	
 * Best model 	26.123046875	7.265625	
=> Training epoch # 124	
 * Finished epoch # 124     top1:  25.752  top5:   7.119
	
 * Best model 	25.751953125	7.119140625	
=> Training epoch # 125	
 * Finished epoch # 125     top1:  25.479  top5:   6.895
	
 * Best model 	25.478515625	6.89453125	
=> Training epoch # 126	
 * Finished epoch # 126     top1:  25.244  top5:   6.826
	
 * Best model 	25.244140625	6.826171875	
=> Training epoch # 127	
 * Finished epoch # 127     top1:  25.127  top5:   6.787
	
 * Best model 	25.126953125	6.787109375	
=> Training epoch # 128	
 * Finished epoch # 128     top1:  25.137  top5:   6.963
	
=> Training epoch # 129	
 * Finished epoch # 129     top1:  24.932  top5:   7.012
	
 * Best model 	24.931640625	7.01171875	
=> Training epoch # 130	
 * Finished epoch # 130     top1:  25.176  top5:   6.982
	
=> Training epoch # 131	
 * Finished epoch # 131     top1:  25.059  top5:   6.797
	
=> Training epoch # 132	
 * Finished epoch # 132     top1:  25.049  top5:   6.855
	
=> Training epoch # 133	
 * Finished epoch # 133     top1:  25.693  top5:   6.992
	
=> Training epoch # 134	
 * Finished epoch # 134     top1:  24.766  top5:   7.109
	
 * Best model 	24.765625	7.109375	
=> Training epoch # 135	
 * Finished epoch # 135     top1:  25.156  top5:   6.758
	
=> Training epoch # 136	
 * Finished epoch # 136     top1:  25.322  top5:   6.875
	
=> Training epoch # 137	
 * Finished epoch # 137     top1:  25.293  top5:   7.012
	
=> Training epoch # 138	
 * Finished epoch # 138     top1:  24.795  top5:   6.875
	
=> Training epoch # 139	
 * Finished epoch # 139     top1:  25.264  top5:   7.031
	
=> Training epoch # 140	
 * Finished epoch # 140     top1:  25.244  top5:   6.992
	
=> Training epoch # 141	
 * Finished epoch # 141     top1:  25.234  top5:   6.914
	
=> Training epoch # 142	
 * Finished epoch # 142     top1:  25.449  top5:   6.992
	
=> Training epoch # 143	
 * Finished epoch # 143     top1:  25.332  top5:   6.943
	
=> Training epoch # 144	
 * Finished epoch # 144     top1:  25.068  top5:   6.855
	
=> Training epoch # 145	
 * Finished epoch # 145     top1:  24.951  top5:   6.982
	
=> Training epoch # 146	
 * Finished epoch # 146     top1:  25.420  top5:   7.178
	
=> Training epoch # 147	
 * Finished epoch # 147     top1:  25.615  top5:   6.982
	
=> Training epoch # 148	
 * Finished epoch # 148     top1:  25.020  top5:   6.855
	
=> Training epoch # 149	
 * Finished epoch # 149     top1:  25.234  top5:   7.080
	
=> Training epoch # 150	
 * Finished epoch # 150     top1:  24.980  top5:   6.992
	
=> Training epoch # 151	
 * Finished epoch # 151     top1:  25.596  top5:   7.324
	
=> Training epoch # 152	
 * Finished epoch # 152     top1:  25.693  top5:   7.227
	
=> Training epoch # 153	
 * Finished epoch # 153     top1:  24.912  top5:   6.865
	
=> Training epoch # 154	
 * Finished epoch # 154     top1:  25.479  top5:   7.021
	
=> Training epoch # 155	
 * Finished epoch # 155     top1:  25.586  top5:   6.934
	
=> Training epoch # 156	
 * Finished epoch # 156     top1:  25.840  top5:   7.002
	
=> Training epoch # 157	
 * Finished epoch # 157     top1:  25.059  top5:   6.924
	
=> Training epoch # 158	
 * Finished epoch # 158     top1:  25.225  top5:   6.816
	
=> Training epoch # 159	
 * Finished epoch # 159     top1:  25.322  top5:   7.227
	
=> Training epoch # 160	
 * Finished epoch # 160     top1:  24.795  top5:   6.768
	
=> Training epoch # 161	
 * Finished epoch # 161     top1:  25.459  top5:   7.051
	
=> Training epoch # 162	
 * Finished epoch # 162     top1:  24.941  top5:   6.719
	
=> Training epoch # 163	
 * Finished epoch # 163     top1:  25.381  top5:   6.953
	
=> Training epoch # 164	
 * Finished epoch # 164     top1:  25.234  top5:   6.719
	
=> Training epoch # 165	
 * Finished epoch # 165     top1:  24.980  top5:   6.826
	
=> Training epoch # 166	
 * Finished epoch # 166     top1:  24.834  top5:   6.875
	
=> Training epoch # 167	
 * Finished epoch # 167     top1:  24.697  top5:   6.904
	
 * Best model 	24.697265625	6.904296875	
=> Training epoch # 168	
 * Finished epoch # 168     top1:  24.971  top5:   7.188
	
=> Training epoch # 169	
 * Finished epoch # 169     top1:  24.648  top5:   6.768
	
 * Best model 	24.6484375	6.767578125	
=> Training epoch # 170	
 * Finished epoch # 170     top1:  25.215  top5:   7.197
	
=> Training epoch # 171	
 * Finished epoch # 171     top1:  25.029  top5:   7.031
	
=> Training epoch # 172	
 * Finished epoch # 172     top1:  24.902  top5:   7.119
	
=> Training epoch # 173	
 * Finished epoch # 173     top1:  25.166  top5:   7.207
	
=> Training epoch # 174	
 * Finished epoch # 174     top1:  24.805  top5:   6.855
	
=> Training epoch # 175	
 * Finished epoch # 175     top1:  25.000  top5:   6.855
	
=> Training epoch # 176	
 * Finished epoch # 176     top1:  25.176  top5:   7.061
	
=> Training epoch # 177	
 * Finished epoch # 177     top1:  25.264  top5:   7.275
	
=> Training epoch # 178	
 * Finished epoch # 178     top1:  25.117  top5:   6.855
	
=> Training epoch # 179	
 * Finished epoch # 179     top1:  25.117  top5:   6.973
	
=> Training epoch # 180	
 * Finished epoch # 180     top1:  24.648  top5:   7.021
	
=> Training epoch # 181	
 * Finished epoch # 181     top1:  25.107  top5:   7.100
	
=> Training epoch # 182	
 * Finished epoch # 182     top1:  25.234  top5:   7.217
	
=> Training epoch # 183	
 * Finished epoch # 183     top1:  25.068  top5:   7.080
	
=> Training epoch # 184	
 * Finished epoch # 184     top1:  25.205  top5:   6.865
	
=> Training epoch # 185	
 * Finished epoch # 185     top1:  25.049  top5:   7.197
	
=> Training epoch # 186	
 * Finished epoch # 186     top1:  25.078  top5:   6.992
	
=> Training epoch # 187	
 * Finished epoch # 187     top1:  25.127  top5:   7.510
	
=> Training epoch # 188	
 * Finished epoch # 188     top1:  25.059  top5:   6.992
	
=> Training epoch # 189	
 * Finished epoch # 189     top1:  25.156  top5:   7.031
	
=> Training epoch # 190	
 * Finished epoch # 190     top1:  25.234  top5:   6.943
	
=> Training epoch # 191	
 * Finished epoch # 191     top1:  24.746  top5:   6.855
	
=> Training epoch # 192	
 * Finished epoch # 192     top1:  24.746  top5:   6.875
	
=> Training epoch # 193	
 * Finished epoch # 193     top1:  24.980  top5:   7.012
	
=> Training epoch # 194	
 * Finished epoch # 194     top1:  25.254  top5:   7.275
	
=> Training epoch # 195	
 * Finished epoch # 195     top1:  24.482  top5:   6.943
	
 * Best model 	24.482421875	6.943359375	
=> Training epoch # 196	
 * Finished epoch # 196     top1:  24.863  top5:   6.924
	
=> Training epoch # 197	
 * Finished epoch # 197     top1:  25.186  top5:   7.109
	
=> Training epoch # 198	
 * Finished epoch # 198     top1:  24.902  top5:   7.256
	
=> Training epoch # 199	
 * Finished epoch # 199     top1:  25.586  top5:   7.090
	
=> Training epoch # 200	
 * Finished epoch # 200     top1:  24.570  top5:   6.904
	
 * Finished top1: 24.482  top5:  6.943	
