{
  cudnn : "fastest"
  LR : 0.1
  nThreads : 2
  nClasses : 0
  batchSize : 256
  testOnly : false
  netType : "resnet-bn-elu"
  resetClassifier : false
  shortcutType : "A"
  gen : "gen"
  nGPU : 1
  depth : 110
  weightDecay : 0.001
  data : ""
  dataset : "cifar100"
  epochNumber : 1
  manualSeed : 2
  resume : "results/results-bn-elu/try5/cifar100/110"
  optimState : "none"
  nEpochs : 200
  tenCrop : false
  shareGradInput : false
  backend : "cudnn"
  momentum : 0.9
  retrain : "none"
}
=> Creating model from file: models/resnet-bn-elu.lua	
 | ResNet-110 CIFAR-100	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1) without bias
  (2): nn.Sequential {
    [input -> (1) -> (2) -> output]
    (1): nn.SpatialBatchNormalization (4D) (16)
    (2): nn.ELU (alpha:1.000000)
  }
  (3): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (16)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(16 -> 16, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (16)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (4): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 32, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (32)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (32)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (5): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(32 -> 64, 3x3, 2,2, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Sequential {
                 [input -> (1) -> (2) -> output]
                 (1): nn.SpatialAveragePooling(1x1, 2,2)
                 (2): nn.Concat {
                   input
                     |`-> (1): nn.Identity
                      `-> (2): nn.MulConstant
                      ... -> output
                 }
               }
           ... -> output
      }
      (2): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (5): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (6): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (7): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (8): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (9): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (10): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (11): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (12): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (13): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (14): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (15): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (16): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (17): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (18): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> output]
          |      (1): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (2): nn.Sequential {
          |        [input -> (1) -> (2) -> output]
          |        (1): nn.SpatialBatchNormalization (4D) (64)
          |        (2): nn.ELU (alpha:1.000000)
          |      }
          |      (3): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1) without bias
          |      (4): nn.SpatialBatchNormalization (4D) (64)
          |    }
           `-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (6): nn.Sequential {
    [input -> (1) -> (2) -> output]
    (1): nn.SpatialBatchNormalization (4D) (64)
    (2): nn.ELU (alpha:1.000000)
  }
  (7): cudnn.SpatialAveragePooling(8x8, 1,1)
  (8): nn.View(64)
  (9): nn.Linear(64 -> 100)
}
=> Training epoch # 1	
 * Finished epoch # 1     top1:  92.188  top5:  72.744
	
 * Best model 	92.1875	72.744140625	
=> Training epoch # 2	
 * Finished epoch # 2     top1:  90.068  top5:  66.914
	
 * Best model 	90.068359375	66.9140625	
=> Training epoch # 3	
 * Finished epoch # 3     top1:  85.840  top5:  58.877
	
 * Best model 	85.83984375	58.876953125	
=> Training epoch # 4	
 * Finished epoch # 4     top1:  84.590  top5:  55.947
	
 * Best model 	84.58984375	55.947265625	
=> Training epoch # 5	
 * Finished epoch # 5     top1:  81.367  top5:  51.943
	
 * Best model 	81.3671875	51.943359375	
=> Training epoch # 6	
 * Finished epoch # 6     top1:  82.158  top5:  54.746
	
=> Training epoch # 7	
 * Finished epoch # 7     top1:  78.789  top5:  48.682
	
 * Best model 	78.7890625	48.681640625	
=> Training epoch # 8	
 * Finished epoch # 8     top1:  83.496  top5:  57.031
	
=> Training epoch # 9	
 * Finished epoch # 9     top1:  76.045  top5:  45.547
	
 * Best model 	76.044921875	45.546875	
=> Training epoch # 10	
 * Finished epoch # 10     top1:  77.500  top5:  45.713
	
=> Training epoch # 11	
 * Finished epoch # 11     top1:  77.988  top5:  47.041
	
=> Training epoch # 12	
 * Finished epoch # 12     top1:  74.150  top5:  42.461
	
 * Best model 	74.150390625	42.4609375	
=> Training epoch # 13	
 * Finished epoch # 13     top1:  74.072  top5:  43.818
	
 * Best model 	74.072265625	43.818359375	
=> Training epoch # 14	
 * Finished epoch # 14     top1:  72.041  top5:  39.326
	
 * Best model 	72.041015625	39.326171875	
=> Training epoch # 15	
 * Finished epoch # 15     top1:  72.256  top5:  41.582
	
=> Training epoch # 16	
 * Finished epoch # 16     top1:  73.164  top5:  39.014
	
=> Training epoch # 17	
 * Finished epoch # 17     top1:  73.086  top5:  40.146
	
=> Training epoch # 18	
 * Finished epoch # 18     top1:  71.602  top5:  36.807
	
 * Best model 	71.6015625	36.806640625	
=> Training epoch # 19	
 * Finished epoch # 19     top1:  72.168  top5:  39.238
	
=> Training epoch # 20	
 * Finished epoch # 20     top1:  67.041  top5:  33.164
	
 * Best model 	67.041015625	33.1640625	
=> Training epoch # 21	
 * Finished epoch # 21     top1:  70.977  top5:  37.949
	
=> Training epoch # 22	
 * Finished epoch # 22     top1:  67.998  top5:  35.645
	
=> Training epoch # 23	
 * Finished epoch # 23     top1:  66.240  top5:  32.979
	
 * Best model 	66.240234375	32.978515625	
=> Training epoch # 24	
 * Finished epoch # 24     top1:  66.338  top5:  34.385
	
=> Training epoch # 25	
 * Finished epoch # 25     top1:  66.357  top5:  33.701
	
=> Training epoch # 26	
 * Finished epoch # 26     top1:  69.766  top5:  35.820
	
=> Training epoch # 27	
 * Finished epoch # 27     top1:  66.221  top5:  34.219
	
 * Best model 	66.220703125	34.21875	
=> Training epoch # 28	
 * Finished epoch # 28     top1:  72.686  top5:  41.084
	
=> Training epoch # 29	
 * Finished epoch # 29     top1:  68.301  top5:  35.420
	
=> Training epoch # 30	
 * Finished epoch # 30     top1:  62.334  top5:  29.307
	
 * Best model 	62.333984375	29.306640625	
=> Training epoch # 31	
 * Finished epoch # 31     top1:  66.357  top5:  33.320
	
=> Training epoch # 32	
 * Finished epoch # 32     top1:  62.354  top5:  29.424
	
=> Training epoch # 33	
 * Finished epoch # 33     top1:  62.598  top5:  29.873
	
=> Training epoch # 34	
 * Finished epoch # 34     top1:  70.176  top5:  39.326
	
=> Training epoch # 35	
 * Finished epoch # 35     top1:  72.578  top5:  40.137
	
=> Training epoch # 36	
 * Finished epoch # 36     top1:  68.555  top5:  36.670
	
=> Training epoch # 37	
 * Finished epoch # 37     top1:  59.277  top5:  25.801
	
 * Best model 	59.27734375	25.80078125	
=> Training epoch # 38	
 * Finished epoch # 38     top1:  62.871  top5:  28.701
	
=> Training epoch # 39	
 * Finished epoch # 39     top1:  63.105  top5:  29.463
	
=> Training epoch # 40	
 * Finished epoch # 40     top1:  65.068  top5:  32.119
	
=> Training epoch # 41	
 * Finished epoch # 41     top1:  62.529  top5:  28.682
	
=> Training epoch # 42	
 * Finished epoch # 42     top1:  64.209  top5:  30.059
	
=> Training epoch # 43	
 * Finished epoch # 43     top1:  65.957  top5:  32.559
	
=> Training epoch # 44	
 * Finished epoch # 44     top1:  66.045  top5:  34.365
	
=> Training epoch # 45	
 * Finished epoch # 45     top1:  64.072  top5:  32.080
	
=> Training epoch # 46	
 * Finished epoch # 46     top1:  70.586  top5:  37.725
	
=> Training epoch # 47	
 * Finished epoch # 47     top1:  67.051  top5:  34.033
	
=> Training epoch # 48	
 * Finished epoch # 48     top1:  67.441  top5:  33.418
	
=> Training epoch # 49	
 * Finished epoch # 49     top1:  63.965  top5:  30.791
	
=> Training epoch # 50	
 * Finished epoch # 50     top1:  65.625  top5:  32.939
	
=> Training epoch # 51	
 * Finished epoch # 51     top1:  71.445  top5:  40.166
	
=> Training epoch # 52	
 * Finished epoch # 52     top1:  65.156  top5:  31.807
	
=> Training epoch # 53	
 * Finished epoch # 53     top1:  60.264  top5:  28.154
	
=> Training epoch # 54	
 * Finished epoch # 54     top1:  60.283  top5:  27.324
	
=> Training epoch # 55	
 * Finished epoch # 55     top1:  61.045  top5:  26.953
	
=> Training epoch # 56	
 * Finished epoch # 56     top1:  57.041  top5:  26.455
	
 * Best model 	57.041015625	26.455078125	
=> Training epoch # 57	
 * Finished epoch # 57     top1:  66.055  top5:  31.787
	
=> Training epoch # 58	
 * Finished epoch # 58     top1:  63.916  top5:  30.439
	
=> Training epoch # 59	
 * Finished epoch # 59     top1:  66.602  top5:  32.158
	
=> Training epoch # 60	
 * Finished epoch # 60     top1:  64.590  top5:  32.666
	
=> Training epoch # 61	
 * Finished epoch # 61     top1:  59.600  top5:  27.959
	
=> Training epoch # 62	
 * Finished epoch # 62     top1:  62.432  top5:  29.932
	
=> Training epoch # 63	
 * Finished epoch # 63     top1:  64.082  top5:  30.732
	
=> Training epoch # 64	
 * Finished epoch # 64     top1:  64.385  top5:  30.771
	
=> Training epoch # 65	
 * Finished epoch # 65     top1:  69.854  top5:  36.846
	
=> Training epoch # 66	
 * Finished epoch # 66     top1:  59.590  top5:  27.383
	
=> Training epoch # 67	
 * Finished epoch # 67     top1:  65.898  top5:  34.229
	
=> Training epoch # 68	
 * Finished epoch # 68     top1:  61.543  top5:  27.529
	
=> Training epoch # 69	
 * Finished epoch # 69     top1:  69.258  top5:  35.703
	
=> Training epoch # 70	
 * Finished epoch # 70     top1:  58.613  top5:  25.820
	
=> Training epoch # 71	
 * Finished epoch # 71     top1:  58.105  top5:  25.840
	
=> Training epoch # 72	
 * Finished epoch # 72     top1:  64.307  top5:  30.566
	
=> Training epoch # 73	
 * Finished epoch # 73     top1:  57.715  top5:  25.537
	
=> Training epoch # 74	
 * Finished epoch # 74     top1:  63.770  top5:  30.889
	
=> Training epoch # 75	
 * Finished epoch # 75     top1:  59.492  top5:  27.939
	
=> Training epoch # 76	
 * Finished epoch # 76     top1:  66.650  top5:  36.855
	
=> Training epoch # 77	
 * Finished epoch # 77     top1:  65.225  top5:  32.656
	
=> Training epoch # 78	
 * Finished epoch # 78     top1:  57.148  top5:  23.271
	
=> Training epoch # 79	
 * Finished epoch # 79     top1:  60.898  top5:  28.174
	
=> Training epoch # 80	
 * Finished epoch # 80     top1:  65.410  top5:  31.953
	
=> Training epoch # 81	
 * Finished epoch # 81     top1:  41.826  top5:  12.969
	
 * Best model 	41.826171875	12.96875	
=> Training epoch # 82	
 * Finished epoch # 82     top1:  40.215  top5:  13.291
	
 * Best model 	40.21484375	13.291015625	
=> Training epoch # 83	
 * Finished epoch # 83     top1:  40.400  top5:  12.930
	
=> Training epoch # 84	
 * Finished epoch # 84     top1:  41.201  top5:  13.184
	
=> Training epoch # 85	
 * Finished epoch # 85     top1:  41.953  top5:  13.359
	
=> Training epoch # 86	
 * Finished epoch # 86     top1:  40.537  top5:  13.457
	
=> Training epoch # 87	
 * Finished epoch # 87     top1:  40.156  top5:  13.018
	
 * Best model 	40.15625	13.017578125	
=> Training epoch # 88	
 * Finished epoch # 88     top1:  40.869  top5:  12.471
	
=> Training epoch # 89	
 * Finished epoch # 89     top1:  41.045  top5:  13.564
	
=> Training epoch # 90	
 * Finished epoch # 90     top1:  41.143  top5:  13.652
	
=> Training epoch # 91	
 * Finished epoch # 91     top1:  41.787  top5:  13.398
	
=> Training epoch # 92	
 * Finished epoch # 92     top1:  42.012  top5:  13.770
	
=> Training epoch # 93	
 * Finished epoch # 93     top1:  40.850  top5:  13.203
	
=> Training epoch # 94	
 * Finished epoch # 94     top1:  41.230  top5:  13.984
	
=> Training epoch # 95	
 * Finished epoch # 95     top1:  41.641  top5:  13.643
	
=> Training epoch # 96	
 * Finished epoch # 96     top1:  41.953  top5:  13.438
	
=> Training epoch # 97	
 * Finished epoch # 97     top1:  45.654  top5:  16.318
	
=> Training epoch # 98	
 * Finished epoch # 98     top1:  42.266  top5:  14.082
	
=> Training epoch # 99	
 * Finished epoch # 99     top1:  42.217  top5:  14.434
	
=> Training epoch # 100	
 * Finished epoch # 100     top1:  42.549  top5:  14.414
	
=> Training epoch # 101	
 * Finished epoch # 101     top1:  42.451  top5:  14.678
	
=> Training epoch # 102	
 * Finished epoch # 102     top1:  43.701  top5:  15.273
	
=> Training epoch # 103	
 * Finished epoch # 103     top1:  42.998  top5:  14.375
	
=> Training epoch # 104	
 * Finished epoch # 104     top1:  43.359  top5:  15.166
	
=> Training epoch # 105	
 * Finished epoch # 105     top1:  43.213  top5:  14.609
	
=> Training epoch # 106	
 * Finished epoch # 106     top1:  42.510  top5:  13.916
	
=> Training epoch # 107	
 * Finished epoch # 107     top1:  40.996  top5:  13.584
	
=> Training epoch # 108	
 * Finished epoch # 108     top1:  44.658  top5:  15.977
	
=> Training epoch # 109	
 * Finished epoch # 109     top1:  42.754  top5:  13.691
	
=> Training epoch # 110	
 * Finished epoch # 110     top1:  43.789  top5:  14.443
	
=> Training epoch # 111	
 * Finished epoch # 111     top1:  43.164  top5:  13.975
	
=> Training epoch # 112	
 * Finished epoch # 112     top1:  42.256  top5:  13.750
	
=> Training epoch # 113	
 * Finished epoch # 113     top1:  44.854  top5:  15.596
	
=> Training epoch # 114	
 * Finished epoch # 114     top1:  41.572  top5:  13.857
	
=> Training epoch # 115	
 * Finished epoch # 115     top1:  44.395  top5:  15.332
	
=> Training epoch # 116	
 * Finished epoch # 116     top1:  43.691  top5:  15.127
	
=> Training epoch # 117	
 * Finished epoch # 117     top1:  43.848  top5:  15.283
	
=> Training epoch # 118	
 * Finished epoch # 118     top1:  44.141  top5:  14.346
	
=> Training epoch # 119	
 * Finished epoch # 119     top1:  42.812  top5:  13.965
	
=> Training epoch # 120	
 * Finished epoch # 120     top1:  43.076  top5:  14.658
	
=> Training epoch # 121	
 * Finished epoch # 121     top1:  44.883  top5:  16.104
	
=> Training epoch # 122	
 * Finished epoch # 122     top1:  36.074  top5:  10.625
	
 * Best model 	36.07421875	10.625	
=> Training epoch # 123	
 * Finished epoch # 123     top1:  35.361  top5:  10.215
	
 * Best model 	35.361328125	10.21484375	
=> Training epoch # 124	
 * Finished epoch # 124     top1:  35.508  top5:  10.010
	
=> Training epoch # 125	
 * Finished epoch # 125     top1:  34.971  top5:   9.980
	
 * Best model 	34.970703125	9.98046875	
=> Training epoch # 126	
 * Finished epoch # 126     top1:  35.459  top5:  10.039
	
=> Training epoch # 127	
 * Finished epoch # 127     top1:  35.469  top5:   9.893
	
=> Training epoch # 128	
 * Finished epoch # 128     top1:  35.420  top5:   9.873
	
=> Training epoch # 129	
 * Finished epoch # 129     top1:  35.557  top5:   9.805
	
=> Training epoch # 130	
 * Finished epoch # 130     top1:  35.137  top5:  10.361
	
=> Training epoch # 131	
 * Finished epoch # 131     top1:  35.928  top5:  10.098
	
=> Training epoch # 132	
 * Finished epoch # 132     top1:  35.459  top5:  10.029
	
=> Training epoch # 133	
 * Finished epoch # 133     top1:  35.352  top5:  10.215
	
=> Training epoch # 134	
 * Finished epoch # 134     top1:  35.127  top5:  10.098
	
=> Training epoch # 135	
 * Finished epoch # 135     top1:  34.795  top5:   9.863
	
 * Best model 	34.794921875	9.86328125	
=> Training epoch # 136	
 * Finished epoch # 136     top1:  36.084  top5:  10.293
	
=> Training epoch # 137	
 * Finished epoch # 137     top1:  34.941  top5:  10.332
	
=> Training epoch # 138	
 * Finished epoch # 138     top1:  35.469  top5:   9.756
	
=> Training epoch # 139	
 * Finished epoch # 139     top1:  34.912  top5:   9.814
	
=> Training epoch # 140	
 * Finished epoch # 140     top1:  35.400  top5:  10.088
	
=> Training epoch # 141	
 * Finished epoch # 141     top1:  35.723  top5:  10.352
	
=> Training epoch # 142	
 * Finished epoch # 142     top1:  35.137  top5:   9.971
	
=> Training epoch # 143	
 * Finished epoch # 143     top1:  35.547  top5:  10.215
	
=> Training epoch # 144	
 * Finished epoch # 144     top1:  35.645  top5:  10.098
	
=> Training epoch # 145	
 * Finished epoch # 145     top1:  35.469  top5:   9.990
	
=> Training epoch # 146	
 * Finished epoch # 146     top1:  35.781  top5:   9.902
	
=> Training epoch # 147	
 * Finished epoch # 147     top1:  35.273  top5:  10.088
	
=> Training epoch # 148	
 * Finished epoch # 148     top1:  34.746  top5:   9.941
	
 * Best model 	34.74609375	9.94140625	
=> Training epoch # 149	
 * Finished epoch # 149     top1:  35.234  top5:  10.195
	
=> Training epoch # 150	
 * Finished epoch # 150     top1:  35.879  top5:  10.225
	
=> Training epoch # 151	
 * Finished epoch # 151     top1:  35.400  top5:  10.410
	
=> Training epoch # 152	
 * Finished epoch # 152     top1:  35.127  top5:   9.912
	
=> Training epoch # 153	
 * Finished epoch # 153     top1:  35.176  top5:   9.814
	
=> Training epoch # 154	
 * Finished epoch # 154     top1:  35.176  top5:  10.195
	
=> Training epoch # 155	
 * Finished epoch # 155     top1:  35.186  top5:  10.107
	
=> Training epoch # 156	
 * Finished epoch # 156     top1:  35.449  top5:   9.844
	
=> Training epoch # 157	
 * Finished epoch # 157     top1:  35.117  top5:   9.893
	
=> Training epoch # 158	
 * Finished epoch # 158     top1:  35.283  top5:  10.039
	
=> Training epoch # 159	
 * Finished epoch # 159     top1:  35.508  top5:  10.312
	
=> Training epoch # 160	
 * Finished epoch # 160     top1:  35.996  top5:  10.117
	
=> Training epoch # 161	
 * Finished epoch # 161     top1:  35.107  top5:  10.322
	
=> Training epoch # 162	
 * Finished epoch # 162     top1:  35.742  top5:  10.654
	
=> Training epoch # 163	
 * Finished epoch # 163     top1:  35.615  top5:  10.293
	
=> Training epoch # 164	
 * Finished epoch # 164     top1:  35.293  top5:  10.146
	
=> Training epoch # 165	
 * Finished epoch # 165     top1:  35.430  top5:  10.205
	
=> Training epoch # 166	
 * Finished epoch # 166     top1:  35.811  top5:  10.088
	
=> Training epoch # 167	
 * Finished epoch # 167     top1:  35.400  top5:   9.941
	
=> Training epoch # 168	
 * Finished epoch # 168     top1:  35.479  top5:  10.371
	
=> Training epoch # 169	
 * Finished epoch # 169     top1:  35.840  top5:  10.264
	
=> Training epoch # 170	
 * Finished epoch # 170     top1:  35.439  top5:  10.283
	
=> Training epoch # 171	
 * Finished epoch # 171     top1:  35.557  top5:  10.752
	
=> Training epoch # 172	
 * Finished epoch # 172     top1:  35.693  top5:  10.322
	
=> Training epoch # 173	
 * Finished epoch # 173     top1:  35.312  top5:   9.805
	
=> Training epoch # 174	
 * Finished epoch # 174     top1:  35.342  top5:  10.254
	
=> Training epoch # 175	
 * Finished epoch # 175     top1:  35.801  top5:  10.342
	
=> Training epoch # 176	
 * Finished epoch # 176     top1:  35.400  top5:  10.068
	
=> Training epoch # 177	
 * Finished epoch # 177     top1:  35.439  top5:   9.814
	
=> Training epoch # 178	
 * Finished epoch # 178     top1:  35.293  top5:  10.166
	
=> Training epoch # 179	
 * Finished epoch # 179     top1:  35.410  top5:  10.615
	
=> Training epoch # 180	
 * Finished epoch # 180     top1:  34.961  top5:  10.098
	
=> Training epoch # 181	
 * Finished epoch # 181     top1:  36.367  top5:  10.166
	
=> Training epoch # 182	
 * Finished epoch # 182     top1:  35.000  top5:  10.020
	
=> Training epoch # 183	
 * Finished epoch # 183     top1:  35.811  top5:  11.055
	
=> Training epoch # 184	
 * Finished epoch # 184     top1:  35.449  top5:   9.932
	
=> Training epoch # 185	
 * Finished epoch # 185     top1:  35.537  top5:  10.518
	
=> Training epoch # 186	
 * Finished epoch # 186     top1:  35.869  top5:  10.742
	
=> Training epoch # 187	
 * Finished epoch # 187     top1:  35.479  top5:  10.625
	
=> Training epoch # 188	
 * Finished epoch # 188     top1:  36.035  top5:  10.674
	
=> Training epoch # 189	
 * Finished epoch # 189     top1:  35.674  top5:  10.801
	
=> Training epoch # 190	
 * Finished epoch # 190     top1:  36.523  top5:  10.742
	
=> Training epoch # 191	
 * Finished epoch # 191     top1:  35.811  top5:  10.684
	
=> Training epoch # 192	
 * Finished epoch # 192     top1:  35.264  top5:  10.117
	
=> Training epoch # 193	
 * Finished epoch # 193     top1:  35.928  top5:  10.225
	
=> Training epoch # 194	
 * Finished epoch # 194     top1:  35.479  top5:   9.834
	
=> Training epoch # 195	
 * Finished epoch # 195     top1:  35.342  top5:  10.244
	
=> Training epoch # 196	
 * Finished epoch # 196     top1:  35.791  top5:  10.459
	
=> Training epoch # 197	
 * Finished epoch # 197     top1:  35.479  top5:   9.766
	
=> Training epoch # 198	
 * Finished epoch # 198     top1:  35.137  top5:  10.000
	
=> Training epoch # 199	
 * Finished epoch # 199     top1:  35.820  top5:  10.352
	
=> Training epoch # 200	
 * Finished epoch # 200     top1:  35.986  top5:  10.166
	
 * Finished top1: 34.746  top5:  9.941	
